import "./chunk-JYWRH6CQ.js";
import {
  Fragment,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  guardReactiveProps,
  mergeProps,
  normalizeClass,
  normalizeProps,
  openBlock,
  renderList,
  renderSlot,
  resolveComponent,
  resolveDirective,
  toDisplayString,
  vModelText,
  withDirectives,
  withKeys,
  withModifiers
} from "./chunk-A563ID7W.js";
import "./chunk-ROME4SDB.js";

// node_modules/vue3-tags-input/dist/vue3-tags-input.esm.js
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function createCommonjsModule(fn, basedir, module) {
  return module = {
    path: basedir,
    exports: {},
    require: function(path, base) {
      return commonjsRequire(path, base === void 0 || base === null ? module.path : base);
    }
  }, fn(module, module.exports), module.exports;
}
function commonjsRequire() {
  throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
}
var vClickOutside_umd = createCommonjsModule(function(module, exports) {
  !function(e, n) {
    module.exports = n();
  }(commonjsGlobal, function() {
    var e = "__v-click-outside", n = "undefined" != typeof window, t = "undefined" != typeof navigator, r = n && ("ontouchstart" in window || t && navigator.msMaxTouchPoints > 0) ? ["touchstart"] : ["click"], i = function(e2) {
      var n2 = e2.event, t2 = e2.handler;
      (0, e2.middleware)(n2) && t2(n2);
    }, a = function(n2, t2) {
      var a2 = function(e2) {
        var n3 = "function" == typeof e2;
        if (!n3 && "object" != typeof e2)
          throw new Error("v-click-outside: Binding value must be a function or an object");
        return { handler: n3 ? e2 : e2.handler, middleware: e2.middleware || function(e3) {
          return e3;
        }, events: e2.events || r, isActive: !(false === e2.isActive), detectIframe: !(false === e2.detectIframe), capture: Boolean(e2.capture) };
      }(t2.value), o2 = a2.handler, d2 = a2.middleware, c = a2.detectIframe, u = a2.capture;
      if (a2.isActive) {
        if (n2[e] = a2.events.map(function(e2) {
          return { event: e2, srcTarget: document.documentElement, handler: function(e3) {
            return function(e4) {
              var n3 = e4.el, t3 = e4.event, r2 = e4.handler, a3 = e4.middleware, o3 = t3.path || t3.composedPath && t3.composedPath();
              (o3 ? o3.indexOf(n3) < 0 : !n3.contains(t3.target)) && i({ event: t3, handler: r2, middleware: a3 });
            }({ el: n2, event: e3, handler: o2, middleware: d2 });
          }, capture: u };
        }), c) {
          var l = { event: "blur", srcTarget: window, handler: function(e2) {
            return function(e3) {
              var n3 = e3.el, t3 = e3.event, r2 = e3.handler, a3 = e3.middleware;
              setTimeout(function() {
                var e4 = document.activeElement;
                e4 && "IFRAME" === e4.tagName && !n3.contains(e4) && i({ event: t3, handler: r2, middleware: a3 });
              }, 0);
            }({ el: n2, event: e2, handler: o2, middleware: d2 });
          }, capture: u };
          n2[e] = [].concat(n2[e], [l]);
        }
        n2[e].forEach(function(t3) {
          var r2 = t3.event, i2 = t3.srcTarget, a3 = t3.handler;
          return setTimeout(function() {
            n2[e] && i2.addEventListener(r2, a3, u);
          }, 0);
        });
      }
    }, o = function(n2) {
      (n2[e] || []).forEach(function(e2) {
        return e2.srcTarget.removeEventListener(e2.event, e2.handler, e2.capture);
      }), delete n2[e];
    }, d = n ? { beforeMount: a, updated: function(e2, n2) {
      var t2 = n2.value, r2 = n2.oldValue;
      JSON.stringify(t2) !== JSON.stringify(r2) && (o(e2), a(e2, { value: t2 }));
    }, unmounted: o } : {};
    return { install: function(e2) {
      e2.directive("click-outside", d);
    }, directive: d };
  });
});
var vClickOutside = vClickOutside_umd;
var _hoisted_1$1 = {
  class: "v3ti-loader-wrapper"
};
var _hoisted_2$1 = createBaseVNode("div", {
  class: "v3ti-loader"
}, null, -1);
var _hoisted_3$1 = createBaseVNode("span", null, "Loading", -1);
var _hoisted_4$1 = [_hoisted_2$1, _hoisted_3$1];
function render$1(_ctx, _cache) {
  return openBlock(), createElementBlock("div", _hoisted_1$1, _hoisted_4$1);
}
function styleInject(css, ref) {
  if (ref === void 0)
    ref = {};
  var insertAt = ref.insertAt;
  if (!css || typeof document === "undefined") {
    return;
  }
  var head = document.head || document.getElementsByTagName("head")[0];
  var style = document.createElement("style");
  style.type = "text/css";
  if (insertAt === "top") {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }
  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}
var css_248z$1 = ".v3ti-loader-wrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #112B3C;\n}\n.v3ti-loader-wrapper .v3ti-loader {\n  width: 18px;\n  height: 18px;\n  border-radius: 50%;\n  display: inline-block;\n  border-top: 2px solid #112B3C;\n  border-right: 2px solid transparent;\n  box-sizing: border-box;\n  animation: rotation 0.8s linear infinite;\n  margin-right: 8px;\n}\n@keyframes rotation {\n0% {\n    transform: rotate(0deg);\n}\n100% {\n    transform: rotate(360deg);\n}\n}";
styleInject(css_248z$1);
var script$1 = {};
script$1.render = render$1;
var Loading = script$1;
var script = {
  name: "Vue3TagsInput",
  emits: ["update:modelValue", "update:tags", "on-limit", "on-tags-changed", "on-remove", "on-error", "on-focus", "on-blur", "on-select", "on-select-duplicate-tag", "on-new-tag"],
  props: {
    readOnly: {
      type: Boolean,
      default: false
    },
    modelValue: {
      type: String,
      default: ""
    },
    validate: {
      type: [String, Function, Object],
      default: ""
    },
    addTagOnKeys: {
      type: Array,
      default: function() {
        return [
          13,
          // Enter
          ",",
          // Comma ','
          32
          // Space
        ];
      }
    },
    placeholder: {
      type: String,
      default: ""
    },
    tags: {
      type: Array,
      default: () => []
    },
    loading: {
      type: Boolean,
      default: false
    },
    limit: {
      type: Number,
      default: -1
    },
    allowDuplicates: {
      type: Boolean,
      default: false
    },
    addTagOnBlur: {
      type: Boolean,
      default: false
    },
    selectItems: {
      type: Array,
      default: () => []
    },
    select: {
      type: Boolean,
      default: false
    },
    duplicateSelectItem: {
      type: Boolean,
      default: true
    },
    uniqueSelectField: {
      type: String,
      default: "id"
    },
    addTagOnKeysWhenSelect: {
      type: Boolean,
      default: false
    },
    isShowNoData: {
      type: Boolean,
      default: true
    }
    // multiple: {
    //   type: Boolean,
    //   default: false
    // },
  },
  components: {
    Loading
  },
  directives: {
    clickOutside: vClickOutside.directive
  },
  data() {
    return {
      isInputActive: false,
      isError: false,
      newTag: "",
      innerTags: [],
      multiple: false
    };
  },
  computed: {
    isLimit() {
      const isLimit = this.limit > 0 && Number(this.limit) === this.innerTags.length;
      if (isLimit) {
        this.$emit("on-limit");
      }
      return isLimit;
    },
    selectedItemsIds() {
      if (!this.duplicateSelectItem) {
        return this.tags.map((o) => o[this.uniqueSelectField] || "");
      }
      return [];
    }
  },
  watch: {
    error() {
      this.isError = this.error;
    },
    modelValue: {
      immediate: true,
      handler(value) {
        this.newTag = value;
      }
    },
    tags: {
      deep: true,
      immediate: true,
      handler(tags) {
        this.innerTags = [...tags];
      }
    }
  },
  methods: {
    isShot(name) {
      return !!this.$slots[name];
    },
    makeItNormal(event) {
      this.$emit("update:modelValue", event.target.value);
      this.$refs.inputTag.className = "v3ti-new-tag";
      this.$refs.inputTag.style.textDecoration = "none";
    },
    resetData() {
      this.innerTags = [];
    },
    resetInputValue() {
      this.newTag = "";
      this.$emit("update:modelValue", "");
    },
    setPosition() {
      const el = this.$refs.inputBox;
      const menu = this.$refs.contextMenu;
      if (el && menu) {
        menu.style.display = "block";
        const ELEMENT_HEIGHT = el.clientHeight || 32;
        const BORDER_HEIGHT = 3;
        menu.style.top = ELEMENT_HEIGHT + BORDER_HEIGHT + "px";
      }
    },
    closeContextMenu() {
      if (this.$refs.contextMenu) {
        this.$refs.contextMenu.style = {
          display: "none"
        };
      }
    },
    handleSelect(tagData) {
      if (this.isShowCheckmark(tagData)) {
        const tags = this.tags.filter((o) => tagData.id !== o.id);
        this.$emit("update:tags", tags);
        this.$emit("on-select-duplicate-tag", tagData);
        this.resetInputValue();
      } else {
        this.$emit("on-select", tagData);
      }
      this.$nextTick(() => {
        this.closeContextMenu();
      });
    },
    isShowCheckmark(tag) {
      if (!this.duplicateSelectItem) {
        return this.selectedItemsIds.includes(tag[this.uniqueSelectField]);
      }
      return false;
    },
    focusNewTag() {
      if (this.select && !this.disabled) {
        this.setPosition();
      }
      if (this.readOnly || !this.$el.querySelector(".v3ti-new-tag")) {
        return;
      }
      this.$el.querySelector(".v3ti-new-tag").focus();
    },
    handleInputFocus(event) {
      this.isInputActive = true;
      this.$emit("on-focus", event);
    },
    handleInputBlur(e) {
      this.isInputActive = false;
      this.addNew(e);
      this.$emit("on-blur", e);
    },
    addNew(e) {
      if (this.select && !this.addTagOnKeysWhenSelect) {
        return;
      }
      const keyShouldAddTag = e ? this.addTagOnKeys.indexOf(e.keyCode) !== -1 || this.addTagOnKeys.indexOf(e.key) !== -1 : true;
      const typeIsNotBlur = e && e.type !== "blur";
      if (!keyShouldAddTag && (typeIsNotBlur || !this.addTagOnBlur) || this.isLimit) {
        return;
      }
      if (this.newTag && (this.allowDuplicates || this.innerTags.indexOf(this.newTag) === -1) && this.validateIfNeeded(this.newTag)) {
        this.innerTags.push(this.newTag);
        if (this.addTagOnKeysWhenSelect) {
          this.$emit("on-new-tag", this.newTag);
          this.updatePositionContextMenu();
        }
        this.resetInputValue();
        this.tagChange();
        e && e.preventDefault();
      } else {
        if (this.validateIfNeeded(this.newTag)) {
          this.makeItError(true);
        } else {
          this.makeItError(false);
        }
        e && e.preventDefault();
      }
    },
    updatePositionContextMenu() {
      this.$nextTick(() => {
        this.setPosition();
      });
    },
    makeItError(isDuplicatedOrMaxLength) {
      if (this.newTag !== "") {
        this.$refs.inputTag.className = "v3ti-new-tag v3ti-new-tag--error";
        this.$refs.inputTag.style.textDecoration = "underline";
        this.$emit("on-error", isDuplicatedOrMaxLength);
      }
    },
    validateIfNeeded(tagValue) {
      if (this.validate === "" || this.validate === void 0) {
        return true;
      }
      if (typeof this.validate === "function") {
        return this.validate(tagValue);
      }
      return true;
    },
    removeLastTag() {
      if (this.newTag) {
        return;
      }
      this.innerTags.pop();
      this.tagChange();
      this.updatePositionContextMenu();
    },
    remove(index) {
      this.innerTags.splice(index, 1);
      this.tagChange();
      this.$emit("on-remove", index);
      this.updatePositionContextMenu();
    },
    tagChange() {
      this.$emit("on-tags-changed", this.innerTags);
    }
  }
};
var _hoisted_1 = {
  key: 1,
  class: "v3ti-tag-content"
};
var _hoisted_2 = ["onClick"];
var _hoisted_3 = ["placeholder", "disabled"];
var _hoisted_4 = {
  key: 0,
  class: "v3ti-loading"
};
var _hoisted_5 = {
  key: 1,
  class: "v3ti-no-data"
};
var _hoisted_6 = {
  key: 1
};
var _hoisted_7 = {
  key: 2
};
var _hoisted_8 = ["onClick"];
var _hoisted_9 = {
  class: "v3ti-context-item--label"
};
var _hoisted_10 = {
  key: 0,
  class: "v3ti-icon-selected-tag",
  width: "44",
  height: "44",
  viewBox: "0 0 24 24",
  "stroke-width": "1.5",
  fill: "none",
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
};
var _hoisted_11 = createBaseVNode("path", {
  stroke: "none",
  d: "M0 0h24v24H0z"
}, null, -1);
var _hoisted_12 = createBaseVNode("path", {
  d: "M5 12l5 5l10 -10"
}, null, -1);
var _hoisted_13 = [_hoisted_11, _hoisted_12];
function render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_Loading = resolveComponent("Loading");
  const _directive_click_outside = resolveDirective("click-outside");
  return withDirectives((openBlock(), createElementBlock("div", {
    onClick: _cache[6] || (_cache[6] = ($event) => $options.focusNewTag()),
    class: normalizeClass([{
      "v3ti--focus": $data.isInputActive,
      "v3ti--error": $data.isError
    }, "v3ti"])
  }, [createBaseVNode("div", {
    class: normalizeClass(["v3ti-content", {
      "v3ti-content--select": $props.select
    }]),
    ref: "inputBox"
  }, [(openBlock(true), createElementBlock(Fragment, null, renderList($data.innerTags, (tag, index) => {
    return openBlock(), createElementBlock("span", {
      key: index,
      class: "v3ti-tag"
    }, [$options.isShot("item") ? renderSlot(_ctx.$slots, "item", normalizeProps(mergeProps({
      key: 0
    }, {
      name: tag,
      index,
      tag
    }))) : (openBlock(), createElementBlock("span", _hoisted_1, toDisplayString(tag), 1)), !$props.readOnly ? (openBlock(), createElementBlock("a", {
      key: 2,
      onClick: withModifiers(($event) => $options.remove(index), ["prevent", "stop"]),
      class: "v3ti-remove-tag"
    }, null, 8, _hoisted_2)) : createCommentVNode("", true)]);
  }), 128)), withDirectives(createBaseVNode("input", {
    ref: "inputTag",
    placeholder: $props.placeholder,
    "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => $data.newTag = $event),
    onKeydown: [_cache[1] || (_cache[1] = withKeys(withModifiers(function() {
      return $options.removeLastTag && $options.removeLastTag(...arguments);
    }, ["stop"]), ["delete"])), _cache[2] || (_cache[2] = function() {
      return $options.addNew && $options.addNew(...arguments);
    })],
    onBlur: _cache[3] || (_cache[3] = function() {
      return $options.handleInputBlur && $options.handleInputBlur(...arguments);
    }),
    onFocus: _cache[4] || (_cache[4] = function() {
      return $options.handleInputFocus && $options.handleInputFocus(...arguments);
    }),
    onInput: _cache[5] || (_cache[5] = function() {
      return $options.makeItNormal && $options.makeItNormal(...arguments);
    }),
    class: "v3ti-new-tag",
    disabled: $props.readOnly
  }, null, 40, _hoisted_3), [[vModelText, $data.newTag]])], 2), $props.select ? (openBlock(), createElementBlock("section", {
    key: 0,
    class: normalizeClass(["v3ti-context-menu", {
      "v3ti-context-menu-no-data": !$props.isShowNoData && $props.selectItems.length === 0
    }]),
    ref: "contextMenu"
  }, [$props.loading ? (openBlock(), createElementBlock("div", _hoisted_4, [$options.isShot("loading") ? renderSlot(_ctx.$slots, "default", {
    key: 0
  }) : (openBlock(), createBlock(_component_Loading, {
    key: 1
  }))])) : createCommentVNode("", true), !$props.loading && $props.selectItems.length === 0 && $props.isShowNoData ? (openBlock(), createElementBlock("div", _hoisted_5, [$options.isShot("no-data") ? renderSlot(_ctx.$slots, "no-data", {
    key: 0
  }) : (openBlock(), createElementBlock("span", _hoisted_6, " No data "))])) : createCommentVNode("", true), !$props.loading && $props.selectItems.length > 0 ? (openBlock(), createElementBlock("div", _hoisted_7, [(openBlock(true), createElementBlock(Fragment, null, renderList($props.selectItems, (item, index) => {
    return openBlock(), createElementBlock("div", {
      key: index,
      class: normalizeClass(["v3ti-context-item", {
        "v3ti-context-item--active": $options.isShowCheckmark(item)
      }]),
      onClick: withModifiers(($event) => $options.handleSelect(item, index), ["stop"])
    }, [createBaseVNode("div", _hoisted_9, [renderSlot(_ctx.$slots, "select-item", normalizeProps(guardReactiveProps(item)))]), $options.isShowCheckmark(item) ? (openBlock(), createElementBlock("svg", _hoisted_10, _hoisted_13)) : createCommentVNode("", true)], 10, _hoisted_8);
  }), 128))])) : createCommentVNode("", true)], 2)) : createCommentVNode("", true)], 2)), [[_directive_click_outside, $options.closeContextMenu]]);
}
var css_248z = '.v3ti {\n  border-radius: 5px;\n  min-height: 32px;\n  line-height: 1.4;\n  background-color: #fff;\n  border: 1px solid #9ca3af;\n  cursor: text;\n  text-align: left;\n  -webkit-appearance: textfield;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n}\n.v3ti .v3ti-icon-selected-tag {\n  stroke: #19be6b;\n  width: 1rem;\n  height: 1rem;\n  margin-left: 4px;\n}\n.v3ti--focus {\n  outline: 0;\n  border-color: #000000;\n  box-shadow: 0 0 0 1px #000000;\n}\n.v3ti--error {\n  border-color: #F56C6C;\n}\n.v3ti .v3ti-no-data {\n  color: #d8d8d8;\n  text-align: center;\n  padding: 4px 7px;\n}\n.v3ti .v3ti-loading {\n  padding: 4px 7px;\n  text-align: center;\n}\n.v3ti .v3ti-context-menu {\n  max-height: 150px;\n  min-width: 150px;\n  overflow: auto;\n  display: none;\n  outline: none;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin: 0;\n  padding: 5px 0;\n  background: #ffffff;\n  z-index: 1050;\n  color: #475569;\n  box-shadow: 0 3px 8px 2px rgba(0, 0, 0, 0.1);\n  border-radius: 0 0 6px 6px;\n}\n.v3ti .v3ti-context-menu .v3ti-context-item {\n  padding: 4px 7px;\n  display: flex;\n  align-items: center;\n}\n.v3ti .v3ti-context-menu .v3ti-context-item:hover {\n  background: #e8e8e8;\n  cursor: pointer;\n}\n.v3ti .v3ti-context-menu .v3ti-context-item--label {\n  flex: 1;\n  min-width: 1px;\n}\n.v3ti .v3ti-context-menu .v3ti-context-item--active {\n  color: #317CAF;\n}\n.v3ti .v3ti-context-menu-no-data {\n  padding: 0;\n}\n.v3ti .v3ti-content {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n}\n.v3ti .v3ti-content--select {\n  padding-right: 30px;\n}\n.v3ti .v3ti-tag {\n  display: flex;\n  font-weight: 400;\n  margin: 3px;\n  padding: 0 5px;\n  background: #317CAF;\n  color: #ffffff;\n  height: 27px;\n  border-radius: 5px;\n  align-items: center;\n  max-width: calc(100% - 16px);\n}\n.v3ti .v3ti-tag .v3ti-tag-content {\n  flex: 1;\n  min-width: 1px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.v3ti .v3ti-tag .v3ti-remove-tag {\n  color: #ffffff;\n  transition: opacity 0.3s ease;\n  opacity: 0.5;\n  cursor: pointer;\n  padding: 0 5px 0 7px;\n}\n.v3ti .v3ti-tag .v3ti-remove-tag::before {\n  content: "x";\n}\n.v3ti .v3ti-tag .v3ti-remove-tag:hover {\n  opacity: 1;\n}\n.v3ti .v3ti-new-tag {\n  background: transparent;\n  border: 0;\n  font-weight: 400;\n  margin: 3px;\n  outline: none;\n  padding: 0 4px;\n  flex: 1;\n  min-width: 60px;\n  height: 27px;\n}\n.v3ti .v3ti-new-tag--error {\n  color: #F56C6C;\n}';
styleInject(css_248z);
script.render = render;
var entry_esm = (() => {
  const installable = script;
  installable.install = (app) => {
    app.component("Vue3TagsInput", installable);
  };
  return installable;
})();
export {
  entry_esm as default
};
//# sourceMappingURL=vue3-tags-input.js.map

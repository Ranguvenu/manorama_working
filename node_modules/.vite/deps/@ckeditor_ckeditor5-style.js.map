{
  "version": 3,
  "sources": ["../../@ckeditor/ckeditor5-style/src/ui/stylegridbuttonview.js", "../../@ckeditor/ckeditor5-style/src/ui/stylegridview.js", "../../@ckeditor/ckeditor5-style/src/ui/stylegroupview.js", "../../@ckeditor/ckeditor5-style/src/ui/stylepanelview.js", "../../@ckeditor/ckeditor5-style/src/styleutils.js", "../../@ckeditor/ckeditor5-style/src/styleui.js", "../../@ckeditor/ckeditor5-style/src/stylecommand.js", "../../@ckeditor/ckeditor5-style/src/integrations/list.js", "../../@ckeditor/ckeditor5-style/src/integrations/table.js", "../../@ckeditor/ckeditor5-style/src/integrations/link.js", "../../@ckeditor/ckeditor5-style/src/styleediting.js", "../../@ckeditor/ckeditor5-style/src/style.js"],
  "sourcesContent": ["/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { ButtonView, View } from 'ckeditor5/src/ui.js';\n/**\n * A class representing an individual button (style) in the grid. Renders a rich preview of the style.\n */\nexport default class StyleGridButtonView extends ButtonView {\n    /**\n     * Creates an instance of the {@link module:style/ui/stylegridbuttonview~StyleGridButtonView} class.\n     *\n     * @param locale The localization services instance.\n     * @param styleDefinition Definition of the style.\n     */\n    constructor(locale, styleDefinition) {\n        super(locale);\n        this.styleDefinition = styleDefinition;\n        this.previewView = this._createPreview();\n        this.set({\n            label: styleDefinition.name,\n            class: 'ck-style-grid__button',\n            withText: true\n        });\n        this.extendTemplate({\n            attributes: {\n                role: 'option'\n            }\n        });\n        this.children.add(this.previewView, 0);\n    }\n    /**\n     * Creates the view representing the preview of the style.\n     */\n    _createPreview() {\n        const previewView = new View(this.locale);\n        previewView.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-reset_all-excluded',\n                    'ck-style-grid__button__preview',\n                    'ck-content'\n                ],\n                // The preview \"AaBbCcDdEeFfGgHhIiJj\" should not be read by screen readers because it is purely presentational.\n                'aria-hidden': 'true'\n            },\n            children: [\n                this.styleDefinition.previewTemplate\n            ]\n        });\n        return previewView;\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/ui/stylegridview\n */\nimport { View, addKeyboardHandlingForGrid } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils.js';\nimport StyleGridButtonView from './stylegridbuttonview.js';\nimport '../../theme/stylegrid.css';\n/**\n * A class representing a grid of styles ({@link module:style/ui/stylegridbuttonview~StyleGridButtonView buttons}).\n * Allows users to select a style.\n */\nexport default class StyleGridView extends View {\n    /**\n     * Creates an instance of the {@link module:style/ui/stylegridview~StyleGridView} class.\n     *\n     * @param locale The localization services instance.\n     * @param styleDefinitions Definitions of the styles.\n     */\n    constructor(locale, styleDefinitions) {\n        super(locale);\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.set('activeStyles', []);\n        this.set('enabledStyles', []);\n        this.children = this.createCollection();\n        this.children.delegate('execute').to(this);\n        for (const definition of styleDefinitions) {\n            const gridTileView = new StyleGridButtonView(locale, definition);\n            this.children.add(gridTileView);\n        }\n        this.on('change:activeStyles', () => {\n            for (const child of this.children) {\n                child.isOn = this.activeStyles.includes(child.styleDefinition.name);\n            }\n        });\n        this.on('change:enabledStyles', () => {\n            for (const child of this.children) {\n                child.isEnabled = this.enabledStyles.includes(child.styleDefinition.name);\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-style-grid'\n                ],\n                role: 'listbox'\n            },\n            children: this.children\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    render() {\n        super.render();\n        for (const child of this.children) {\n            this.focusTracker.add(child.element);\n        }\n        addKeyboardHandlingForGrid({\n            keystrokeHandler: this.keystrokes,\n            focusTracker: this.focusTracker,\n            gridItems: this.children,\n            numberOfColumns: 3,\n            uiLanguageDirection: this.locale && this.locale.uiLanguageDirection\n        });\n        // Start listening for the keystrokes coming from the grid view.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first style button in the grid.\n     */\n    focus() {\n        this.children.first.focus();\n    }\n    /**\n     * @inheritDoc\n     */\n    destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/ui/stylegroupview\n */\nimport { LabelView, View } from 'ckeditor5/src/ui.js';\nimport StyleGridView from './stylegridview.js';\nimport '../../theme/stylegroup.css';\n/**\n * A class representing a group of styles (e.g. \"block\" or \"inline\").\n *\n * Renders a {@link module:style/ui/stylegridview~StyleGridView style grid} and a label.\n */\nexport default class StyleGroupView extends View {\n    /**\n     * Creates an instance of the {@link module:style/ui/stylegroupview~StyleGroupView} class.\n     *\n     * @param locale The localization services instance.\n     * @param label The localized label of the group.\n     * @param styleDefinitions Definitions of the styles in the group.\n     */\n    constructor(locale, label, styleDefinitions) {\n        super(locale);\n        this.labelView = new LabelView(locale);\n        this.labelView.text = label;\n        this.gridView = new StyleGridView(locale, styleDefinitions);\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-style-panel__style-group'\n                ],\n                role: 'group',\n                'aria-labelledby': this.labelView.id\n            },\n            children: [\n                this.labelView,\n                this.gridView\n            ]\n        });\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/ui/stylepanelview\n */\nimport { FocusCycler, View, ViewCollection } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, KeystrokeHandler } from 'ckeditor5/src/utils.js';\nimport StyleGroupView from './stylegroupview.js';\nimport '../../theme/stylepanel.css';\n/**\n * A class representing a panel with available content styles. It renders styles in button grids, grouped\n * in categories.\n */\nexport default class StylePanelView extends View {\n    /**\n     * Creates an instance of the {@link module:style/ui/stylegroupview~StyleGroupView} class.\n     *\n     * @param locale The localization services instance.\n     * @param styleDefinitions Normalized definitions of the styles.\n     */\n    constructor(locale, styleDefinitions) {\n        super(locale);\n        const t = locale.t;\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.children = this.createCollection();\n        this.blockStylesGroupView = new StyleGroupView(locale, t('Block styles'), styleDefinitions.block);\n        this.inlineStylesGroupView = new StyleGroupView(locale, t('Text styles'), styleDefinitions.inline);\n        this.set('activeStyles', []);\n        this.set('enabledStyles', []);\n        this._focusables = new ViewCollection();\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate style groups backwards using the <kbd>Shift</kbd> + <kbd>Tab</kbd> keystroke.\n                focusPrevious: ['shift + tab'],\n                // Navigate style groups forward using the <kbd>Tab</kbd> key.\n                focusNext: ['tab']\n            }\n        });\n        if (styleDefinitions.block.length) {\n            this.children.add(this.blockStylesGroupView);\n        }\n        if (styleDefinitions.inline.length) {\n            this.children.add(this.inlineStylesGroupView);\n        }\n        this.blockStylesGroupView.gridView.delegate('execute').to(this);\n        this.inlineStylesGroupView.gridView.delegate('execute').to(this);\n        this.blockStylesGroupView.gridView\n            .bind('activeStyles', 'enabledStyles')\n            .to(this, 'activeStyles', 'enabledStyles');\n        this.inlineStylesGroupView.gridView\n            .bind('activeStyles', 'enabledStyles')\n            .to(this, 'activeStyles', 'enabledStyles');\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-style-panel'\n                ]\n            },\n            children: this.children\n        });\n    }\n    /**\n     * @inheritDoc\n     */\n    render() {\n        super.render();\n        // Register the views as focusable.\n        this._focusables.add(this.blockStylesGroupView.gridView);\n        this._focusables.add(this.inlineStylesGroupView.gridView);\n        // Register the views in the focus tracker.\n        this.focusTracker.add(this.blockStylesGroupView.gridView.element);\n        this.focusTracker.add(this.inlineStylesGroupView.gridView.element);\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n     * Focuses the first focusable element in the panel.\n     */\n    focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n     * Focuses the last focusable element in the panel.\n     */\n    focusLast() {\n        this._focusCycler.focusLast();\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/styleutils\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { isObject } from 'lodash-es';\n// These are intermediate element names that can't be rendered as style preview because they don't make sense standalone.\nconst NON_PREVIEWABLE_ELEMENT_NAMES = [\n    'caption', 'colgroup', 'dd', 'dt', 'figcaption', 'legend', 'li', 'optgroup', 'option', 'rp',\n    'rt', 'summary', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr'\n];\nexport default class StyleUtils extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'StyleUtils';\n    }\n    /**\n     * @inheritDoc\n     */\n    constructor(editor) {\n        super(editor);\n        this.decorate('isStyleEnabledForBlock');\n        this.decorate('isStyleActiveForBlock');\n        this.decorate('getAffectedBlocks');\n        this.decorate('isStyleEnabledForInlineSelection');\n        this.decorate('isStyleActiveForInlineSelection');\n        this.decorate('getAffectedInlineSelectable');\n        this.decorate('getStylePreview');\n        this.decorate('configureGHSDataFilter');\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        this._htmlSupport = this.editor.plugins.get('GeneralHtmlSupport');\n    }\n    /**\n     * Normalizes {@link module:style/styleconfig~StyleConfig#definitions} in the configuration of the styles feature.\n     * The structure of normalized styles looks as follows:\n     *\n     * ```ts\n     * {\n     * \tblock: [\n     * \t\t<module:style/style~StyleDefinition>,\n     * \t\t<module:style/style~StyleDefinition>,\n     * \t\t...\n     * \t],\n     * \tinline: [\n     * \t\t<module:style/style~StyleDefinition>,\n     * \t\t<module:style/style~StyleDefinition>,\n     * \t\t...\n     * \t]\n     * }\n     * ```\n     *\n     * @returns An object with normalized style definitions grouped into `block` and `inline` categories (arrays).\n     */\n    normalizeConfig(dataSchema, styleDefinitions = []) {\n        const normalizedDefinitions = {\n            block: [],\n            inline: []\n        };\n        for (const definition of styleDefinitions) {\n            const modelElements = [];\n            const ghsAttributes = [];\n            for (const ghsDefinition of dataSchema.getDefinitionsForView(definition.element)) {\n                const appliesToBlock = 'appliesToBlock' in ghsDefinition ? ghsDefinition.appliesToBlock : false;\n                if (ghsDefinition.isBlock || appliesToBlock) {\n                    if (typeof appliesToBlock == 'string') {\n                        modelElements.push(appliesToBlock);\n                    }\n                    else if (ghsDefinition.isBlock) {\n                        const ghsBlockDefinition = ghsDefinition;\n                        modelElements.push(ghsDefinition.model);\n                        if (ghsBlockDefinition.paragraphLikeModel) {\n                            modelElements.push(ghsBlockDefinition.paragraphLikeModel);\n                        }\n                    }\n                }\n                else {\n                    ghsAttributes.push(ghsDefinition.model);\n                }\n            }\n            const previewTemplate = this.getStylePreview(definition, [\n                { text: 'AaBbCcDdEeFfGgHhIiJj' }\n            ]);\n            if (modelElements.length) {\n                normalizedDefinitions.block.push({\n                    ...definition,\n                    previewTemplate,\n                    modelElements,\n                    isBlock: true\n                });\n            }\n            else {\n                normalizedDefinitions.inline.push({\n                    ...definition,\n                    previewTemplate,\n                    ghsAttributes\n                });\n            }\n        }\n        return normalizedDefinitions;\n    }\n    /**\n     * Verifies if the given style is applicable to the provided block element.\n     *\n     * @internal\n     */\n    isStyleEnabledForBlock(definition, block) {\n        const model = this.editor.model;\n        const attributeName = this._htmlSupport.getGhsAttributeNameForElement(definition.element);\n        if (!model.schema.checkAttribute(block, attributeName)) {\n            return false;\n        }\n        return definition.modelElements.includes(block.name);\n    }\n    /**\n     * Returns true if the given style is applied to the specified block element.\n     *\n     * @internal\n     */\n    isStyleActiveForBlock(definition, block) {\n        const attributeName = this._htmlSupport.getGhsAttributeNameForElement(definition.element);\n        const ghsAttributeValue = block.getAttribute(attributeName);\n        return this.hasAllClasses(ghsAttributeValue, definition.classes);\n    }\n    /**\n     * Returns an array of block elements that style should be applied to.\n     *\n     * @internal\n     */\n    getAffectedBlocks(definition, block) {\n        if (definition.modelElements.includes(block.name)) {\n            return [block];\n        }\n        return null;\n    }\n    /**\n     * Verifies if the given style is applicable to the provided document selection.\n     *\n     * @internal\n     */\n    isStyleEnabledForInlineSelection(definition, selection) {\n        const model = this.editor.model;\n        for (const ghsAttributeName of definition.ghsAttributes) {\n            if (model.schema.checkAttributeInSelection(selection, ghsAttributeName)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns true if the given style is applied to the specified document selection.\n     *\n     * @internal\n     */\n    isStyleActiveForInlineSelection(definition, selection) {\n        for (const ghsAttributeName of definition.ghsAttributes) {\n            const ghsAttributeValue = this._getValueFromFirstAllowedNode(selection, ghsAttributeName);\n            if (this.hasAllClasses(ghsAttributeValue, definition.classes)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns a selectable that given style should be applied to.\n     *\n     * @internal\n     */\n    getAffectedInlineSelectable(definition, selection) {\n        return selection;\n    }\n    /**\n     * Returns the `TemplateDefinition` used by styles dropdown to render style preview.\n     *\n     * @internal\n     */\n    getStylePreview(definition, children) {\n        const { element, classes } = definition;\n        return {\n            tag: isPreviewable(element) ? element : 'div',\n            attributes: {\n                class: classes\n            },\n            children\n        };\n    }\n    /**\n     * Verifies if all classes are present in the given GHS attribute.\n     *\n     * @internal\n     */\n    hasAllClasses(ghsAttributeValue, classes) {\n        return isObject(ghsAttributeValue) &&\n            hasClassesProperty(ghsAttributeValue) &&\n            classes.every(className => ghsAttributeValue.classes.includes(className));\n    }\n    /**\n     * This is where the styles feature configures the GHS feature. This method translates normalized\n     * {@link module:style/styleconfig~StyleDefinition style definitions} to\n     * {@link module:engine/view/matcher~MatcherObjectPattern matcher patterns} and feeds them to the GHS\n     * {@link module:html-support/datafilter~DataFilter} plugin.\n     *\n     * @internal\n     */\n    configureGHSDataFilter({ block, inline }) {\n        const ghsDataFilter = this.editor.plugins.get('DataFilter');\n        ghsDataFilter.loadAllowedConfig(block.map(normalizedStyleDefinitionToMatcherPattern));\n        ghsDataFilter.loadAllowedConfig(inline.map(normalizedStyleDefinitionToMatcherPattern));\n    }\n    /**\n     * Checks the attribute value of the first node in the selection that allows the attribute.\n     * For the collapsed selection, returns the selection attribute.\n     *\n     * @param selection The document selection.\n     * @param attributeName Name of the GHS attribute.\n     * @returns The attribute value.\n     */\n    _getValueFromFirstAllowedNode(selection, attributeName) {\n        const model = this.editor.model;\n        const schema = model.schema;\n        if (selection.isCollapsed) {\n            return selection.getAttribute(attributeName);\n        }\n        for (const range of selection.getRanges()) {\n            for (const item of range.getItems()) {\n                if (schema.checkAttribute(item, attributeName)) {\n                    return item.getAttribute(attributeName);\n                }\n            }\n        }\n        return null;\n    }\n}\n/**\n * Checks if given object has `classes` property which is an array.\n *\n * @param obj Object to check.\n */\nfunction hasClassesProperty(obj) {\n    return Boolean(obj.classes) && Array.isArray(obj.classes);\n}\n/**\n * Decides whether an element should be created in the preview or a substitute `<div>` should\n * be used instead. This avoids previewing a standalone `<td>`, `<li>`, etc. without a parent.\n *\n * @param elementName Name of the element\n * @returns Boolean indicating whether the element can be rendered.\n */\nfunction isPreviewable(elementName) {\n    return !NON_PREVIEWABLE_ELEMENT_NAMES.includes(elementName);\n}\n/**\n * Translates a normalized style definition to a view matcher pattern.\n */\nfunction normalizedStyleDefinitionToMatcherPattern({ element, classes }) {\n    return {\n        name: element,\n        classes\n    };\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/styleui\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { createDropdown } from 'ckeditor5/src/ui.js';\nimport StylePanelView from './ui/stylepanelview.js';\nimport StyleUtils from './styleutils.js';\nimport '../theme/style.css';\n/**\n * The UI plugin of the style feature .\n *\n * It registers the `'style'` UI dropdown in the editor's {@link module:ui/componentfactory~ComponentFactory component factory}\n * that displays a grid of styles and allows changing styles of the content.\n */\nexport default class StyleUI extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'StyleUI';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [StyleUtils];\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        const dataSchema = editor.plugins.get('DataSchema');\n        const styleUtils = editor.plugins.get('StyleUtils');\n        const styleDefinitions = editor.config.get('style.definitions');\n        const normalizedStyleDefinitions = styleUtils.normalizeConfig(dataSchema, styleDefinitions);\n        // Add the dropdown to the component factory.\n        editor.ui.componentFactory.add('style', locale => {\n            const t = locale.t;\n            const dropdown = createDropdown(locale);\n            const styleCommand = editor.commands.get('style');\n            dropdown.once('change:isOpen', () => {\n                const panelView = new StylePanelView(locale, normalizedStyleDefinitions);\n                // Put the styles panel is the dropdown.\n                dropdown.panelView.children.add(panelView);\n                // Close the dropdown when a style is selected in the styles panel.\n                panelView.delegate('execute').to(dropdown);\n                // Bind the state of the styles panel to the command.\n                panelView.bind('activeStyles').to(styleCommand, 'value');\n                panelView.bind('enabledStyles').to(styleCommand, 'enabledStyles');\n            });\n            // The entire dropdown will be disabled together with the command (e.g. when the editor goes read-only).\n            dropdown.bind('isEnabled').to(styleCommand);\n            // This dropdown has no icon. It displays text label depending on the selection.\n            dropdown.buttonView.withText = true;\n            // The label of the dropdown is dynamic and depends on how many styles are active at a time.\n            dropdown.buttonView.bind('label').to(styleCommand, 'value', value => {\n                if (value.length > 1) {\n                    return t('Multiple styles');\n                }\n                else if (value.length === 1) {\n                    return value[0];\n                }\n                else {\n                    return t('Styles');\n                }\n            });\n            // The dropdown has a static CSS class for easy customization. There's another CSS class\n            // that gets displayed when multiple styles are active at a time allowing visual customization of\n            // the label.\n            dropdown.bind('class').to(styleCommand, 'value', value => {\n                const classes = [\n                    'ck-style-dropdown'\n                ];\n                if (value.length > 1) {\n                    classes.push('ck-style-dropdown_multiple-active');\n                }\n                return classes.join(' ');\n            });\n            // Execute the command when a style is selected in the styles panel.\n            // Also focus the editable after executing the command.\n            // It overrides a default behaviour where the focus is moved to the dropdown button (#12125).\n            dropdown.on('execute', evt => {\n                editor.execute('style', { styleName: evt.source.styleDefinition.name });\n                editor.editing.view.focus();\n            });\n            return dropdown;\n        });\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport { Command } from 'ckeditor5/src/core.js';\nimport { logWarning, first } from 'ckeditor5/src/utils.js';\nimport StyleUtils from './styleutils.js';\n/**\n * Style command.\n *\n * Applies and removes styles from selection and elements.\n */\nexport default class StyleCommand extends Command {\n    /**\n     * Creates an instance of the command.\n     *\n     * @param editor Editor on which this command will be used.\n     * @param styleDefinitions Normalized definitions of the styles.\n     */\n    constructor(editor, styleDefinitions) {\n        super(editor);\n        this.set('value', []);\n        this.set('enabledStyles', []);\n        this._styleDefinitions = styleDefinitions;\n        this._styleUtils = this.editor.plugins.get(StyleUtils);\n    }\n    /**\n     * @inheritDoc\n     */\n    refresh() {\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const value = new Set();\n        const enabledStyles = new Set();\n        // Inline styles.\n        for (const definition of this._styleDefinitions.inline) {\n            // Check if this inline style is enabled.\n            if (this._styleUtils.isStyleEnabledForInlineSelection(definition, selection)) {\n                enabledStyles.add(definition.name);\n            }\n            // Check if this inline style is active.\n            if (this._styleUtils.isStyleActiveForInlineSelection(definition, selection)) {\n                value.add(definition.name);\n            }\n        }\n        // Block styles.\n        const firstBlock = first(selection.getSelectedBlocks()) || selection.getFirstPosition().parent;\n        if (firstBlock) {\n            const ancestorBlocks = firstBlock.getAncestors({ includeSelf: true, parentFirst: true });\n            for (const block of ancestorBlocks) {\n                if (block.is('rootElement')) {\n                    break;\n                }\n                for (const definition of this._styleDefinitions.block) {\n                    // Check if this block style is enabled.\n                    if (!this._styleUtils.isStyleEnabledForBlock(definition, block)) {\n                        continue;\n                    }\n                    enabledStyles.add(definition.name);\n                    // Check if this block style is active.\n                    if (this._styleUtils.isStyleActiveForBlock(definition, block)) {\n                        value.add(definition.name);\n                    }\n                }\n                // E.g. reached a model table when the selection is in a cell. The command should not modify\n                // ancestors of a table.\n                if (model.schema.isObject(block)) {\n                    break;\n                }\n            }\n        }\n        this.enabledStyles = Array.from(enabledStyles).sort();\n        this.isEnabled = this.enabledStyles.length > 0;\n        this.value = this.isEnabled ? Array.from(value).sort() : [];\n    }\n    /**\n     * Executes the command &ndash; applies the style classes to the selection or removes it from the selection.\n     *\n     * If the command value already contains the requested style, it will remove the style classes. Otherwise, it will set it.\n     *\n     * The execution result differs, depending on the {@link module:engine/model/document~Document#selection} and the\n     * style type (inline or block):\n     *\n     * * When applying inline styles:\n     *   * If the selection is on a range, the command applies the style classes to all nodes in that range.\n     *   * If the selection is collapsed in a non-empty node, the command applies the style classes to the\n     * {@link module:engine/model/document~Document#selection}.\n     *\n     * * When applying block styles:\n     *   * If the selection is on a range, the command applies the style classes to the nearest block parent element.\n     *\n     * @fires execute\n     * @param options Command options.\n     * @param options.styleName Style name matching the one defined in the\n     * {@link module:style/styleconfig~StyleConfig#definitions configuration}.\n     * @param options.forceValue Whether the command should add given style (`true`) or remove it (`false`) from the selection.\n     * If not set (default), the command will toggle the style basing on the first selected node. Note, that this will not force\n     * setting a style on an element that cannot receive given style.\n     */\n    execute({ styleName, forceValue }) {\n        if (!this.enabledStyles.includes(styleName)) {\n            /**\n             * Style command can be executed only with a correct style name.\n             *\n             * This warning may be caused by:\n             *\n             * * passing a name that is not specified in the {@link module:style/styleconfig~StyleConfig#definitions configuration}\n             * (e.g. a CSS class name),\n             * * when trying to apply a style that is not allowed on a given element.\n             *\n             * @error style-command-executed-with-incorrect-style-name\n             */\n            logWarning('style-command-executed-with-incorrect-style-name');\n            return;\n        }\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const htmlSupport = this.editor.plugins.get('GeneralHtmlSupport');\n        const allDefinitions = [\n            ...this._styleDefinitions.inline,\n            ...this._styleDefinitions.block\n        ];\n        const activeDefinitions = allDefinitions.filter(({ name }) => this.value.includes(name));\n        const definition = allDefinitions.find(({ name }) => name == styleName);\n        const shouldAddStyle = forceValue === undefined ? !this.value.includes(definition.name) : forceValue;\n        model.change(() => {\n            let selectables;\n            if (isBlockStyleDefinition(definition)) {\n                selectables = this._findAffectedBlocks(getBlocksFromSelection(selection), definition);\n            }\n            else {\n                selectables = [this._styleUtils.getAffectedInlineSelectable(definition, selection)];\n            }\n            for (const selectable of selectables) {\n                if (shouldAddStyle) {\n                    htmlSupport.addModelHtmlClass(definition.element, definition.classes, selectable);\n                }\n                else {\n                    htmlSupport.removeModelHtmlClass(definition.element, getDefinitionExclusiveClasses(activeDefinitions, definition), selectable);\n                }\n            }\n        });\n    }\n    /**\n     * Returns a set of elements that should be affected by the block-style change.\n     */\n    _findAffectedBlocks(selectedBlocks, definition) {\n        const blocks = new Set();\n        for (const selectedBlock of selectedBlocks) {\n            const ancestorBlocks = selectedBlock.getAncestors({ includeSelf: true, parentFirst: true });\n            for (const block of ancestorBlocks) {\n                if (block.is('rootElement')) {\n                    break;\n                }\n                const affectedBlocks = this._styleUtils.getAffectedBlocks(definition, block);\n                if (affectedBlocks) {\n                    for (const affectedBlock of affectedBlocks) {\n                        blocks.add(affectedBlock);\n                    }\n                    break;\n                }\n            }\n        }\n        return blocks;\n    }\n}\n/**\n * Returns classes that are defined only in the supplied definition and not in any other active definition. It's used\n * to ensure that classes used by other definitions are preserved when a style is removed. See #11748.\n *\n * @param activeDefinitions All currently active definitions affecting selected element(s).\n * @param definition Definition whose classes will be compared with all other active definition classes.\n * @returns Array of classes exclusive to the supplied definition.\n */\nfunction getDefinitionExclusiveClasses(activeDefinitions, definition) {\n    return activeDefinitions.reduce((classes, currentDefinition) => {\n        if (currentDefinition.name === definition.name) {\n            return classes;\n        }\n        return classes.filter(className => !currentDefinition.classes.includes(className));\n    }, definition.classes);\n}\n/**\n * Checks if provided style definition is of type block.\n */\nfunction isBlockStyleDefinition(definition) {\n    return 'isBlock' in definition;\n}\n/**\n * Gets block elements from selection. If there are none, returns first selected element.\n * @param selection Current document's selection.\n * @returns Selected blocks if there are any, first selected element otherwise.\n */\nfunction getBlocksFromSelection(selection) {\n    const blocks = Array.from(selection.getSelectedBlocks());\n    if (blocks.length) {\n        return blocks;\n    }\n    return [selection.getFirstPosition().parent];\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/integrations/list\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport StyleUtils from '../styleutils.js';\nexport default class ListStyleSupport extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'ListStyleSupport';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [StyleUtils, 'GeneralHtmlSupport'];\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        if (!editor.plugins.has('ListEditing')) {\n            return;\n        }\n        this._styleUtils = editor.plugins.get(StyleUtils);\n        this._listUtils = this.editor.plugins.get('ListUtils');\n        this._htmlSupport = this.editor.plugins.get('GeneralHtmlSupport');\n        this.listenTo(this._styleUtils, 'isStyleEnabledForBlock', (evt, [definition, block]) => {\n            if (this._isStyleEnabledForBlock(definition, block)) {\n                evt.return = true;\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'isStyleActiveForBlock', (evt, [definition, block]) => {\n            if (this._isStyleActiveForBlock(definition, block)) {\n                evt.return = true;\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'getAffectedBlocks', (evt, [definition, block]) => {\n            const blocks = this._getAffectedBlocks(definition, block);\n            if (blocks) {\n                evt.return = blocks;\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'getStylePreview', (evt, [definition, children]) => {\n            const templateDefinition = this._getStylePreview(definition, children);\n            if (templateDefinition) {\n                evt.return = templateDefinition;\n                evt.stop();\n            }\n        }, { priority: 'high' });\n    }\n    /**\n     * Verifies if the given style is applicable to the provided block element.\n     */\n    _isStyleEnabledForBlock(definition, block) {\n        const model = this.editor.model;\n        if (!['ol', 'ul', 'li'].includes(definition.element)) {\n            return false;\n        }\n        if (!this._listUtils.isListItemBlock(block)) {\n            return false;\n        }\n        const attributeName = this._htmlSupport.getGhsAttributeNameForElement(definition.element);\n        if (definition.element == 'ol' || definition.element == 'ul') {\n            if (!model.schema.checkAttribute(block, attributeName)) {\n                return false;\n            }\n            const viewElementName = block.getAttribute('listType') == 'numbered' ? 'ol' : 'ul';\n            return definition.element == viewElementName;\n        }\n        else {\n            return model.schema.checkAttribute(block, attributeName);\n        }\n    }\n    /**\n     * Returns true if the given style is applied to the specified block element.\n     */\n    _isStyleActiveForBlock(definition, block) {\n        const attributeName = this._htmlSupport.getGhsAttributeNameForElement(definition.element);\n        const ghsAttributeValue = block.getAttribute(attributeName);\n        return this._styleUtils.hasAllClasses(ghsAttributeValue, definition.classes);\n    }\n    /**\n     * Returns an array of block elements that style should be applied to.\n     */\n    _getAffectedBlocks(definition, block) {\n        if (!this._isStyleEnabledForBlock(definition, block)) {\n            return null;\n        }\n        if (definition.element == 'li') {\n            return this._listUtils.expandListBlocksToCompleteItems(block, { withNested: false });\n        }\n        else {\n            return this._listUtils.expandListBlocksToCompleteList(block);\n        }\n    }\n    /**\n     * Returns a view template definition for the style preview.\n     */\n    _getStylePreview(definition, children) {\n        const { element, classes } = definition;\n        if (element == 'ol' || element == 'ul') {\n            return {\n                tag: element,\n                attributes: {\n                    class: classes\n                },\n                children: [\n                    {\n                        tag: 'li',\n                        children\n                    }\n                ]\n            };\n        }\n        else if (element == 'li') {\n            return {\n                tag: 'ol',\n                children: [\n                    {\n                        tag: element,\n                        attributes: {\n                            class: classes\n                        },\n                        children\n                    }\n                ]\n            };\n        }\n        return null;\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/integrations/table\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport StyleUtils from '../styleutils.js';\nexport default class TableStyleSupport extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'TableStyleSupport';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [StyleUtils];\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        if (!editor.plugins.has('TableEditing')) {\n            return;\n        }\n        this._styleUtils = editor.plugins.get(StyleUtils);\n        this._tableUtils = this.editor.plugins.get('TableUtils');\n        this.listenTo(this._styleUtils, 'isStyleEnabledForBlock', (evt, [definition, block]) => {\n            if (this._isApplicable(definition, block)) {\n                evt.return = this._isStyleEnabledForBlock(definition, block);\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'getAffectedBlocks', (evt, [definition, block]) => {\n            if (this._isApplicable(definition, block)) {\n                evt.return = this._getAffectedBlocks(definition, block);\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'configureGHSDataFilter', (evt, [{ block }]) => {\n            const ghsDataFilter = this.editor.plugins.get('DataFilter');\n            ghsDataFilter.loadAllowedConfig(block\n                .filter(definition => definition.element == 'figcaption')\n                .map(definition => ({ name: 'caption', classes: definition.classes })));\n        });\n    }\n    /**\n     * Checks if this plugin's custom logic should be applied for defintion-block pair.\n     *\n     * @param definition Style definition that is being considered.\n     * @param block Block element to check if should be styled.\n     * @returns True if the defintion-block pair meet the plugin criteria, false otherwise.\n     */\n    _isApplicable(definition, block) {\n        if (['td', 'th'].includes(definition.element)) {\n            return block.name == 'tableCell';\n        }\n        if (['thead', 'tbody'].includes(definition.element)) {\n            return block.name == 'table';\n        }\n        return false;\n    }\n    /**\n     * Checks if the style definition should be applied to selected block.\n     *\n     * @param definition Style definition that is being considered.\n     * @param block Block element to check if should be styled.\n     * @returns True if the block should be style with the style description, false otherwise.\n     */\n    _isStyleEnabledForBlock(definition, block) {\n        if (['td', 'th'].includes(definition.element)) {\n            const location = this._tableUtils.getCellLocation(block);\n            const tableRow = block.parent;\n            const table = tableRow.parent;\n            const headingRows = table.getAttribute('headingRows') || 0;\n            const headingColumns = table.getAttribute('headingColumns') || 0;\n            const isHeadingCell = location.row < headingRows || location.column < headingColumns;\n            if (definition.element == 'th') {\n                return isHeadingCell;\n            }\n            else {\n                return !isHeadingCell;\n            }\n        }\n        if (['thead', 'tbody'].includes(definition.element)) {\n            const headingRows = block.getAttribute('headingRows') || 0;\n            if (definition.element == 'thead') {\n                return headingRows > 0;\n            }\n            else {\n                return headingRows < this._tableUtils.getRows(block);\n            }\n        }\n        /* istanbul ignore next -- @preserve */\n        return false;\n    }\n    /**\n     * Gets all blocks that the style should be applied to.\n     *\n     * @param definition Style definition that is being considered.\n     * @param block A block element from selection.\n     * @returns An array with the block that was passed as an argument if meets the criteria, null otherwise.\n     */\n    _getAffectedBlocks(definition, block) {\n        if (!this._isStyleEnabledForBlock(definition, block)) {\n            return null;\n        }\n        return [block];\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/integrations/link\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { findAttributeRange, findAttributeRangeBound } from 'ckeditor5/src/typing.js';\nimport StyleUtils from '../styleutils.js';\nexport default class LinkStyleSupport extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'LinkStyleSupport';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [StyleUtils, 'GeneralHtmlSupport'];\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        if (!editor.plugins.has('LinkEditing')) {\n            return;\n        }\n        this._styleUtils = editor.plugins.get(StyleUtils);\n        this._htmlSupport = this.editor.plugins.get('GeneralHtmlSupport');\n        this.listenTo(this._styleUtils, 'isStyleEnabledForInlineSelection', (evt, [definition, selection]) => {\n            if (definition.element == 'a') {\n                evt.return = this._isStyleEnabled(definition, selection);\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'isStyleActiveForInlineSelection', (evt, [definition, selection]) => {\n            if (definition.element == 'a') {\n                evt.return = this._isStyleActive(definition, selection);\n                evt.stop();\n            }\n        }, { priority: 'high' });\n        this.listenTo(this._styleUtils, 'getAffectedInlineSelectable', (evt, [definition, selection]) => {\n            if (definition.element != 'a') {\n                return;\n            }\n            const selectable = this._getAffectedSelectable(definition, selection);\n            if (selectable) {\n                evt.return = selectable;\n                evt.stop();\n            }\n        }, { priority: 'high' });\n    }\n    /**\n     * Verifies if the given style is applicable to the provided document selection.\n     */\n    _isStyleEnabled(definition, selection) {\n        const model = this.editor.model;\n        // Handle collapsed selection.\n        if (selection.isCollapsed) {\n            return selection.hasAttribute('linkHref');\n        }\n        // Non-collapsed selection.\n        for (const range of selection.getRanges()) {\n            for (const item of range.getItems()) {\n                if ((item.is('$textProxy') || model.schema.isInline(item)) && item.hasAttribute('linkHref')) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns true if the given style is applied to the specified document selection.\n     */\n    _isStyleActive(definition, selection) {\n        const model = this.editor.model;\n        const attributeName = this._htmlSupport.getGhsAttributeNameForElement(definition.element);\n        // Handle collapsed selection.\n        if (selection.isCollapsed) {\n            if (selection.hasAttribute('linkHref')) {\n                const ghsAttributeValue = selection.getAttribute(attributeName);\n                if (this._styleUtils.hasAllClasses(ghsAttributeValue, definition.classes)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        // Non-collapsed selection.\n        for (const range of selection.getRanges()) {\n            for (const item of range.getItems()) {\n                if ((item.is('$textProxy') || model.schema.isInline(item)) && item.hasAttribute('linkHref')) {\n                    const ghsAttributeValue = item.getAttribute(attributeName);\n                    return this._styleUtils.hasAllClasses(ghsAttributeValue, definition.classes);\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Returns a selectable that given style should be applied to.\n     */\n    _getAffectedSelectable(definition, selection) {\n        const model = this.editor.model;\n        // Handle collapsed selection.\n        if (selection.isCollapsed) {\n            const linkHref = selection.getAttribute('linkHref');\n            return findAttributeRange(selection.getFirstPosition(), 'linkHref', linkHref, model);\n        }\n        // Non-collapsed selection.\n        const ranges = [];\n        for (const range of selection.getRanges()) {\n            // First expand range to include the whole link.\n            const expandedRange = model.createRange(expandAttributePosition(range.start, 'linkHref', true, model), expandAttributePosition(range.end, 'linkHref', false, model));\n            // Pick only ranges on links.\n            for (const item of expandedRange.getItems()) {\n                if ((item.is('$textProxy') || model.schema.isInline(item)) && item.hasAttribute('linkHref')) {\n                    ranges.push(this.editor.model.createRangeOn(item));\n                }\n            }\n        }\n        // Make sure that we have a continuous range on a link\n        // (not split between text nodes with mixed attributes like bold etc.)\n        return normalizeRanges(ranges);\n    }\n}\n/**\n * Walks forward or backward (depends on the `lookBack` flag), node by node, as long as they have the same attribute value\n * and returns a position just before or after (depends on the `lookBack` flag) the last matched node.\n */\nfunction expandAttributePosition(position, attributeName, lookBack, model) {\n    const referenceNode = position.textNode || (lookBack ? position.nodeAfter : position.nodeBefore);\n    if (!referenceNode || !referenceNode.hasAttribute(attributeName)) {\n        return position;\n    }\n    const attributeValue = referenceNode.getAttribute(attributeName);\n    return findAttributeRangeBound(position, attributeName, attributeValue, lookBack, model);\n}\n/**\n * Normalizes list of ranges by joining intersecting or \"touching\" ranges.\n *\n * Note: It assumes that ranges are sorted.\n */\nfunction normalizeRanges(ranges) {\n    for (let i = 1; i < ranges.length; i++) {\n        const joinedRange = ranges[i - 1].getJoined(ranges[i]);\n        if (joinedRange) {\n            // Replace the ranges on the list with the new joined range.\n            ranges.splice(--i, 2, joinedRange);\n        }\n    }\n    return ranges;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/styleediting\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport StyleCommand from './stylecommand.js';\nimport StyleUtils from './styleutils.js';\nimport ListStyleSupport from './integrations/list.js';\nimport TableStyleSupport from './integrations/table.js';\nimport LinkStyleSupport from './integrations/link.js';\n/**\n * The style engine feature.\n *\n * It configures the {@glink features/html/general-html-support General HTML Support feature} based on\n * {@link module:style/styleconfig~StyleConfig#definitions configured style definitions} and introduces the\n * {@link module:style/stylecommand~StyleCommand style command} that applies styles to the content of the document.\n */\nexport default class StyleEditing extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'StyleEditing';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return ['GeneralHtmlSupport', StyleUtils, ListStyleSupport, TableStyleSupport, LinkStyleSupport];\n    }\n    /**\n     * @inheritDoc\n     */\n    init() {\n        const editor = this.editor;\n        const dataSchema = editor.plugins.get('DataSchema');\n        const styleUtils = editor.plugins.get('StyleUtils');\n        const styleDefinitions = editor.config.get('style.definitions');\n        const normalizedStyleDefinitions = styleUtils.normalizeConfig(dataSchema, styleDefinitions);\n        editor.commands.add('style', new StyleCommand(editor, normalizedStyleDefinitions));\n        styleUtils.configureGHSDataFilter(normalizedStyleDefinitions);\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module style/style\n */\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport StyleUI from './styleui.js';\nimport StyleEditing from './styleediting.js';\n/**\n * The style plugin.\n *\n * This is a \"glue\" plugin that loads the {@link module:style/styleediting~StyleEditing style editing feature}\n * and {@link module:style/styleui~StyleUI style UI feature}.\n */\nexport default class Style extends Plugin {\n    /**\n     * @inheritDoc\n     */\n    static get pluginName() {\n        return 'Style';\n    }\n    /**\n     * @inheritDoc\n     */\n    static get requires() {\n        return [StyleEditing, StyleUI];\n    }\n}\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/uid.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/priorities.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/ckeditorerror.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/elementreplacer.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/isiterable.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/createelement.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/global.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/isvalidattributename.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/toarray.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/spy.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/eventinfo.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/inserttopriorityarray.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/version.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/emittermixin.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/collection.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/env.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/fastdiff.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/diff.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/observablemixin.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/count.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/comparearrays.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/isnode.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/iswindow.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/emittermixin.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/getancestors.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/getborderwidths.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/istext.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/isrange.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/getpositionedancestor.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/rect.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/resizeobserver.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/tounit.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/indexof.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/insertat.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/iscomment.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/isvisible.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/position.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/remove.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/dom/scroll.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/keyboard.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/translation-service.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/first.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/focustracker.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/keystrokehandler.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/objecttomap.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/tomap.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/splicearray.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/delay.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/verifylicense.js", "../../ckeditor5/node_modules/@ckeditor/ckeditor5-utils/src/unicode.js"],
  "sourcesContent": ["/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/uid\n */\n/**\n * A hash table of hex numbers to avoid using toString() in uid() which is costly.\n * [ '00', '01', '02', ..., 'fe', 'ff' ]\n */\nconst HEX_NUMBERS = new Array(256).fill('')\n    .map((_, index) => ('0' + (index).toString(16)).slice(-2));\n/**\n * Returns a unique id. The id starts with an \"e\" character and a randomly generated string of\n * 32 alphanumeric characters.\n *\n * **Note**: The characters the unique id is built from correspond to the hex number notation\n * (from \"0\" to \"9\", from \"a\" to \"f\"). In other words, each id corresponds to an \"e\" followed\n * by 16 8-bit numbers next to each other.\n *\n * @returns An unique id string.\n */\nexport default function uid() {\n    // Let's create some positive random 32bit integers first.\n    //\n    // 1. Math.random() is a float between 0 and 1.\n    // 2. 0x100000000 is 2^32 = 4294967296.\n    // 3. >>> 0 enforces integer (in JS all numbers are floating point).\n    //\n    // For instance:\n    //\t\tMath.random() * 0x100000000 = 3366450031.853859\n    // but\n    //\t\tMath.random() * 0x100000000 >>> 0 = 3366450031.\n    const r1 = Math.random() * 0x100000000 >>> 0;\n    const r2 = Math.random() * 0x100000000 >>> 0;\n    const r3 = Math.random() * 0x100000000 >>> 0;\n    const r4 = Math.random() * 0x100000000 >>> 0;\n    // Make sure that id does not start with number.\n    return 'e' +\n        HEX_NUMBERS[r1 >> 0 & 0xFF] +\n        HEX_NUMBERS[r1 >> 8 & 0xFF] +\n        HEX_NUMBERS[r1 >> 16 & 0xFF] +\n        HEX_NUMBERS[r1 >> 24 & 0xFF] +\n        HEX_NUMBERS[r2 >> 0 & 0xFF] +\n        HEX_NUMBERS[r2 >> 8 & 0xFF] +\n        HEX_NUMBERS[r2 >> 16 & 0xFF] +\n        HEX_NUMBERS[r2 >> 24 & 0xFF] +\n        HEX_NUMBERS[r3 >> 0 & 0xFF] +\n        HEX_NUMBERS[r3 >> 8 & 0xFF] +\n        HEX_NUMBERS[r3 >> 16 & 0xFF] +\n        HEX_NUMBERS[r3 >> 24 & 0xFF] +\n        HEX_NUMBERS[r4 >> 0 & 0xFF] +\n        HEX_NUMBERS[r4 >> 8 & 0xFF] +\n        HEX_NUMBERS[r4 >> 16 & 0xFF] +\n        HEX_NUMBERS[r4 >> 24 & 0xFF];\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * Provides group of constants to use instead of hardcoding numeric priority values.\n */\nconst priorities = {\n    get(priority = 'normal') {\n        if (typeof priority != 'number') {\n            return this[priority] || this.normal;\n        }\n        else {\n            return priority;\n        }\n    },\n    highest: 100000,\n    high: 1000,\n    normal: 0,\n    low: -1000,\n    lowest: -100000\n};\nexport default priorities;\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/ckeditorerror\n */\n/* globals console */\n/**\n * URL to the documentation with error codes.\n */\nexport const DOCUMENTATION_URL = 'https://ckeditor.com/docs/ckeditor5/latest/support/error-codes.html';\n/**\n * The CKEditor error class.\n *\n * You should throw `CKEditorError` when:\n *\n * * An unexpected situation occurred and the editor (most probably) will not work properly. Such exception will be handled\n * by the {@link module:watchdog/watchdog~Watchdog watchdog} (if it is integrated),\n * * If the editor is incorrectly integrated or the editor API is used in the wrong way. This way you will give\n * feedback to the developer as soon as possible. Keep in mind that for common integration issues which should not\n * stop editor initialization (like missing upload adapter, wrong name of a toolbar component) we use\n * {@link module:utils/ckeditorerror~logWarning `logWarning()`} and\n * {@link module:utils/ckeditorerror~logError `logError()`}\n * to improve developers experience and let them see the a working editor as soon as possible.\n *\n * ```ts\n * /**\n *  * Error thrown when a plugin cannot be loaded due to JavaScript errors, lack of plugins with a given name, etc.\n *  *\n *  * @error plugin-load\n *  * @param pluginName The name of the plugin that could not be loaded.\n *  * @param moduleName The name of the module which tried to load this plugin.\n *  *\\/\n * throw new CKEditorError( 'plugin-load', {\n * \tpluginName: 'foo',\n * \tmoduleName: 'bar'\n * } );\n * ```\n */\nexport default class CKEditorError extends Error {\n    /**\n     * Creates an instance of the CKEditorError class.\n     *\n     * @param errorName The error id in an `error-name` format. A link to this error documentation page will be added\n     * to the thrown error's `message`.\n     * @param context A context of the error by which the {@link module:watchdog/watchdog~Watchdog watchdog}\n     * is able to determine which editor crashed. It should be an editor instance or a property connected to it. It can be also\n     * a `null` value if the editor should not be restarted in case of the error (e.g. during the editor initialization).\n     * The error context should be checked using the `areConnectedThroughProperties( editor, context )` utility\n     * to check if the object works as the context.\n     * @param data Additional data describing the error. A stringified version of this object\n     * will be appended to the error message, so the data are quickly visible in the console. The original\n     * data object will also be later available under the {@link #data} property.\n     */\n    constructor(errorName, context, data) {\n        super(getErrorMessage(errorName, data));\n        this.name = 'CKEditorError';\n        this.context = context;\n        this.data = data;\n    }\n    /**\n     * Checks if the error is of the `CKEditorError` type.\n     */\n    is(type) {\n        return type === 'CKEditorError';\n    }\n    /**\n     * A utility that ensures that the thrown error is a {@link module:utils/ckeditorerror~CKEditorError} one.\n     * It is useful when combined with the {@link module:watchdog/watchdog~Watchdog} feature, which can restart the editor in case\n     * of a {@link module:utils/ckeditorerror~CKEditorError} error.\n     *\n     * @param err The error to rethrow.\n     * @param context An object connected through properties with the editor instance. This context will be used\n     * by the watchdog to verify which editor should be restarted.\n     */\n    static rethrowUnexpectedError(err, context) {\n        if (err.is && err.is('CKEditorError')) {\n            throw err;\n        }\n        /**\n         * An unexpected error occurred inside the CKEditor 5 codebase. This error will look like the original one\n         * to make the debugging easier.\n         *\n         * This error is only useful when the editor is initialized using the {@link module:watchdog/watchdog~Watchdog} feature.\n         * In case of such error (or any {@link module:utils/ckeditorerror~CKEditorError} error) the watchdog should restart the editor.\n         *\n         * @error unexpected-error\n         */\n        const error = new CKEditorError(err.message, context);\n        // Restore the original stack trace to make the error look like the original one.\n        // See https://github.com/ckeditor/ckeditor5/issues/5595 for more details.\n        error.stack = err.stack;\n        throw error;\n    }\n}\n/**\n * Logs a warning to the console with a properly formatted message and adds a link to the documentation.\n * Use whenever you want to log a warning to the console.\n *\n * ```ts\n * /**\n *  * There was a problem processing the configuration of the toolbar. The item with the given\n *  * name does not exist, so it was omitted when rendering the toolbar.\n *  *\n *  * @error toolbarview-item-unavailable\n *  * @param {String} name The name of the component.\n *  *\\/\n * logWarning( 'toolbarview-item-unavailable', { name } );\n * ```\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to throw an error and when to log\n * a warning or an error to the console.\n *\n * @param errorName The error name to be logged.\n * @param data Additional data to be logged.\n */\nexport function logWarning(errorName, data) {\n    console.warn(...formatConsoleArguments(errorName, data));\n}\n/**\n * Logs an error to the console with a properly formatted message and adds a link to the documentation.\n * Use whenever you want to log an error to the console.\n *\n * ```ts\n * /**\n *  * There was a problem processing the configuration of the toolbar. The item with the given\n *  * name does not exist, so it was omitted when rendering the toolbar.\n *  *\n *  * @error toolbarview-item-unavailable\n *  * @param {String} name The name of the component.\n *  *\\/\n *  logError( 'toolbarview-item-unavailable', { name } );\n * ```\n *\n * **Note**: In most cases logging a warning using {@link module:utils/ckeditorerror~logWarning} is enough.\n *\n * See also {@link module:utils/ckeditorerror~CKEditorError} for an explanation when to use each method.\n *\n * @param errorName The error name to be logged.\n * @param data Additional data to be logged.\n */\nexport function logError(errorName, data) {\n    console.error(...formatConsoleArguments(errorName, data));\n}\n/**\n * Returns formatted link to documentation message.\n */\nfunction getLinkToDocumentationMessage(errorName) {\n    return `\\nRead more: ${DOCUMENTATION_URL}#error-${errorName}`;\n}\n/**\n * Returns formatted error message.\n */\nfunction getErrorMessage(errorName, data) {\n    const processedObjects = new WeakSet();\n    const circularReferencesReplacer = (key, value) => {\n        if (typeof value === 'object' && value !== null) {\n            if (processedObjects.has(value)) {\n                return `[object ${value.constructor.name}]`;\n            }\n            processedObjects.add(value);\n        }\n        return value;\n    };\n    const stringifiedData = data ? ` ${JSON.stringify(data, circularReferencesReplacer)}` : '';\n    const documentationLink = getLinkToDocumentationMessage(errorName);\n    return errorName + stringifiedData + documentationLink;\n}\n/**\n * Returns formatted console error arguments.\n */\nfunction formatConsoleArguments(errorName, data) {\n    const documentationMessage = getLinkToDocumentationMessage(errorName);\n    return data ? [errorName, data, documentationMessage] : [errorName, documentationMessage];\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/elementreplacer\n */\n/**\n * Utility class allowing to hide existing HTML elements or replace them with given ones in a way that doesn't remove\n * the original elements from the DOM.\n */\nexport default class ElementReplacer {\n    constructor() {\n        this._replacedElements = [];\n    }\n    /**\n     * Hides the `element` and, if specified, inserts the the given element next to it.\n     *\n     * The effect of this method can be reverted by {@link #restore}.\n     *\n     * @param element The element to replace.\n     * @param newElement The replacement element. If not passed, then the `element` will just be hidden.\n     */\n    replace(element, newElement) {\n        this._replacedElements.push({ element, newElement });\n        element.style.display = 'none';\n        if (newElement) {\n            element.parentNode.insertBefore(newElement, element.nextSibling);\n        }\n    }\n    /**\n     * Restores what {@link #replace} did.\n     */\n    restore() {\n        this._replacedElements.forEach(({ element, newElement }) => {\n            element.style.display = '';\n            if (newElement) {\n                newElement.remove();\n            }\n        });\n        this._replacedElements = [];\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/isiterable\n */\n/**\n * Checks if value implements iterator interface.\n *\n * @param value The value to check.\n * @returns True if value implements iterator interface.\n */\nexport default function isIterable(value) {\n    return !!(value && value[Symbol.iterator]);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/createelement\n */\nimport isIterable from '../isiterable.js';\nimport { isString } from 'lodash-es';\n/**\n * Creates an HTML or SVG element with attributes and children elements.\n *\n * ```ts\n * createElement( document, 'p' ); // <p>\n * createElement( document, 'mask', { xmlns: 'http://www.w3.org/2000/svg' } ); // <mask>\n * ```\n *\n * @param doc Document used to create the element.\n * @param name Name of the element.\n * @param attributes Object where keys represent attribute keys and values represent attribute values.\n * @param children Child or any iterable of children. Strings will be automatically turned into Text nodes.\n * @returns HTML or SVG element.\n */\nexport default function createElement(doc, name, attributes = {}, children = []) {\n    const namespace = attributes && attributes.xmlns;\n    const element = namespace ? doc.createElementNS(namespace, name) : doc.createElement(name);\n    for (const key in attributes) {\n        element.setAttribute(key, attributes[key]);\n    }\n    if (isString(children) || !isIterable(children)) {\n        children = [children];\n    }\n    for (let child of children) {\n        if (isString(child)) {\n            child = doc.createTextNode(child);\n        }\n        element.appendChild(child);\n    }\n    return element;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * A helper (module) giving an access to the global DOM objects such as `window` and\n * `document`. Accessing these objects using this helper allows easy and bulletproof\n * testing, i.e. stubbing native properties:\n *\n * ```ts\n * import { global } from 'ckeditor5/utils';\n *\n * // This stub will work for any code using global module.\n * testUtils.sinon.stub( global, 'window', {\n * \tinnerWidth: 10000\n * } );\n *\n * console.log( global.window.innerWidth );\n * ```\n */\nlet globalVar; // named globalVar instead of global: https://github.com/ckeditor/ckeditor5/issues/12971\n// In some environments window and document API might not be available.\ntry {\n    globalVar = { window, document };\n}\ncatch (e) {\n    // It's not possible to mock a window object to simulate lack of a window object without writing extremely convoluted code.\n    /* istanbul ignore next -- @preserve */\n    // Let's cast it to not change module's API.\n    // We only handle this so loading editor in environments without window and document doesn't fail.\n    // For better DX we shouldn't introduce mixed types and require developers to check the type manually.\n    // This module should not be used on purpose in any environment outside browser.\n    globalVar = { window: {}, document: {} };\n}\nexport default globalVar;\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/isvalidattributename\n */\nimport global from './global.js';\n/**\n * Checks if the given attribute name is valid in terms of HTML.\n *\n * @param name Attribute name.\n */\nexport default function isValidAttributeName(name) {\n    try {\n        global.document.createAttribute(name);\n    }\n    catch (error) {\n        return false;\n    }\n    return true;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nexport default function toArray(data) {\n    return Array.isArray(data) ? data : [data];\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/spy\n */\n/**\n * Creates a spy function (ala Sinon.js) that can be used to inspect call to it.\n *\n * The following are the present features:\n *\n * * spy.called: property set to `true` if the function has been called at least once.\n *\n * @returns The spy function.\n */\nfunction spy() {\n    return function spy() {\n        spy.called = true;\n    };\n}\nexport default spy;\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/eventinfo\n */\nimport spy from './spy.js';\n/**\n * The event object passed to event callbacks. It is used to provide information about the event as well as a tool to\n * manipulate it.\n */\nexport default class EventInfo {\n    /**\n     * @param source The emitter.\n     * @param name The event name.\n     */\n    constructor(source, name) {\n        this.source = source;\n        this.name = name;\n        this.path = [];\n        // The following methods are defined in the constructor because they must be re-created per instance.\n        this.stop = spy();\n        this.off = spy();\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport priorities from './priorities.js';\n/**\n * Inserts any object with priority at correct index by priority so registered objects are always sorted from highest to lowest priority.\n *\n * @param objects Array of objects with priority to insert object to.\n * @param objectToInsert Object with `priority` property.\n */\nexport default function insertToPriorityArray(objects, objectToInsert) {\n    const priority = priorities.get(objectToInsert.priority);\n    for (let i = 0; i < objects.length; i++) {\n        if (priorities.get(objects[i].priority) < priority) {\n            objects.splice(i, 0, objectToInsert);\n            return;\n        }\n    }\n    objects.push(objectToInsert);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/version\n */\nimport CKEditorError from './ckeditorerror.js';\nconst version = '41.2.1';\nexport default version;\n// The second argument is not a month. It is `monthIndex` and starts from `0`.\nexport const releaseDate = new Date(2024, 2, 18);\n/* istanbul ignore next -- @preserve */\nif (globalThis.CKEDITOR_VERSION) {\n    /**\n     * This error is thrown when due to a mistake in how CKEditor 5 was installed or initialized, some\n     * of its modules were duplicated (evaluated and executed twice). Module duplication leads to inevitable runtime\n     * errors.\n     *\n     * There are many situations in which some modules can be loaded twice. In the worst case scenario,\n     * you may need to check your project for each of these issues and fix them all.\n     *\n     * # Trying to add a plugin to an existing build\n     *\n     * If you import an existing CKEditor 5 build and a plugin like this:\n     *\n     * ```ts\n     * import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n     * import Highlight from '@ckeditor/ckeditor5-highlight/src/highlight';\n     * ```\n     *\n     * Then your project loads some CKEditor 5 packages twice. How does it happen?\n     *\n     * The build package contains a file which is already compiled with webpack. This means\n     * that it contains all the necessary code from e.g. `@ckeditor/ckeditor5-engine` and `@ckeditor/ckeditor5-utils`.\n     *\n     * However, the `Highlight` plugin imports some of the modules from these packages, too. If you ask webpack to\n     * build such a project, you will end up with the modules being included (and run) twice &ndash; first, because they are\n     * included inside the build package, and second, because they are required by the `Highlight` plugin.\n     *\n     * Therefore, **you must never add plugins to an existing build** unless your plugin has no dependencies.\n     *\n     * Adding plugins to a build is done by taking the source version of this build (so, before it was built with webpack)\n     * and adding plugins there. In this situation, webpack will know that it only needs to load each plugin once.\n     *\n     * Read more in the {@glink installation/plugins/installing-plugins Installing plugins} guide.\n     *\n     * # Confused an editor build with an editor implementation\n     *\n     * This scenario is very similar to the previous one, but has a different origin.\n     *\n     * Let's assume that you wanted to use CKEditor 5 from source, as explained in the\n     * {@glink installation/advanced/alternative-setups/integrating-from-source-webpack \"Building from source\"} section\n     * or in the {@glink framework/quick-start \"Quick start\"} guide of CKEditor 5 Framework.\n     *\n     * The correct way to do so is to import an editor and plugins and run them together like this:\n     *\n     * ```ts\n     * import ClassicEditor from '@ckeditor/ckeditor5-editor-classic/src/classiceditor';\n     * import Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n     * import Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n     * import Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n     * import Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n     *\n     * ClassicEditor\n     * \t.create( document.querySelector( '#editor' ), {\n     * \t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n     * \t\ttoolbar: [ 'bold', 'italic' ]\n     * \t} )\n     * \t.then( editor => {\n     * \t\tconsole.log( 'Editor was initialized', editor );\n     * \t} )\n     * \t.catch( error => {\n     * \t\tconsole.error( error.stack );\n     * \t} );\n     * ```\n     *\n     * However, you might have mistakenly imported a build instead of the source `ClassicEditor`. In this case\n     * your imports will look like this:\n     *\n     * ```ts\n     * import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n     * import Essentials from '@ckeditor/ckeditor5-essentials/src/essentials';\n     * import Paragraph from '@ckeditor/ckeditor5-paragraph/src/paragraph';\n     * import Bold from '@ckeditor/ckeditor5-basic-styles/src/bold';\n     * import Italic from '@ckeditor/ckeditor5-basic-styles/src/italic';\n     * ```\n     *\n     * This creates the same situation as in the previous section because you use a build together with source plugins.\n     *\n     * Remember: `@ckeditor/ckeditor5-build-*` packages contain editor builds and `@ckeditor/ckeditor5-editor-*` contain source editors.\n     *\n     * # Loading two or more builds on one page\n     *\n     * If you use CKEditor 5 builds, you might have loaded two (or more) `ckeditor.js` files on one web page.\n     * Check your web page for duplicated `<script>` elements or make sure your page builder/bundler includes CKEditor only once.\n     *\n     * If you want to use two different types of editors at once, see the\n     * {@glink installation/advanced/using-two-editors \"Using two different editors\"}\n     * section.\n     *\n     * # Using outdated packages\n     *\n     * Building CKEditor 5 from source requires using multiple npm packages. These packages have their dependencies\n     * to other packages. If you use the latest version of, for example, `@ckeditor/ckeditor5-editor-classic` with\n     * an outdated version of `@ckeditor/ckeditor5-image`, npm or yarn will need to install two different versions of\n     * `@ckeditor/ckeditor5-core` because `@ckeditor/ckeditor5-editor-classic` and `@ckeditor/ckeditor5-image` may require\n     * different versions of the core package.\n     *\n     * The solution to this issue is to update all packages to their latest version. We recommend\n     * using tools like [`npm-check-updates`](https://www.npmjs.com/package/npm-check-updates) which simplify this process.\n     *\n     * # Conflicting version of dependencies\n     *\n     * This is a special case of the previous scenario. If you use CKEditor 5 with some third-party plugins,\n     * it may happen that even if you use the latest versions of the official packages and the latest version of\n     * these third-party packages, there will be a conflict between some of their dependencies.\n     *\n     * Such a problem can be resolved by either downgrading CKEditor 5 packages (which we do not recommend) or\n     * asking the author of the third-party package to upgrade its depdendencies (or forking their project and doing this yourself).\n     *\n     * **Note:** All official CKEditor 5 packages (excluding integrations and `ckeditor5-dev-*` packages) are released in the\n     * same major version. This means that in the `x.y.z` version, the `x` is the same for all packages. This is the simplest way to check\n     * whether you use packages coming from the same CKEditor 5 version. You can read more about versioning in the\n     * {@glink updating/versioning-policy Versioning policy} guide.\n     *\n     * # Packages were duplicated in `node_modules`\n     *\n     * In some situations, especially when calling `npm install` multiple times, it may happen\n     * that npm will not correctly \"deduplicate\" packages.\n     *\n     * Normally, npm deduplicates all packages so, for example, `@ckeditor/ckeditor5-core` is installed only once in `node_modules/`.\n     * However, it is known to fail to do so from time to time.\n     *\n     * We recommend checking if any of the steps listed below help:\n     *\n     * * `rm -rf node_modules && npm install` to make sure you have a clean `node_modules/` directory. This step\n     * is known to help in most cases.\n     * * If you use `yarn.lock` or `package-lock.json`, remove it before `npm install`.\n     * * Check whether all CKEditor 5 packages are up to date and reinstall them\n     * if you changed anything (`rm -rf node_modules && npm install`).\n     *\n     * If all packages are correct and compatible with each other, the steps above are known to help. If not, you may\n     * try to check with `npm ls` how many times packages like `@ckeditor/ckeditor5-core`, `@ckeditor/ckeditor5-engine` and\n     *`@ckeditor/ckeditor5-utils` are installed. If more than once, verify which package causes that.\n     *\n     * @error ckeditor-duplicated-modules\n     */\n    throw new CKEditorError('ckeditor-duplicated-modules', null);\n}\nelse {\n    globalThis.CKEDITOR_VERSION = version;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/emittermixin\n */\nimport EventInfo from './eventinfo.js';\nimport uid from './uid.js';\nimport priorities from './priorities.js';\nimport insertToPriorityArray from './inserttopriorityarray.js';\n// To check if component is loaded more than once.\nimport './version.js';\nimport CKEditorError from './ckeditorerror.js';\nconst _listeningTo = Symbol('listeningTo');\nconst _emitterId = Symbol('emitterId');\nconst _delegations = Symbol('delegations');\nconst defaultEmitterClass = EmitterMixin(Object);\nexport default function EmitterMixin(base) {\n    if (!base) {\n        return defaultEmitterClass;\n    }\n    class Mixin extends base {\n        on(event, callback, options) {\n            this.listenTo(this, event, callback, options);\n        }\n        once(event, callback, options) {\n            let wasFired = false;\n            const onceCallback = (event, ...args) => {\n                // Ensure the callback is called only once even if the callback itself leads to re-firing the event\n                // (which would call the callback again).\n                if (!wasFired) {\n                    wasFired = true;\n                    // Go off() at the first call.\n                    event.off();\n                    // Go with the original callback.\n                    callback.call(this, event, ...args);\n                }\n            };\n            // Make a similar on() call, simply replacing the callback.\n            this.listenTo(this, event, onceCallback, options);\n        }\n        off(event, callback) {\n            this.stopListening(this, event, callback);\n        }\n        listenTo(emitter, event, callback, options = {}) {\n            let emitterInfo, eventCallbacks;\n            // _listeningTo contains a list of emitters that this object is listening to.\n            // This list has the following format:\n            //\n            // _listeningTo: {\n            //     emitterId: {\n            //         emitter: emitter,\n            //         callbacks: {\n            //             event1: [ callback1, callback2, ... ]\n            //             ....\n            //         }\n            //     },\n            //     ...\n            // }\n            if (!this[_listeningTo]) {\n                this[_listeningTo] = {};\n            }\n            const emitters = this[_listeningTo];\n            if (!_getEmitterId(emitter)) {\n                _setEmitterId(emitter);\n            }\n            const emitterId = _getEmitterId(emitter);\n            if (!(emitterInfo = emitters[emitterId])) {\n                emitterInfo = emitters[emitterId] = {\n                    emitter,\n                    callbacks: {}\n                };\n            }\n            if (!(eventCallbacks = emitterInfo.callbacks[event])) {\n                eventCallbacks = emitterInfo.callbacks[event] = [];\n            }\n            eventCallbacks.push(callback);\n            // Finally register the callback to the event.\n            addEventListener(this, emitter, event, callback, options);\n        }\n        stopListening(emitter, event, callback) {\n            const emitters = this[_listeningTo];\n            let emitterId = emitter && _getEmitterId(emitter);\n            const emitterInfo = (emitters && emitterId) ? emitters[emitterId] : undefined;\n            const eventCallbacks = (emitterInfo && event) ? emitterInfo.callbacks[event] : undefined;\n            // Stop if nothing has been listened.\n            if (!emitters || (emitter && !emitterInfo) || (event && !eventCallbacks)) {\n                return;\n            }\n            // All params provided. off() that single callback.\n            if (callback) {\n                removeEventListener(this, emitter, event, callback);\n                // We must remove callbacks as well in order to prevent memory leaks.\n                // See https://github.com/ckeditor/ckeditor5/pull/8480\n                const index = eventCallbacks.indexOf(callback);\n                if (index !== -1) {\n                    if (eventCallbacks.length === 1) {\n                        delete emitterInfo.callbacks[event];\n                    }\n                    else {\n                        removeEventListener(this, emitter, event, callback);\n                    }\n                }\n            }\n            // Only `emitter` and `event` provided. off() all callbacks for that event.\n            else if (eventCallbacks) {\n                while ((callback = eventCallbacks.pop())) {\n                    removeEventListener(this, emitter, event, callback);\n                }\n                delete emitterInfo.callbacks[event];\n            }\n            // Only `emitter` provided. off() all events for that emitter.\n            else if (emitterInfo) {\n                for (event in emitterInfo.callbacks) {\n                    this.stopListening(emitter, event);\n                }\n                delete emitters[emitterId];\n            }\n            // No params provided. off() all emitters.\n            else {\n                for (emitterId in emitters) {\n                    this.stopListening(emitters[emitterId].emitter);\n                }\n                delete this[_listeningTo];\n            }\n        }\n        fire(eventOrInfo, ...args) {\n            try {\n                const eventInfo = eventOrInfo instanceof EventInfo ? eventOrInfo : new EventInfo(this, eventOrInfo);\n                const event = eventInfo.name;\n                let callbacks = getCallbacksForEvent(this, event);\n                // Record that the event passed this emitter on its path.\n                eventInfo.path.push(this);\n                // Handle event listener callbacks first.\n                if (callbacks) {\n                    // Arguments passed to each callback.\n                    const callbackArgs = [eventInfo, ...args];\n                    // Copying callbacks array is the easiest and most secure way of preventing infinite loops, when event callbacks\n                    // are added while processing other callbacks. Previous solution involved adding counters (unique ids) but\n                    // failed if callbacks were added to the queue before currently processed callback.\n                    // If this proves to be too inefficient, another method is to change `.on()` so callbacks are stored if same\n                    // event is currently processed. Then, `.fire()` at the end, would have to add all stored events.\n                    callbacks = Array.from(callbacks);\n                    for (let i = 0; i < callbacks.length; i++) {\n                        callbacks[i].callback.apply(this, callbackArgs);\n                        // Remove the callback from future requests if off() has been called.\n                        if (eventInfo.off.called) {\n                            // Remove the called mark for the next calls.\n                            delete eventInfo.off.called;\n                            this._removeEventListener(event, callbacks[i].callback);\n                        }\n                        // Do not execute next callbacks if stop() was called.\n                        if (eventInfo.stop.called) {\n                            break;\n                        }\n                    }\n                }\n                // Delegate event to other emitters if needed.\n                const delegations = this[_delegations];\n                if (delegations) {\n                    const destinations = delegations.get(event);\n                    const passAllDestinations = delegations.get('*');\n                    if (destinations) {\n                        fireDelegatedEvents(destinations, eventInfo, args);\n                    }\n                    if (passAllDestinations) {\n                        fireDelegatedEvents(passAllDestinations, eventInfo, args);\n                    }\n                }\n                return eventInfo.return;\n            }\n            catch (err) {\n                // @if CK_DEBUG // throw err;\n                /* istanbul ignore next -- @preserve */\n                CKEditorError.rethrowUnexpectedError(err, this);\n            }\n        }\n        delegate(...events) {\n            return {\n                to: (emitter, nameOrFunction) => {\n                    if (!this[_delegations]) {\n                        this[_delegations] = new Map();\n                    }\n                    // Originally there was a for..of loop which unfortunately caused an error in Babel that didn't allow\n                    // build an application. See: https://github.com/ckeditor/ckeditor5-react/issues/40.\n                    events.forEach(eventName => {\n                        const destinations = this[_delegations].get(eventName);\n                        if (!destinations) {\n                            this[_delegations].set(eventName, new Map([[emitter, nameOrFunction]]));\n                        }\n                        else {\n                            destinations.set(emitter, nameOrFunction);\n                        }\n                    });\n                }\n            };\n        }\n        stopDelegating(event, emitter) {\n            if (!this[_delegations]) {\n                return;\n            }\n            if (!event) {\n                this[_delegations].clear();\n            }\n            else if (!emitter) {\n                this[_delegations].delete(event);\n            }\n            else {\n                const destinations = this[_delegations].get(event);\n                if (destinations) {\n                    destinations.delete(emitter);\n                }\n            }\n        }\n        _addEventListener(event, callback, options) {\n            createEventNamespace(this, event);\n            const lists = getCallbacksListsForNamespace(this, event);\n            const priority = priorities.get(options.priority);\n            const callbackDefinition = {\n                callback,\n                priority\n            };\n            // Add the callback to all callbacks list.\n            for (const callbacks of lists) {\n                // Add the callback to the list in the right priority position.\n                insertToPriorityArray(callbacks, callbackDefinition);\n            }\n        }\n        _removeEventListener(event, callback) {\n            const lists = getCallbacksListsForNamespace(this, event);\n            for (const callbacks of lists) {\n                for (let i = 0; i < callbacks.length; i++) {\n                    if (callbacks[i].callback == callback) {\n                        // Remove the callback from the list (fixing the next index).\n                        callbacks.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n    }\n    return Mixin;\n}\n// Backward compatibility with `mix`\n([\n    'on', 'once', 'off', 'listenTo',\n    'stopListening', 'fire', 'delegate', 'stopDelegating',\n    '_addEventListener', '_removeEventListener'\n]).forEach(key => {\n    EmitterMixin[key] = defaultEmitterClass.prototype[key];\n});\n/**\n * Checks if `listeningEmitter` listens to an emitter with given `listenedToEmitterId` and if so, returns that emitter.\n * If not, returns `null`.\n *\n * @internal\n * @param listeningEmitter An emitter that listens.\n * @param listenedToEmitterId Unique emitter id of emitter listened to.\n */\nexport function _getEmitterListenedTo(listeningEmitter, listenedToEmitterId) {\n    const listeningTo = listeningEmitter[_listeningTo];\n    if (listeningTo && listeningTo[listenedToEmitterId]) {\n        return listeningTo[listenedToEmitterId].emitter;\n    }\n    return null;\n}\n/**\n * Sets emitter's unique id.\n *\n * **Note:** `_emitterId` can be set only once.\n *\n * @internal\n * @param emitter An emitter for which id will be set.\n * @param id Unique id to set. If not passed, random unique id will be set.\n */\nexport function _setEmitterId(emitter, id) {\n    if (!emitter[_emitterId]) {\n        emitter[_emitterId] = id || uid();\n    }\n}\n/**\n * Returns emitter's unique id.\n *\n * @internal\n * @param emitter An emitter which id will be returned.\n */\nexport function _getEmitterId(emitter) {\n    return emitter[_emitterId];\n}\n/**\n * Gets the internal `_events` property of the given object.\n * `_events` property store all lists with callbacks for registered event names.\n * If there were no events registered on the object, empty `_events` object is created.\n */\nfunction getEvents(source) {\n    if (!source._events) {\n        Object.defineProperty(source, '_events', {\n            value: {}\n        });\n    }\n    return source._events;\n}\n/**\n * Creates event node for generic-specific events relation architecture.\n */\nfunction makeEventNode() {\n    return {\n        callbacks: [],\n        childEvents: []\n    };\n}\n/**\n * Creates an architecture for generic-specific events relation.\n * If needed, creates all events for given eventName, i.e. if the first registered event\n * is foo:bar:abc, it will create foo:bar:abc, foo:bar and foo event and tie them together.\n * It also copies callbacks from more generic events to more specific events when\n * specific events are created.\n */\nfunction createEventNamespace(source, eventName) {\n    const events = getEvents(source);\n    // First, check if the event we want to add to the structure already exists.\n    if (events[eventName]) {\n        // If it exists, we don't have to do anything.\n        return;\n    }\n    // In other case, we have to create the structure for the event.\n    // Note, that we might need to create intermediate events too.\n    // I.e. if foo:bar:abc is being registered and we only have foo in the structure,\n    // we need to also register foo:bar.\n    // Currently processed event name.\n    let name = eventName;\n    // Name of the event that is a child event for currently processed event.\n    let childEventName = null;\n    // Array containing all newly created specific events.\n    const newEventNodes = [];\n    // While loop can't check for ':' index because we have to handle generic events too.\n    // In each loop, we truncate event name, going from the most specific name to the generic one.\n    // I.e. foo:bar:abc -> foo:bar -> foo.\n    while (name !== '') {\n        if (events[name]) {\n            // If the currently processed event name is already registered, we can be sure\n            // that it already has all the structure created, so we can break the loop here\n            // as no more events need to be registered.\n            break;\n        }\n        // If this event is not yet registered, create a new object for it.\n        events[name] = makeEventNode();\n        // Add it to the array with newly created events.\n        newEventNodes.push(events[name]);\n        // Add previously processed event name as a child of this event.\n        if (childEventName) {\n            events[name].childEvents.push(childEventName);\n        }\n        childEventName = name;\n        // If `.lastIndexOf()` returns -1, `.substr()` will return '' which will break the loop.\n        name = name.substr(0, name.lastIndexOf(':'));\n    }\n    if (name !== '') {\n        // If name is not empty, we found an already registered event that was a parent of the\n        // event we wanted to register.\n        // Copy that event's callbacks to newly registered events.\n        for (const node of newEventNodes) {\n            node.callbacks = events[name].callbacks.slice();\n        }\n        // Add last newly created event to the already registered event.\n        events[name].childEvents.push(childEventName);\n    }\n}\n/**\n * Gets an array containing callbacks list for a given event and it's more specific events.\n * I.e. if given event is foo:bar and there is also foo:bar:abc event registered, this will\n * return callback list of foo:bar and foo:bar:abc (but not foo).\n */\nfunction getCallbacksListsForNamespace(source, eventName) {\n    const eventNode = getEvents(source)[eventName];\n    if (!eventNode) {\n        return [];\n    }\n    let callbacksLists = [eventNode.callbacks];\n    for (let i = 0; i < eventNode.childEvents.length; i++) {\n        const childCallbacksLists = getCallbacksListsForNamespace(source, eventNode.childEvents[i]);\n        callbacksLists = callbacksLists.concat(childCallbacksLists);\n    }\n    return callbacksLists;\n}\n/**\n * Get the list of callbacks for a given event, but only if there any callbacks have been registered.\n * If there are no callbacks registered for given event, it checks if this is a specific event and looks\n * for callbacks for it's more generic version.\n */\nfunction getCallbacksForEvent(source, eventName) {\n    let event;\n    if (!source._events || !(event = source._events[eventName]) || !event.callbacks.length) {\n        // There are no callbacks registered for specified eventName.\n        // But this could be a specific-type event that is in a namespace.\n        if (eventName.indexOf(':') > -1) {\n            // If the eventName is specific, try to find callback lists for more generic event.\n            return getCallbacksForEvent(source, eventName.substr(0, eventName.lastIndexOf(':')));\n        }\n        else {\n            // If this is a top-level generic event, return null;\n            return null;\n        }\n    }\n    return event.callbacks;\n}\n/**\n * Fires delegated events for given map of destinations.\n *\n * @param destinations A map containing `[ {@link module:utils/emittermixin~Emitter}, \"event name\" ]` pair destinations.\n * @param eventInfo The original event info object.\n * @param fireArgs Arguments the original event was fired with.\n */\nfunction fireDelegatedEvents(destinations, eventInfo, fireArgs) {\n    for (let [emitter, name] of destinations) {\n        if (!name) {\n            name = eventInfo.name;\n        }\n        else if (typeof name == 'function') {\n            name = name(eventInfo.name);\n        }\n        const delegatedInfo = new EventInfo(eventInfo.source, name);\n        delegatedInfo.path = [...eventInfo.path];\n        emitter.fire(delegatedInfo, ...fireArgs);\n    }\n}\n/**\n * Helper for registering event callback on the emitter.\n */\nfunction addEventListener(listener, emitter, event, callback, options) {\n    if (emitter._addEventListener) {\n        emitter._addEventListener(event, callback, options);\n    }\n    else {\n        // Allow listening on objects that do not implement Emitter interface.\n        // This is needed in some tests that are using mocks instead of the real objects with EmitterMixin mixed.\n        (listener._addEventListener).call(emitter, event, callback, options);\n    }\n}\n/**\n * Helper for removing event callback from the emitter.\n */\nfunction removeEventListener(listener, emitter, event, callback) {\n    if (emitter._removeEventListener) {\n        emitter._removeEventListener(event, callback);\n    }\n    else {\n        // Allow listening on objects that do not implement Emitter interface.\n        // This is needed in some tests that are using mocks instead of the real objects with EmitterMixin mixed.\n        listener._removeEventListener.call(emitter, event, callback);\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/collection\n */\nimport EmitterMixin from './emittermixin.js';\nimport CKEditorError from './ckeditorerror.js';\nimport uid from './uid.js';\nimport isIterable from './isiterable.js';\n/**\n * Collections are ordered sets of objects. Items in the collection can be retrieved by their indexes\n * in the collection (like in an array) or by their ids.\n *\n * If an object without an `id` property is being added to the collection, the `id` property will be generated\n * automatically. Note that the automatically generated id is unique only within this single collection instance.\n *\n * By default an item in the collection is identified by its `id` property. The name of the identifier can be\n * configured through the constructor of the collection.\n *\n * @typeParam T The type of the collection element.\n */\nexport default class Collection extends EmitterMixin() {\n    constructor(initialItemsOrOptions = {}, options = {}) {\n        super();\n        const hasInitialItems = isIterable(initialItemsOrOptions);\n        if (!hasInitialItems) {\n            options = initialItemsOrOptions;\n        }\n        this._items = [];\n        this._itemMap = new Map();\n        this._idProperty = options.idProperty || 'id';\n        this._bindToExternalToInternalMap = new WeakMap();\n        this._bindToInternalToExternalMap = new WeakMap();\n        this._skippedIndexesFromExternal = [];\n        // Set the initial content of the collection (if provided in the constructor).\n        if (hasInitialItems) {\n            for (const item of initialItemsOrOptions) {\n                this._items.push(item);\n                this._itemMap.set(this._getItemIdBeforeAdding(item), item);\n            }\n        }\n    }\n    /**\n     * The number of items available in the collection.\n     */\n    get length() {\n        return this._items.length;\n    }\n    /**\n     * Returns the first item from the collection or null when collection is empty.\n     */\n    get first() {\n        return this._items[0] || null;\n    }\n    /**\n     * Returns the last item from the collection or null when collection is empty.\n     */\n    get last() {\n        return this._items[this.length - 1] || null;\n    }\n    /**\n     * Adds an item into the collection.\n     *\n     * If the item does not have an id, then it will be automatically generated and set on the item.\n     *\n     * @param item\n     * @param index The position of the item in the collection. The item\n     * is pushed to the collection when `index` not specified.\n     * @fires add\n     * @fires change\n     */\n    add(item, index) {\n        return this.addMany([item], index);\n    }\n    /**\n     * Adds multiple items into the collection.\n     *\n     * Any item not containing an id will get an automatically generated one.\n     *\n     * @param items\n     * @param index The position of the insertion. Items will be appended if no `index` is specified.\n     * @fires add\n     * @fires change\n     */\n    addMany(items, index) {\n        if (index === undefined) {\n            index = this._items.length;\n        }\n        else if (index > this._items.length || index < 0) {\n            /**\n             * The `index` passed to {@link module:utils/collection~Collection#addMany `Collection#addMany()`}\n             * is invalid. It must be a number between 0 and the collection's length.\n             *\n             * @error collection-add-item-invalid-index\n             */\n            throw new CKEditorError('collection-add-item-invalid-index', this);\n        }\n        let offset = 0;\n        for (const item of items) {\n            const itemId = this._getItemIdBeforeAdding(item);\n            const currentItemIndex = index + offset;\n            this._items.splice(currentItemIndex, 0, item);\n            this._itemMap.set(itemId, item);\n            this.fire('add', item, currentItemIndex);\n            offset++;\n        }\n        this.fire('change', {\n            added: items,\n            removed: [],\n            index\n        });\n        return this;\n    }\n    /**\n     * Gets an item by its ID or index.\n     *\n     * @param idOrIndex The item ID or index in the collection.\n     * @returns The requested item or `null` if such item does not exist.\n     */\n    get(idOrIndex) {\n        let item;\n        if (typeof idOrIndex == 'string') {\n            item = this._itemMap.get(idOrIndex);\n        }\n        else if (typeof idOrIndex == 'number') {\n            item = this._items[idOrIndex];\n        }\n        else {\n            /**\n             * An index or ID must be given.\n             *\n             * @error collection-get-invalid-arg\n             */\n            throw new CKEditorError('collection-get-invalid-arg', this);\n        }\n        return item || null;\n    }\n    /**\n     * Returns a Boolean indicating whether the collection contains an item.\n     *\n     * @param itemOrId The item or its ID in the collection.\n     * @returns `true` if the collection contains the item, `false` otherwise.\n     */\n    has(itemOrId) {\n        if (typeof itemOrId == 'string') {\n            return this._itemMap.has(itemOrId);\n        }\n        else { // Object\n            const idProperty = this._idProperty;\n            const id = itemOrId[idProperty];\n            return id && this._itemMap.has(id);\n        }\n    }\n    /**\n     * Gets an index of an item in the collection.\n     * When an item is not defined in the collection, the index will equal -1.\n     *\n     * @param itemOrId The item or its ID in the collection.\n     * @returns The index of a given item.\n     */\n    getIndex(itemOrId) {\n        let item;\n        if (typeof itemOrId == 'string') {\n            item = this._itemMap.get(itemOrId);\n        }\n        else {\n            item = itemOrId;\n        }\n        return item ? this._items.indexOf(item) : -1;\n    }\n    /**\n     * Removes an item from the collection.\n     *\n     * @param subject The item to remove, its ID or index in the collection.\n     * @returns The removed item.\n     * @fires remove\n     * @fires change\n     */\n    remove(subject) {\n        const [item, index] = this._remove(subject);\n        this.fire('change', {\n            added: [],\n            removed: [item],\n            index\n        });\n        return item;\n    }\n    /**\n     * Executes the callback for each item in the collection and composes an array or values returned by this callback.\n     *\n     * @typeParam U The result type of the callback.\n     * @param callback\n     * @param ctx Context in which the `callback` will be called.\n     * @returns The result of mapping.\n     */\n    map(callback, ctx) {\n        return this._items.map(callback, ctx);\n    }\n    /**\n     * Performs the specified action for each item in the collection.\n     *\n     * @param ctx Context in which the `callback` will be called.\n     */\n    forEach(callback, ctx) {\n        this._items.forEach(callback, ctx);\n    }\n    /**\n     * Finds the first item in the collection for which the `callback` returns a true value.\n     *\n     * @param callback\n     * @param ctx Context in which the `callback` will be called.\n     * @returns The item for which `callback` returned a true value.\n     */\n    find(callback, ctx) {\n        return this._items.find(callback, ctx);\n    }\n    /**\n     * Returns an array with items for which the `callback` returned a true value.\n     *\n     * @param callback\n     * @param ctx Context in which the `callback` will be called.\n     * @returns The array with matching items.\n     */\n    filter(callback, ctx) {\n        return this._items.filter(callback, ctx);\n    }\n    /**\n     * Removes all items from the collection and destroys the binding created using\n     * {@link #bindTo}.\n     *\n     * @fires remove\n     * @fires change\n     */\n    clear() {\n        if (this._bindToCollection) {\n            this.stopListening(this._bindToCollection);\n            this._bindToCollection = null;\n        }\n        const removedItems = Array.from(this._items);\n        while (this.length) {\n            this._remove(0);\n        }\n        this.fire('change', {\n            added: [],\n            removed: removedItems,\n            index: 0\n        });\n    }\n    /**\n     * Binds and synchronizes the collection with another one.\n     *\n     * The binding can be a simple factory:\n     *\n     * ```ts\n     * class FactoryClass {\n     * \tpublic label: string;\n     *\n     * \tconstructor( data: { label: string } ) {\n     * \t\tthis.label = data.label;\n     * \t}\n     * }\n     *\n     * const source = new Collection<{ label: string }>( { idProperty: 'label' } );\n     * const target = new Collection<FactoryClass>();\n     *\n     * target.bindTo( source ).as( FactoryClass );\n     *\n     * source.add( { label: 'foo' } );\n     * source.add( { label: 'bar' } );\n     *\n     * console.log( target.length ); // 2\n     * console.log( target.get( 1 ).label ); // 'bar'\n     *\n     * source.remove( 0 );\n     * console.log( target.length ); // 1\n     * console.log( target.get( 0 ).label ); // 'bar'\n     * ```\n     *\n     * or the factory driven by a custom callback:\n     *\n     * ```ts\n     * class FooClass {\n     * \tpublic label: string;\n     *\n     * \tconstructor( data: { label: string } ) {\n     * \t\tthis.label = data.label;\n     * \t}\n     * }\n     *\n     * class BarClass {\n     * \tpublic label: string;\n     *\n     * \tconstructor( data: { label: string } ) {\n     * \t\tthis.label = data.label;\n     * \t}\n     * }\n     *\n     * const source = new Collection<{ label: string }>( { idProperty: 'label' } );\n     * const target = new Collection<FooClass | BarClass>();\n     *\n     * target.bindTo( source ).using( ( item ) => {\n     * \tif ( item.label == 'foo' ) {\n     * \t\treturn new FooClass( item );\n     * \t} else {\n     * \t\treturn new BarClass( item );\n     * \t}\n     * } );\n     *\n     * source.add( { label: 'foo' } );\n     * source.add( { label: 'bar' } );\n     *\n     * console.log( target.length ); // 2\n     * console.log( target.get( 0 ) instanceof FooClass ); // true\n     * console.log( target.get( 1 ) instanceof BarClass ); // true\n     * ```\n     *\n     * or the factory out of property name:\n     *\n     * ```ts\n     * const source = new Collection<{ nested: { value: string } }>();\n     * const target = new Collection<{ value: string }>();\n     *\n     * target.bindTo( source ).using( 'nested' );\n     *\n     * source.add( { nested: { value: 'foo' } } );\n     * source.add( { nested: { value: 'bar' } } );\n     *\n     * console.log( target.length ); // 2\n     * console.log( target.get( 0 ).value ); // 'foo'\n     * console.log( target.get( 1 ).value ); // 'bar'\n     * ```\n     *\n     * It's possible to skip specified items by returning null value:\n     *\n     * ```ts\n     * const source = new Collection<{ hidden: boolean }>();\n     * const target = new Collection<{ hidden: boolean }>();\n     *\n     * target.bindTo( source ).using( item => {\n     * \tif ( item.hidden ) {\n     * \t\treturn null;\n     * \t}\n     *\n     * \treturn item;\n     * } );\n     *\n     * source.add( { hidden: true } );\n     * source.add( { hidden: false } );\n     *\n     * console.log( source.length ); // 2\n     * console.log( target.length ); // 1\n     * ```\n     *\n     * **Note**: {@link #clear} can be used to break the binding.\n     *\n     * @typeParam S The type of `externalCollection` element.\n     * @param externalCollection A collection to be bound.\n     * @returns The binding chain object.\n     */\n    bindTo(externalCollection) {\n        if (this._bindToCollection) {\n            /**\n             * The collection cannot be bound more than once.\n             *\n             * @error collection-bind-to-rebind\n             */\n            throw new CKEditorError('collection-bind-to-rebind', this);\n        }\n        this._bindToCollection = externalCollection;\n        return {\n            as: Class => {\n                this._setUpBindToBinding(item => new Class(item));\n            },\n            using: callbackOrProperty => {\n                if (typeof callbackOrProperty == 'function') {\n                    this._setUpBindToBinding(callbackOrProperty);\n                }\n                else {\n                    this._setUpBindToBinding(item => item[callbackOrProperty]);\n                }\n            }\n        };\n    }\n    /**\n     * Finalizes and activates a binding initiated by {@link #bindTo}.\n     *\n     * @param factory A function which produces collection items.\n     */\n    _setUpBindToBinding(factory) {\n        const externalCollection = this._bindToCollection;\n        // Adds the item to the collection once a change has been done to the external collection.\n        const addItem = (evt, externalItem, index) => {\n            const isExternalBoundToThis = externalCollection._bindToCollection == this;\n            const externalItemBound = externalCollection._bindToInternalToExternalMap.get(externalItem);\n            // If an external collection is bound to this collection, which makes it a 2–way binding,\n            // and the particular external collection item is already bound, don't add it here.\n            // The external item has been created **out of this collection's item** and (re)adding it will\n            // cause a loop.\n            if (isExternalBoundToThis && externalItemBound) {\n                this._bindToExternalToInternalMap.set(externalItem, externalItemBound);\n                this._bindToInternalToExternalMap.set(externalItemBound, externalItem);\n            }\n            else {\n                const item = factory(externalItem);\n                // When there is no item we need to remember skipped index first and then we can skip this item.\n                if (!item) {\n                    this._skippedIndexesFromExternal.push(index);\n                    return;\n                }\n                // Lets try to put item at the same index as index in external collection\n                // but when there are a skipped items in one or both collections we need to recalculate this index.\n                let finalIndex = index;\n                // When we try to insert item after some skipped items from external collection we need\n                // to include this skipped items and decrease index.\n                //\n                // For the following example:\n                // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal' ]\n                // internal -> [ A ]\n                //\n                // Another item is been added at the end of external collection:\n                // external.add( 'D' )\n                // external -> [ 'A', 'B - skipped for internal', 'C - skipped for internal', 'D' ]\n                //\n                // We can't just add 'D' to internal at the same index as index in external because\n                // this will produce empty indexes what is invalid:\n                // internal -> [ 'A', empty, empty, 'D' ]\n                //\n                // So we need to include skipped items and decrease index\n                // internal -> [ 'A', 'D' ]\n                for (const skipped of this._skippedIndexesFromExternal) {\n                    if (index > skipped) {\n                        finalIndex--;\n                    }\n                }\n                // We need to take into consideration that external collection could skip some items from\n                // internal collection.\n                //\n                // For the following example:\n                // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external' ]\n                // external -> [ A ]\n                //\n                // Another item is been added at the end of external collection:\n                // external.add( 'D' )\n                // external -> [ 'A', 'D' ]\n                //\n                // We need to include skipped items and place new item after them:\n                // internal -> [ 'A', 'B - skipped for external', 'C - skipped for external', 'D' ]\n                for (const skipped of externalCollection._skippedIndexesFromExternal) {\n                    if (finalIndex >= skipped) {\n                        finalIndex++;\n                    }\n                }\n                this._bindToExternalToInternalMap.set(externalItem, item);\n                this._bindToInternalToExternalMap.set(item, externalItem);\n                this.add(item, finalIndex);\n                // After adding new element to internal collection we need update indexes\n                // of skipped items in external collection.\n                for (let i = 0; i < externalCollection._skippedIndexesFromExternal.length; i++) {\n                    if (finalIndex <= externalCollection._skippedIndexesFromExternal[i]) {\n                        externalCollection._skippedIndexesFromExternal[i]++;\n                    }\n                }\n            }\n        };\n        // Load the initial content of the collection.\n        for (const externalItem of externalCollection) {\n            addItem(null, externalItem, externalCollection.getIndex(externalItem));\n        }\n        // Synchronize the with collection as new items are added.\n        this.listenTo(externalCollection, 'add', addItem);\n        // Synchronize the with collection as new items are removed.\n        this.listenTo(externalCollection, 'remove', (evt, externalItem, index) => {\n            const item = this._bindToExternalToInternalMap.get(externalItem);\n            if (item) {\n                this.remove(item);\n            }\n            // After removing element from external collection we need update/remove indexes\n            // of skipped items in internal collection.\n            this._skippedIndexesFromExternal = this._skippedIndexesFromExternal.reduce((result, skipped) => {\n                if (index < skipped) {\n                    result.push(skipped - 1);\n                }\n                if (index > skipped) {\n                    result.push(skipped);\n                }\n                return result;\n            }, []);\n        });\n    }\n    /**\n     * Returns an unique id property for a given `item`.\n     *\n     * The method will generate new id and assign it to the `item` if it doesn't have any.\n     *\n     * @param item Item to be added.\n     */\n    _getItemIdBeforeAdding(item) {\n        const idProperty = this._idProperty;\n        let itemId;\n        if ((idProperty in item)) {\n            itemId = item[idProperty];\n            if (typeof itemId != 'string') {\n                /**\n                 * This item's ID should be a string.\n                 *\n                 * @error collection-add-invalid-id\n                 */\n                throw new CKEditorError('collection-add-invalid-id', this);\n            }\n            if (this.get(itemId)) {\n                /**\n                 * This item already exists in the collection.\n                 *\n                 * @error collection-add-item-already-exists\n                 */\n                throw new CKEditorError('collection-add-item-already-exists', this);\n            }\n        }\n        else {\n            item[idProperty] = itemId = uid();\n        }\n        return itemId;\n    }\n    /**\n     * Core {@link #remove} method implementation shared in other functions.\n     *\n     * In contrast this method **does not** fire the {@link #event:change} event.\n     *\n     * @param subject The item to remove, its id or index in the collection.\n     * @returns Returns an array with the removed item and its index.\n     * @fires remove\n     */\n    _remove(subject) {\n        let index, id, item;\n        let itemDoesNotExist = false;\n        const idProperty = this._idProperty;\n        if (typeof subject == 'string') {\n            id = subject;\n            item = this._itemMap.get(id);\n            itemDoesNotExist = !item;\n            if (item) {\n                index = this._items.indexOf(item);\n            }\n        }\n        else if (typeof subject == 'number') {\n            index = subject;\n            item = this._items[index];\n            itemDoesNotExist = !item;\n            if (item) {\n                id = item[idProperty];\n            }\n        }\n        else {\n            item = subject;\n            id = item[idProperty];\n            index = this._items.indexOf(item);\n            itemDoesNotExist = (index == -1 || !this._itemMap.get(id));\n        }\n        if (itemDoesNotExist) {\n            /**\n             * Item not found.\n             *\n             * @error collection-remove-404\n             */\n            throw new CKEditorError('collection-remove-404', this);\n        }\n        this._items.splice(index, 1);\n        this._itemMap.delete(id);\n        const externalItem = this._bindToInternalToExternalMap.get(item);\n        this._bindToInternalToExternalMap.delete(item);\n        this._bindToExternalToInternalMap.delete(externalItem);\n        this.fire('remove', item, index);\n        return [item, index];\n    }\n    /**\n     * Iterable interface.\n     */\n    [Symbol.iterator]() {\n        return this._items[Symbol.iterator]();\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals navigator:false */\n/**\n * @module utils/env\n */\n/**\n * Safely returns `userAgent` from browser's navigator API in a lower case.\n * If navigator API is not available it will return an empty string.\n */\nexport function getUserAgent() {\n    // In some environments navigator API might not be available.\n    try {\n        return navigator.userAgent.toLowerCase();\n    }\n    catch (e) {\n        return '';\n    }\n}\nconst userAgent = getUserAgent();\n/**\n * A namespace containing environment and browser information.\n */\nconst env = {\n    isMac: isMac(userAgent),\n    isWindows: isWindows(userAgent),\n    isGecko: isGecko(userAgent),\n    isSafari: isSafari(userAgent),\n    isiOS: isiOS(userAgent),\n    isAndroid: isAndroid(userAgent),\n    isBlink: isBlink(userAgent),\n    features: {\n        isRegExpUnicodePropertySupported: isRegExpUnicodePropertySupported()\n    }\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is running on Macintosh or not.\n */\nexport function isMac(userAgent) {\n    return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is running on Windows.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is running on Windows or not.\n */\nexport function isWindows(userAgent) {\n    return userAgent.indexOf('windows') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is Firefox or not.\n */\nexport function isGecko(userAgent) {\n    return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is Safari or not.\n */\nexport function isSafari(userAgent) {\n    return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}\n/**\n * Checks if User Agent represented by the string is running in iOS.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is running in iOS or not.\n */\nexport function isiOS(userAgent) {\n    // \"Request mobile site\" || \"Request desktop site\".\n    return !!userAgent.match(/iphone|ipad/i) || (isMac(userAgent) && navigator.maxTouchPoints > 0);\n}\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is Safari or not.\n */\nexport function isAndroid(userAgent) {\n    return userAgent.indexOf('android') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Blink engine.\n *\n * @param userAgent **Lowercase** `navigator.userAgent` string.\n * @returns Whether User Agent is Blink engine or not.\n */\nexport function isBlink(userAgent) {\n    // The Edge browser before switching to the Blink engine used to report itself as Chrome (and \"Edge/\")\n    // but after switching to the Blink it replaced \"Edge/\" with \"Edg/\".\n    return userAgent.indexOf('chrome/') > -1 && userAgent.indexOf('edge/') < 0;\n}\n/**\n * Checks if the current environment supports ES2018 Unicode properties like `\\p{P}` or `\\p{L}`.\n * More information about unicode properties might be found\n * [in Unicode Standard Annex #44](https://www.unicode.org/reports/tr44/#GC_Values_Table).\n */\nexport function isRegExpUnicodePropertySupported() {\n    let isSupported = false;\n    // Feature detection for Unicode properties. Added in ES2018. Currently Firefox does not support it.\n    // See https://github.com/ckeditor/ckeditor5-mention/issues/44#issuecomment-487002174.\n    try {\n        // Usage of regular expression literal cause error during build (ckeditor/ckeditor5-dev#534).\n        isSupported = 'ć'.search(new RegExp('[\\\\p{L}]', 'u')) === 0;\n    }\n    catch (error) {\n        // Firefox throws a SyntaxError when the group is unsupported.\n    }\n    return isSupported;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/fastdiff\n */\n/**\n * Finds positions of the first and last change in the given string/array and generates a set of changes:\n *\n * ```ts\n * fastDiff( '12a', '12xyza' );\n * // [ { index: 2, type: 'insert', values: [ 'x', 'y', 'z' ] } ]\n *\n * fastDiff( '12a', '12aa' );\n * // [ { index: 3, type: 'insert', values: [ 'a' ] } ]\n *\n * fastDiff( '12xyza', '12a' );\n * // [ { index: 2, type: 'delete', howMany: 3 } ]\n *\n * fastDiff( [ '1', '2', 'a', 'a' ], [ '1', '2', 'a' ] );\n * // [ { index: 3, type: 'delete', howMany: 1 } ]\n *\n * fastDiff( [ '1', '2', 'a', 'b', 'c', '3' ], [ '2', 'a', 'b' ] );\n * // [ { index: 0, type: 'insert', values: [ '2', 'a', 'b' ] }, { index: 3, type: 'delete', howMany: 6 } ]\n * ```\n *\n * Passed arrays can contain any type of data, however to compare them correctly custom comparator function\n * should be passed as a third parameter:\n *\n * ```ts\n * fastDiff( [ { value: 1 }, { value: 2 } ], [ { value: 1 }, { value: 3 } ], ( a, b ) => {\n * \treturn a.value === b.value;\n * } );\n * // [ { index: 1, type: 'insert', values: [ { value: 3 } ] }, { index: 2, type: 'delete', howMany: 1 } ]\n * ```\n *\n * The resulted set of changes can be applied to the input in order to transform it into the output, for example:\n *\n * ```ts\n * let input = '12abc3';\n * const output = '2ab';\n * const changes = fastDiff( input, output );\n *\n * changes.forEach( change => {\n * \tif ( change.type == 'insert' ) {\n * \t\tinput = input.substring( 0, change.index ) + change.values.join( '' ) + input.substring( change.index );\n * \t} else if ( change.type == 'delete' ) {\n * \t\tinput = input.substring( 0, change.index ) + input.substring( change.index + change.howMany );\n * \t}\n * } );\n *\n * // input equals output now\n * ```\n *\n * or in case of arrays:\n *\n * ```ts\n * let input = [ '1', '2', 'a', 'b', 'c', '3' ];\n * const output = [ '2', 'a', 'b' ];\n * const changes = fastDiff( input, output );\n *\n * changes.forEach( change => {\n * \tif ( change.type == 'insert' ) {\n * \t\tinput = input.slice( 0, change.index ).concat( change.values, input.slice( change.index ) );\n * \t} else if ( change.type == 'delete' ) {\n * \t\tinput = input.slice( 0, change.index ).concat( input.slice( change.index + change.howMany ) );\n * \t}\n * } );\n *\n * // input equals output now\n * ```\n *\n * By passing `true` as the fourth parameter (`atomicChanges`) the output of this function will become compatible with\n * the {@link module:utils/diff~diff `diff()`} function:\n *\n * ```ts\n * fastDiff( '12a', '12xyza', undefined, true );\n * // [ 'equal', 'equal', 'insert', 'insert', 'insert', 'equal' ]\n * ```\n *\n * The default output format of this function is compatible with the output format of\n * {@link module:utils/difftochanges~diffToChanges `diffToChanges()`}. The `diffToChanges()` input format is, in turn,\n * compatible with the output of {@link module:utils/diff~diff `diff()`}:\n *\n * ```ts\n * const a = '1234';\n * const b = '12xyz34';\n *\n * // Both calls will return the same results (grouped changes format).\n * fastDiff( a, b );\n * diffToChanges( diff( a, b ) );\n *\n * // Again, both calls will return the same results (atomic changes format).\n * fastDiff( a, b, undefined, true );\n * diff( a, b );\n * ```\n *\n * @typeParam T The type of array elements.\n * @typeParam AtomicChanges The type of `atomicChanges` parameter (selects the result type).\n * @param a Input array or string.\n * @param b Input array or string.\n * @param cmp Optional function used to compare array values, by default `===` (strict equal operator) is used.\n * @param atomicChanges Whether an array of `inset|delete|equal` operations should\n * be returned instead of changes set. This makes this function compatible with {@link module:utils/diff~diff `diff()`}.\n * Defaults to `false`.\n * @returns Array of changes. The elements are either {@link module:utils/diff~DiffResult} or {@link module:utils/difftochanges~Change},\n * depending on `atomicChanges` parameter.\n */\nexport default function fastDiff(a, b, cmp, atomicChanges) {\n    // Set the comparator function.\n    cmp = cmp || function (a, b) {\n        return a === b;\n    };\n    // Convert the string (or any array-like object - eg. NodeList) to an array by using the slice() method because,\n    // unlike Array.from(), it returns array of UTF-16 code units instead of the code points of a string.\n    // One code point might be a surrogate pair of two code units. All text offsets are expected to be in code units.\n    // See ckeditor/ckeditor5#3147.\n    //\n    // We need to make sure here that fastDiff() works identical to diff().\n    const arrayA = Array.isArray(a) ? a : Array.prototype.slice.call(a);\n    const arrayB = Array.isArray(b) ? b : Array.prototype.slice.call(b);\n    // Find first and last change.\n    const changeIndexes = findChangeBoundaryIndexes(arrayA, arrayB, cmp);\n    // Transform into changes array.\n    const result = atomicChanges ?\n        changeIndexesToAtomicChanges(changeIndexes, arrayB.length) :\n        changeIndexesToChanges(arrayB, changeIndexes);\n    return result;\n}\n/**\n * Finds position of the first and last change in the given arrays. For example:\n *\n * ```ts\n * const indexes = findChangeBoundaryIndexes( [ '1', '2', '3', '4' ], [ '1', '3', '4', '2', '4' ] );\n * console.log( indexes ); // { firstIndex: 1, lastIndexOld: 3, lastIndexNew: 4 }\n * ```\n *\n * The above indexes means that in the first array the modified part is `1[23]4` and in the second array it is `1[342]4`.\n * Based on such indexes, array with `insert`/`delete` operations which allows transforming first value into the second one\n * can be generated.\n */\nfunction findChangeBoundaryIndexes(arr1, arr2, cmp) {\n    // Find the first difference between passed values.\n    const firstIndex = findFirstDifferenceIndex(arr1, arr2, cmp);\n    // If arrays are equal return -1 indexes object.\n    if (firstIndex === -1) {\n        return { firstIndex: -1, lastIndexOld: -1, lastIndexNew: -1 };\n    }\n    // Remove the common part of each value and reverse them to make it simpler to find the last difference between them.\n    const oldArrayReversed = cutAndReverse(arr1, firstIndex);\n    const newArrayReversed = cutAndReverse(arr2, firstIndex);\n    // Find the first difference between reversed values.\n    // It should be treated as \"how many elements from the end the last difference occurred\".\n    //\n    // For example:\n    //\n    // \t\t\t\tinitial\t->\tafter cut\t-> reversed:\n    // oldValue:\t'321ba'\t->\t'21ba'\t\t-> 'ab12'\n    // newValue:\t'31xba'\t->\t'1xba'\t\t-> 'abx1'\n    // lastIndex:\t\t\t\t\t\t\t-> 2\n    //\n    // So the last change occurred two characters from the end of the arrays.\n    const lastIndex = findFirstDifferenceIndex(oldArrayReversed, newArrayReversed, cmp);\n    // Use `lastIndex` to calculate proper offset, starting from the beginning (`lastIndex` kind of starts from the end).\n    const lastIndexOld = arr1.length - lastIndex;\n    const lastIndexNew = arr2.length - lastIndex;\n    return { firstIndex, lastIndexOld, lastIndexNew };\n}\n/**\n * Returns a first index on which given arrays differ. If both arrays are the same, -1 is returned.\n */\nfunction findFirstDifferenceIndex(arr1, arr2, cmp) {\n    for (let i = 0; i < Math.max(arr1.length, arr2.length); i++) {\n        if (arr1[i] === undefined || arr2[i] === undefined || !cmp(arr1[i], arr2[i])) {\n            return i;\n        }\n    }\n    return -1; // Return -1 if arrays are equal.\n}\n/**\n * Returns a copy of the given array with `howMany` elements removed starting from the beginning and in reversed order.\n *\n * @param arr Array to be processed.\n * @param howMany How many elements from array beginning to remove.\n * @returns Shortened and reversed array.\n */\nfunction cutAndReverse(arr, howMany) {\n    return arr.slice(howMany).reverse();\n}\n/**\n * Generates changes array based on change indexes from `findChangeBoundaryIndexes` function. This function will\n * generate array with 0 (no changes), 1 (deletion or insertion) or 2 records (insertion and deletion).\n *\n * @param newArray New array for which change indexes were calculated.\n * @param changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n * @returns Array of changes compatible with {@link module:utils/difftochanges~diffToChanges} format.\n */\nfunction changeIndexesToChanges(newArray, changeIndexes) {\n    const result = [];\n    const { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n    // Order operations as 'insert', 'delete' array to keep compatibility with {@link module:utils/difftochanges~diffToChanges}\n    // in most cases. However, 'diffToChanges' does not stick to any order so in some cases\n    // (for example replacing '12345' with 'abcd') it will generate 'delete', 'insert' order.\n    if (lastIndexNew - firstIndex > 0) {\n        result.push({\n            index: firstIndex,\n            type: 'insert',\n            values: newArray.slice(firstIndex, lastIndexNew)\n        });\n    }\n    if (lastIndexOld - firstIndex > 0) {\n        result.push({\n            index: firstIndex + (lastIndexNew - firstIndex),\n            type: 'delete',\n            howMany: lastIndexOld - firstIndex\n        });\n    }\n    return result;\n}\n/**\n * Generates array with set `equal|insert|delete` operations based on change indexes from `findChangeBoundaryIndexes` function.\n *\n * @param changeIndexes Change indexes object from `findChangeBoundaryIndexes` function.\n * @param newLength Length of the new array on which `findChangeBoundaryIndexes` calculated change indexes.\n * @returns Array of changes compatible with {@link module:utils/diff~diff} format.\n */\nfunction changeIndexesToAtomicChanges(changeIndexes, newLength) {\n    const { firstIndex, lastIndexOld, lastIndexNew } = changeIndexes;\n    // No changes.\n    if (firstIndex === -1) {\n        return Array(newLength).fill('equal');\n    }\n    let result = [];\n    if (firstIndex > 0) {\n        result = result.concat(Array(firstIndex).fill('equal'));\n    }\n    if (lastIndexNew - firstIndex > 0) {\n        result = result.concat(Array(lastIndexNew - firstIndex).fill('insert'));\n    }\n    if (lastIndexOld - firstIndex > 0) {\n        result = result.concat(Array(lastIndexOld - firstIndex).fill('delete'));\n    }\n    if (lastIndexNew < newLength) {\n        result = result.concat(Array(newLength - lastIndexNew).fill('equal'));\n    }\n    return result;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/diff\n */\nimport fastDiff from './fastdiff.js';\n// The following code is based on the \"O(NP) Sequence Comparison Algorithm\"\n// by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n/**\n * Calculates the difference between two arrays or strings producing an array containing a list of changes\n * necessary to transform input into output.\n *\n * ```ts\n * diff( 'aba', 'acca' ); // [ 'equal', 'insert', 'insert', 'delete', 'equal' ]\n * ```\n *\n * This function is based on the \"O(NP) Sequence Comparison Algorithm\" by Sun Wu, Udi Manber, Gene Myers, Webb Miller.\n * Unfortunately, while it gives the most precise results, its to complex for longer strings/arrow (above 200 items).\n * Therefore, `diff()` automatically switches to {@link module:utils/fastdiff~fastDiff `fastDiff()`} when detecting\n * such a scenario. The return formats of both functions are identical.\n *\n * @param a Input array or string.\n * @param b Output array or string.\n * @param cmp Optional function used to compare array values, by default === is used.\n * @returns Array of changes.\n */\nexport default function diff(a, b, cmp) {\n    // Set the comparator function.\n    cmp = cmp || function (a, b) {\n        return a === b;\n    };\n    const aLength = a.length;\n    const bLength = b.length;\n    // Perform `fastDiff` for longer strings/arrays (see #269).\n    if (aLength > 200 || bLength > 200 || aLength + bLength > 300) {\n        return diff.fastDiff(a, b, cmp, true);\n    }\n    // Temporary action type statics.\n    let _insert, _delete;\n    // Swapped the arrays to use the shorter one as the first one.\n    if (bLength < aLength) {\n        const tmp = a;\n        a = b;\n        b = tmp;\n        // We swap the action types as well.\n        _insert = 'delete';\n        _delete = 'insert';\n    }\n    else {\n        _insert = 'insert';\n        _delete = 'delete';\n    }\n    const m = a.length;\n    const n = b.length;\n    const delta = n - m;\n    // Edit scripts, for each diagonal.\n    const es = {};\n    // Furthest points, the furthest y we can get on each diagonal.\n    const fp = {};\n    function snake(k) {\n        // We use -1 as an alternative below to handle initial values ( instead of filling the fp with -1 first ).\n        // Furthest points (y) on the diagonal below k.\n        const y1 = (fp[k - 1] !== undefined ? fp[k - 1] : -1) + 1;\n        // Furthest points (y) on the diagonal above k.\n        const y2 = fp[k + 1] !== undefined ? fp[k + 1] : -1;\n        // The way we should go to get further.\n        const dir = y1 > y2 ? -1 : 1;\n        // Clone previous changes array (if any).\n        if (es[k + dir]) {\n            es[k] = es[k + dir].slice(0);\n        }\n        // Create changes array.\n        if (!es[k]) {\n            es[k] = [];\n        }\n        // Push the action.\n        es[k].push(y1 > y2 ? _insert : _delete);\n        // Set the beginning coordinates.\n        let y = Math.max(y1, y2);\n        let x = y - k;\n        // Traverse the diagonal as long as the values match.\n        while (x < m && y < n && cmp(a[x], b[y])) {\n            x++;\n            y++;\n            // Push no change action.\n            es[k].push('equal');\n        }\n        return y;\n    }\n    let p = 0;\n    let k;\n    // Traverse the graph until we reach the end of the longer string.\n    do {\n        // Updates furthest points and edit scripts for diagonals below delta.\n        for (k = -p; k < delta; k++) {\n            fp[k] = snake(k);\n        }\n        // Updates furthest points and edit scripts for diagonals above delta.\n        for (k = delta + p; k > delta; k--) {\n            fp[k] = snake(k);\n        }\n        // Updates furthest point and edit script for the delta diagonal.\n        // note that the delta diagonal is the one which goes through the sink (m, n).\n        fp[delta] = snake(delta);\n        p++;\n    } while (fp[delta] !== n);\n    // Return the final list of edit changes.\n    // We remove the first item that represents the action for the injected nulls.\n    return es[delta].slice(1);\n}\n// Store the API in static property to easily overwrite it in tests.\n// Too bad dependency injection does not work in Webpack + ES 6 (const) + Babel.\ndiff.fastDiff = fastDiff;\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* eslint-disable @typescript-eslint/unified-signatures */\n/**\n * @module utils/observablemixin\n */\nimport EmitterMixin from './emittermixin.js';\nimport CKEditorError from './ckeditorerror.js';\nimport { isObject } from 'lodash-es';\nconst observablePropertiesSymbol = Symbol('observableProperties');\nconst boundObservablesSymbol = Symbol('boundObservables');\nconst boundPropertiesSymbol = Symbol('boundProperties');\nconst decoratedMethods = Symbol('decoratedMethods');\nconst decoratedOriginal = Symbol('decoratedOriginal');\nconst defaultObservableClass = ObservableMixin(EmitterMixin());\nexport default function ObservableMixin(base) {\n    if (!base) {\n        return defaultObservableClass;\n    }\n    class Mixin extends base {\n        set(name, value) {\n            // If the first parameter is an Object, iterate over its properties.\n            if (isObject(name)) {\n                Object.keys(name).forEach(property => {\n                    this.set(property, name[property]);\n                }, this);\n                return;\n            }\n            initObservable(this);\n            const properties = this[observablePropertiesSymbol];\n            if ((name in this) && !properties.has(name)) {\n                /**\n                 * Cannot override an existing property.\n                 *\n                 * This error is thrown when trying to {@link module:utils/observablemixin~Observable#set set} a property with\n                 * a name of an already existing property. For example:\n                 *\n                 * ```ts\n                 * let observable = new Model();\n                 * observable.property = 1;\n                 * observable.set( 'property', 2 );\t\t\t// throws\n                 *\n                 * observable.set( 'property', 1 );\n                 * observable.set( 'property', 2 );\t\t\t// ok, because this is an existing property.\n                 * ```\n                 *\n                 * @error observable-set-cannot-override\n                 */\n                throw new CKEditorError('observable-set-cannot-override', this);\n            }\n            Object.defineProperty(this, name, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return properties.get(name);\n                },\n                set(value) {\n                    const oldValue = properties.get(name);\n                    // Fire `set` event before the new value will be set to make it possible\n                    // to override observable property without affecting `change` event.\n                    // See https://github.com/ckeditor/ckeditor5-utils/issues/171.\n                    let newValue = this.fire(`set:${name}`, name, value, oldValue);\n                    if (newValue === undefined) {\n                        newValue = value;\n                    }\n                    // Allow undefined as an initial value like A.define( 'x', undefined ) (#132).\n                    // Note: When properties map has no such own property, then its value is undefined.\n                    if (oldValue !== newValue || !properties.has(name)) {\n                        properties.set(name, newValue);\n                        this.fire(`change:${name}`, name, newValue, oldValue);\n                    }\n                }\n            });\n            this[name] = value;\n        }\n        bind(...bindProperties) {\n            if (!bindProperties.length || !isStringArray(bindProperties)) {\n                /**\n                 * All properties must be strings.\n                 *\n                 * @error observable-bind-wrong-properties\n                 */\n                throw new CKEditorError('observable-bind-wrong-properties', this);\n            }\n            if ((new Set(bindProperties)).size !== bindProperties.length) {\n                /**\n                 * Properties must be unique.\n                 *\n                 * @error observable-bind-duplicate-properties\n                 */\n                throw new CKEditorError('observable-bind-duplicate-properties', this);\n            }\n            initObservable(this);\n            const boundProperties = this[boundPropertiesSymbol];\n            bindProperties.forEach(propertyName => {\n                if (boundProperties.has(propertyName)) {\n                    /**\n                     * Cannot bind the same property more than once.\n                     *\n                     * @error observable-bind-rebind\n                     */\n                    throw new CKEditorError('observable-bind-rebind', this);\n                }\n            });\n            const bindings = new Map();\n            bindProperties.forEach(a => {\n                const binding = { property: a, to: [] };\n                boundProperties.set(a, binding);\n                bindings.set(a, binding);\n            });\n            return {\n                to: bindTo,\n                toMany: bindToMany,\n                _observable: this,\n                _bindProperties: bindProperties,\n                _to: [],\n                _bindings: bindings\n            };\n        }\n        unbind(...unbindProperties) {\n            // Nothing to do here if not inited yet.\n            if (!(this[observablePropertiesSymbol])) {\n                return;\n            }\n            const boundProperties = this[boundPropertiesSymbol];\n            const boundObservables = this[boundObservablesSymbol];\n            if (unbindProperties.length) {\n                if (!isStringArray(unbindProperties)) {\n                    /**\n                     * Properties must be strings.\n                     *\n                     * @error observable-unbind-wrong-properties\n                     */\n                    throw new CKEditorError('observable-unbind-wrong-properties', this);\n                }\n                unbindProperties.forEach(propertyName => {\n                    const binding = boundProperties.get(propertyName);\n                    // Nothing to do if the binding is not defined\n                    if (!binding) {\n                        return;\n                    }\n                    binding.to.forEach(([toObservable, toProperty]) => {\n                        const toProperties = boundObservables.get(toObservable);\n                        const toPropertyBindings = toProperties[toProperty];\n                        toPropertyBindings.delete(binding);\n                        if (!toPropertyBindings.size) {\n                            delete toProperties[toProperty];\n                        }\n                        if (!Object.keys(toProperties).length) {\n                            boundObservables.delete(toObservable);\n                            this.stopListening(toObservable, 'change');\n                        }\n                    });\n                    boundProperties.delete(propertyName);\n                });\n            }\n            else {\n                boundObservables.forEach((bindings, boundObservable) => {\n                    this.stopListening(boundObservable, 'change');\n                });\n                boundObservables.clear();\n                boundProperties.clear();\n            }\n        }\n        decorate(methodName) {\n            initObservable(this);\n            const originalMethod = this[methodName];\n            if (!originalMethod) {\n                /**\n                 * Cannot decorate an undefined method.\n                 *\n                 * @error observablemixin-cannot-decorate-undefined\n                 * @param {Object} object The object which method should be decorated.\n                 * @param {String} methodName Name of the method which does not exist.\n                 */\n                throw new CKEditorError('observablemixin-cannot-decorate-undefined', this, { object: this, methodName });\n            }\n            this.on(methodName, (evt, args) => {\n                evt.return = originalMethod.apply(this, args);\n            });\n            this[methodName] = function (...args) {\n                return this.fire(methodName, args);\n            };\n            this[methodName][decoratedOriginal] = originalMethod;\n            if (!this[decoratedMethods]) {\n                this[decoratedMethods] = [];\n            }\n            this[decoratedMethods].push(methodName);\n        }\n        // Override the EmitterMixin stopListening method to be able to clean (and restore) decorated methods.\n        // This is needed in case of:\n        //  1. Have x.foo() decorated.\n        //  2. Call x.stopListening()\n        //  3. Call x.foo(). Problem: nothing happens (the original foo() method is not executed)\n        stopListening(emitter, event, callback) {\n            // Removing all listeners so let's clean the decorated methods to the original state.\n            if (!emitter && this[decoratedMethods]) {\n                for (const methodName of this[decoratedMethods]) {\n                    this[methodName] = this[methodName][decoratedOriginal];\n                }\n                delete this[decoratedMethods];\n            }\n            super.stopListening(emitter, event, callback);\n        }\n    }\n    return Mixin;\n}\n// Backward compatibility with `mix`\n([\n    'set', 'bind', 'unbind', 'decorate',\n    'on', 'once', 'off', 'listenTo',\n    'stopListening', 'fire', 'delegate', 'stopDelegating',\n    '_addEventListener', '_removeEventListener'\n]).forEach(key => {\n    ObservableMixin[key] = defaultObservableClass.prototype[key];\n});\n// Init symbol properties needed for the observable mechanism to work.\nfunction initObservable(observable) {\n    // Do nothing if already inited.\n    if (observable[observablePropertiesSymbol]) {\n        return;\n    }\n    // The internal hash containing the observable's state.\n    Object.defineProperty(observable, observablePropertiesSymbol, {\n        value: new Map()\n    });\n    // Map containing bindings to external observables. It shares the binding objects\n    // (`{ observable: A, property: 'a', to: ... }`) with {@link module:utils/observablemixin~Observable#_boundProperties} and\n    // it is used to observe external observables to update own properties accordingly.\n    // See {@link module:utils/observablemixin~Observable#bind}.\n    //\n    //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n    //\t\tconsole.log( A._boundObservables );\n    //\n    //\t\t\tMap( {\n    //\t\t\t\tB: {\n    //\t\t\t\t\tx: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n    //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n    //\t\t\t\t\t] ),\n    //\t\t\t\t\ty: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n    //\t\t\t\t\t] )\n    //\t\t\t\t}\n    //\t\t\t} )\n    //\n    //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n    //\t\tconsole.log( A._boundObservables );\n    //\n    //\t\t\tMap( {\n    //\t\t\t\tB: {\n    //\t\t\t\t\tx: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n    //\t\t\t\t\t\t{ observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n    //\t\t\t\t\t] ),\n    //\t\t\t\t\ty: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n    //\t\t\t\t\t] ),\n    //\t\t\t\t\tz: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n    //\t\t\t\t\t] )\n    //\t\t\t\t},\n    //\t\t\t\tC: {\n    //\t\t\t\t\tw: Set( [\n    //\t\t\t\t\t\t{ observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n    //\t\t\t\t\t] )\n    //\t\t\t\t}\n    //\t\t\t} )\n    //\n    Object.defineProperty(observable, boundObservablesSymbol, {\n        value: new Map()\n    });\n    // Object that stores which properties of this observable are bound and how. It shares\n    // the binding objects (`{ observable: A, property: 'a', to: ... }`) with\n    // {@link module:utils/observablemixin~Observable#_boundObservables}. This data structure is\n    // a reverse of {@link module:utils/observablemixin~Observable#_boundObservables} and it is helpful for\n    // {@link module:utils/observablemixin~Observable#unbind}.\n    //\n    // See {@link module:utils/observablemixin~Observable#bind}.\n    //\n    //\t\tA.bind( 'a', 'b', 'c' ).to( B, 'x', 'y', 'x' );\n    //\t\tconsole.log( A._boundProperties );\n    //\n    //\t\t\tMap( {\n    //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n    //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n    //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] }\n    //\t\t\t} )\n    //\n    //\t\tA.bind( 'd' ).to( B, 'z' ).to( C, 'w' ).as( callback );\n    //\t\tconsole.log( A._boundProperties );\n    //\n    //\t\t\tMap( {\n    //\t\t\t\ta: { observable: A, property: 'a', to: [ [ B, 'x' ] ] },\n    //\t\t\t\tb: { observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n    //\t\t\t\tc: { observable: A, property: 'c', to: [ [ B, 'x' ] ] },\n    //\t\t\t\td: { observable: A, property: 'd', to: [ [ B, 'z' ], [ C, 'w' ] ], callback: callback }\n    //\t\t\t} )\n    Object.defineProperty(observable, boundPropertiesSymbol, {\n        value: new Map()\n    });\n}\n/**\n * A chaining for {@link module:utils/observablemixin~Observable#bind} providing `.to()` interface.\n *\n * @param args Arguments of the `.to( args )` binding.\n */\nfunction bindTo(...args) {\n    const parsedArgs = parseBindToArgs(...args);\n    const bindingsKeys = Array.from(this._bindings.keys());\n    const numberOfBindings = bindingsKeys.length;\n    // Eliminate A.bind( 'x' ).to( B, C )\n    if (!parsedArgs.callback && parsedArgs.to.length > 1) {\n        /**\n         * Binding multiple observables only possible with callback.\n         *\n         * @error observable-bind-to-no-callback\n         */\n        throw new CKEditorError('observable-bind-to-no-callback', this);\n    }\n    // Eliminate A.bind( 'x', 'y' ).to( B, callback )\n    if (numberOfBindings > 1 && parsedArgs.callback) {\n        /**\n         * Cannot bind multiple properties and use a callback in one binding.\n         *\n         * @error observable-bind-to-extra-callback\n         */\n        throw new CKEditorError('observable-bind-to-extra-callback', this);\n    }\n    parsedArgs.to.forEach(to => {\n        // Eliminate A.bind( 'x', 'y' ).to( B, 'a' )\n        if (to.properties.length && to.properties.length !== numberOfBindings) {\n            /**\n             * The number of properties must match.\n             *\n             * @error observable-bind-to-properties-length\n             */\n            throw new CKEditorError('observable-bind-to-properties-length', this);\n        }\n        // When no to.properties specified, observing source properties instead i.e.\n        // A.bind( 'x', 'y' ).to( B ) -> Observe B.x and B.y\n        if (!to.properties.length) {\n            to.properties = this._bindProperties;\n        }\n    });\n    this._to = parsedArgs.to;\n    // Fill {@link BindChain#_bindings} with callback. When the callback is set there's only one binding.\n    if (parsedArgs.callback) {\n        this._bindings.get(bindingsKeys[0]).callback = parsedArgs.callback;\n    }\n    attachBindToListeners(this._observable, this._to);\n    // Update observable._boundProperties and observable._boundObservables.\n    updateBindToBound(this);\n    // Set initial values of bound properties.\n    this._bindProperties.forEach(propertyName => {\n        updateBoundObservableProperty(this._observable, propertyName);\n    });\n}\n/**\n * Binds to an attribute in a set of iterable observables.\n */\nfunction bindToMany(observables, attribute, callback) {\n    if (this._bindings.size > 1) {\n        /**\n         * Binding one attribute to many observables only possible with one attribute.\n         *\n         * @error observable-bind-to-many-not-one-binding\n         */\n        throw new CKEditorError('observable-bind-to-many-not-one-binding', this);\n    }\n    this.to(\n    // Bind to #attribute of each observable...\n    ...getBindingTargets(observables, attribute), \n    // ...using given callback to parse attribute values.\n    callback);\n}\n/**\n * Returns an array of binding components for\n * {@link Observable#bind} from a set of iterable observables.\n */\nfunction getBindingTargets(observables, attribute) {\n    const observableAndAttributePairs = observables.map(observable => [observable, attribute]);\n    // Merge pairs to one-dimension array of observables and attributes.\n    return Array.prototype.concat.apply([], observableAndAttributePairs);\n}\n/**\n * Check if all entries of the array are of `String` type.\n */\nfunction isStringArray(arr) {\n    return arr.every(a => typeof a == 'string');\n}\n/**\n * Parses and validates {@link Observable#bind}`.to( args )` arguments and returns\n * an object with a parsed structure. For example\n *\n * ```ts\n * A.bind( 'x' ).to( B, 'a', C, 'b', call );\n * ```\n *\n * becomes\n *\n * ```ts\n * {\n * \tto: [\n * \t\t{ observable: B, properties: [ 'a' ] },\n * \t\t{ observable: C, properties: [ 'b' ] },\n * \t],\n * \tcallback: call\n * }\n *\n * @param args Arguments of {@link Observable#bind}`.to( args )`.\n */\nfunction parseBindToArgs(...args) {\n    // Eliminate A.bind( 'x' ).to()\n    if (!args.length) {\n        /**\n         * Invalid argument syntax in `to()`.\n         *\n         * @error observable-bind-to-parse-error\n         */\n        throw new CKEditorError('observable-bind-to-parse-error', null);\n    }\n    const parsed = { to: [] };\n    let lastObservable;\n    if (typeof args[args.length - 1] == 'function') {\n        parsed.callback = args.pop();\n    }\n    args.forEach(a => {\n        if (typeof a == 'string') {\n            lastObservable.properties.push(a);\n        }\n        else if (typeof a == 'object') {\n            lastObservable = { observable: a, properties: [] };\n            parsed.to.push(lastObservable);\n        }\n        else {\n            throw new CKEditorError('observable-bind-to-parse-error', null);\n        }\n    });\n    return parsed;\n}\n/**\n * Synchronizes {@link module:utils/observable#_boundObservables} with {@link Binding}.\n *\n * @param binding A binding to store in {@link Observable#_boundObservables}.\n * @param toObservable A observable, which is a new component of `binding`.\n * @param toPropertyName A name of `toObservable`'s property, a new component of the `binding`.\n */\nfunction updateBoundObservables(observable, binding, toObservable, toPropertyName) {\n    const boundObservables = observable[boundObservablesSymbol];\n    const bindingsToObservable = boundObservables.get(toObservable);\n    const bindings = bindingsToObservable || {};\n    if (!bindings[toPropertyName]) {\n        bindings[toPropertyName] = new Set();\n    }\n    // Pass the binding to a corresponding Set in `observable._boundObservables`.\n    bindings[toPropertyName].add(binding);\n    if (!bindingsToObservable) {\n        boundObservables.set(toObservable, bindings);\n    }\n}\n/**\n * Synchronizes {@link Observable#_boundProperties} and {@link Observable#_boundObservables}\n * with {@link BindChain}.\n *\n * Assuming the following binding being created\n *\n * ```ts\n * A.bind( 'a', 'b' ).to( B, 'x', 'y' );\n * ```\n *\n * the following bindings were initialized by {@link Observable#bind} in {@link BindChain#_bindings}:\n *\n * ```ts\n * {\n * \ta: { observable: A, property: 'a', to: [] },\n * \tb: { observable: A, property: 'b', to: [] },\n * }\n * ```\n *\n * Iterate over all bindings in this chain and fill their `to` properties with\n * corresponding to( ... ) arguments (components of the binding), so\n *\n * ```ts\n * {\n * \ta: { observable: A, property: 'a', to: [ B, 'x' ] },\n * \tb: { observable: A, property: 'b', to: [ B, 'y' ] },\n * }\n * ```\n *\n * Then update the structure of {@link Observable#_boundObservables} with updated\n * binding, so it becomes:\n *\n * ```ts\n * Map( {\n * \tB: {\n * \t\tx: Set( [\n * \t\t\t{ observable: A, property: 'a', to: [ [ B, 'x' ] ] }\n * \t\t] ),\n * \t\ty: Set( [\n * \t\t\t{ observable: A, property: 'b', to: [ [ B, 'y' ] ] },\n * \t\t] )\n * \t}\n * } )\n * ```\n *\n * @param chain The binding initialized by {@link Observable#bind}.\n */\nfunction updateBindToBound(chain) {\n    let toProperty;\n    chain._bindings.forEach((binding, propertyName) => {\n        // Note: For a binding without a callback, this will run only once\n        // like in A.bind( 'x', 'y' ).to( B, 'a', 'b' )\n        // TODO: ES6 destructuring.\n        chain._to.forEach(to => {\n            toProperty = to.properties[binding.callback ? 0 : chain._bindProperties.indexOf(propertyName)];\n            binding.to.push([to.observable, toProperty]);\n            updateBoundObservables(chain._observable, binding, to.observable, toProperty);\n        });\n    });\n}\n/**\n * Updates an property of a {@link Observable} with a value\n * determined by an entry in {@link Observable#_boundProperties}.\n *\n * @param observable A observable which property is to be updated.\n * @param propertyName An property to be updated.\n */\nfunction updateBoundObservableProperty(observable, propertyName) {\n    const boundProperties = observable[boundPropertiesSymbol];\n    const binding = boundProperties.get(propertyName);\n    let propertyValue;\n    // When a binding with callback is created like\n    //\n    // \t\tA.bind( 'a' ).to( B, 'b', C, 'c', callback );\n    //\n    // collect B.b and C.c, then pass them to callback to set A.a.\n    if (binding.callback) {\n        propertyValue = binding.callback.apply(observable, binding.to.map(to => to[0][to[1]]));\n    }\n    else {\n        propertyValue = binding.to[0];\n        propertyValue = propertyValue[0][propertyValue[1]];\n    }\n    if (Object.prototype.hasOwnProperty.call(observable, propertyName)) {\n        observable[propertyName] = propertyValue;\n    }\n    else {\n        observable.set(propertyName, propertyValue);\n    }\n}\n/**\n * Starts listening to changes in {@link BindChain._to} observables to update\n * {@link BindChain._observable} {@link BindChain._bindProperties}. Also sets the\n * initial state of {@link BindChain._observable}.\n *\n * @param chain The chain initialized by {@link Observable#bind}.\n */\nfunction attachBindToListeners(observable, toBindings) {\n    toBindings.forEach(to => {\n        const boundObservables = observable[boundObservablesSymbol];\n        let bindings;\n        // If there's already a chain between the observables (`observable` listens to\n        // `to.observable`), there's no need to create another `change` event listener.\n        if (!boundObservables.get(to.observable)) {\n            observable.listenTo(to.observable, 'change', (evt, propertyName) => {\n                bindings = boundObservables.get(to.observable)[propertyName];\n                // Note: to.observable will fire for any property change, react\n                // to changes of properties which are bound only.\n                if (bindings) {\n                    bindings.forEach(binding => {\n                        updateBoundObservableProperty(observable, binding.property);\n                    });\n                }\n            });\n        }\n    });\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/count\n */\n/**\n * Returns the number of items return by the iterator.\n *\n * ```ts\n * count( [ 1, 2, 3, 4, 5 ] ); // 5;\n * ```\n *\n * @param iterable Any iterable.\n * @returns Number of items returned by that iterable.\n */\nexport default function count(iterable) {\n    let count = 0;\n    for (const _ of iterable) { // eslint-disable-line no-unused-vars\n        count++;\n    }\n    return count;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/comparearrays\n */\n/**\n * Compares how given arrays relate to each other. One array can be: same as another array, prefix of another array\n * or completely different. If arrays are different, first index at which they differ is returned. Otherwise,\n * a flag specifying the relation is returned. Flags are negative numbers, so whenever a number >= 0 is returned\n * it means that arrays differ.\n *\n * ```ts\n * compareArrays( [ 0, 2 ], [ 0, 2 ] );\t\t// 'same'\n * compareArrays( [ 0, 2 ], [ 0, 2, 1 ] );\t\t// 'prefix'\n * compareArrays( [ 0, 2 ], [ 0 ] );\t\t\t// 'extension'\n * compareArrays( [ 0, 2 ], [ 1, 2 ] );\t\t// 0\n * compareArrays( [ 0, 2 ], [ 0, 1 ] );\t\t// 1\n * ```\n *\n * @param a Array that is compared.\n * @param b Array to compare with.\n * @returns How array `a` is related to `b`.\n */\nexport default function compareArrays(a, b) {\n    const minLen = Math.min(a.length, b.length);\n    for (let i = 0; i < minLen; i++) {\n        if (a[i] != b[i]) {\n            // The arrays are different.\n            return i;\n        }\n    }\n    // Both arrays were same at all points.\n    if (a.length == b.length) {\n        // If their length is also same, they are the same.\n        return 'same';\n    }\n    else if (a.length < b.length) {\n        // Compared array is shorter so it is a prefix of the other array.\n        return 'prefix';\n    }\n    else {\n        // Compared array is longer so it is an extension of the other array.\n        return 'extension';\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/isnode\n */\n/**\n * Checks if the object is a native DOM Node.\n */\nexport default function isNode(obj) {\n    if (obj) {\n        if (obj.defaultView) {\n            return obj instanceof obj.defaultView.Document;\n        }\n        else if (obj.ownerDocument && obj.ownerDocument.defaultView) {\n            return obj instanceof obj.ownerDocument.defaultView.Node;\n        }\n    }\n    return false;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/iswindow\n */\n/**\n * Checks if the object is a native DOM Window.\n */\nexport default function isWindow(obj) {\n    const stringifiedObject = Object.prototype.toString.apply(obj);\n    // Returns `true` for the `window` object in browser environments.\n    if (stringifiedObject == '[object Window]') {\n        return true;\n    }\n    // Returns `true` for the `window` object in the Electron environment.\n    if (stringifiedObject == '[object global]') {\n        return true;\n    }\n    return false;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/emittermixin\n */\nimport EmitterMixin, { _getEmitterListenedTo, _setEmitterId } from '../emittermixin.js';\nimport uid from '../uid.js';\nimport isNode from './isnode.js';\nimport isWindow from './iswindow.js';\nconst defaultEmitterClass = DomEmitterMixin(EmitterMixin());\nexport default function DomEmitterMixin(base) {\n    if (!base) {\n        return defaultEmitterClass;\n    }\n    class Mixin extends base {\n        listenTo(emitter, event, callback, options = {}) {\n            // Check if emitter is an instance of DOM Node. If so, use corresponding ProxyEmitter (or create one if not existing).\n            if (isNode(emitter) || isWindow(emitter)) {\n                const proxyOptions = {\n                    capture: !!options.useCapture,\n                    passive: !!options.usePassive\n                };\n                const proxyEmitter = this._getProxyEmitter(emitter, proxyOptions) || new ProxyEmitter(emitter, proxyOptions);\n                this.listenTo(proxyEmitter, event, callback, options);\n            }\n            else {\n                // Execute parent class method with Emitter (or ProxyEmitter) instance.\n                super.listenTo(emitter, event, callback, options);\n            }\n        }\n        stopListening(emitter, event, callback) {\n            // Check if the emitter is an instance of DOM Node. If so, forward the call to the corresponding ProxyEmitters.\n            if (isNode(emitter) || isWindow(emitter)) {\n                const proxyEmitters = this._getAllProxyEmitters(emitter);\n                for (const proxy of proxyEmitters) {\n                    this.stopListening(proxy, event, callback);\n                }\n            }\n            else {\n                // Execute parent class method with Emitter (or ProxyEmitter) instance.\n                super.stopListening(emitter, event, callback);\n            }\n        }\n        /**\n         * Retrieves ProxyEmitter instance for given DOM Node residing in this Host and given options.\n         *\n         * @param node DOM Node of the ProxyEmitter.\n         * @param options Additional options.\n         * @param options.useCapture Indicates that events of this type will be dispatched to the registered\n         * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n         * @param options.usePassive Indicates that the function specified by listener will never call preventDefault()\n         * and prevents blocking browser's main thread by this event handler.\n         * @returns ProxyEmitter instance bound to the DOM Node.\n         */\n        _getProxyEmitter(node, options) {\n            return _getEmitterListenedTo(this, getProxyEmitterId(node, options));\n        }\n        /**\n         * Retrieves all the ProxyEmitter instances for given DOM Node residing in this Host.\n         *\n         * @param node DOM Node of the ProxyEmitter.\n         */\n        _getAllProxyEmitters(node) {\n            return [\n                { capture: false, passive: false },\n                { capture: false, passive: true },\n                { capture: true, passive: false },\n                { capture: true, passive: true }\n            ].map(options => this._getProxyEmitter(node, options)).filter(proxy => !!proxy);\n        }\n    }\n    return Mixin;\n}\n// Backward compatibility with `mix`\n([\n    '_getProxyEmitter', '_getAllProxyEmitters',\n    'on', 'once', 'off', 'listenTo',\n    'stopListening', 'fire', 'delegate', 'stopDelegating',\n    '_addEventListener', '_removeEventListener'\n]).forEach(key => {\n    DomEmitterMixin[key] = defaultEmitterClass.prototype[key];\n});\n/**\n * Creates a ProxyEmitter instance. Such an instance is a bridge between a DOM Node firing events\n * and any Host listening to them. It is backwards compatible with {@link module:utils/emittermixin~Emitter#on}.\n * There is a separate instance for each combination of modes (useCapture & usePassive). The mode is concatenated with\n * UID stored in HTMLElement to give each instance unique identifier.\n *\n *                                  listenTo( click, ... )\n *                    +-----------------------------------------+\n *                    |              stopListening( ... )       |\n *     +----------------------------+                           |             addEventListener( click, ... )\n *     | Host                       |                           |   +---------------------------------------------+\n *     +----------------------------+                           |   |       removeEventListener( click, ... )     |\n *     | _listeningTo: {            |                +----------v-------------+                                   |\n *     |   UID+mode: {              |                | ProxyEmitter           |                                   |\n *     |     emitter: ProxyEmitter, |                +------------------------+                      +------------v----------+\n *     |     callbacks: {           |                | events: {              |                      | Node (HTMLElement)    |\n *     |       click: [ callbacks ] |                |   click: [ callbacks ] |                      +-----------------------+\n *     |     }                      |                | },                     |                      | data-ck-expando: UID  |\n *     |   }                        |                | _domNode: Node,        |                      +-----------------------+\n *     | }                          |                | _domListeners: {},     |                                   |\n *     | +------------------------+ |                | _emitterId: UID+mode   |                                   |\n *     | | DomEmitterMixin        | |                +--------------^---------+                                   |\n *     | +------------------------+ |                           |   |                                             |\n *     +--------------^-------------+                           |   +---------------------------------------------+\n *                    |                                         |                  click (DOM Event)\n *                    +-----------------------------------------+\n *                                fire( click, DOM Event )\n */\nclass ProxyEmitter extends EmitterMixin() {\n    /**\n     * @param node DOM Node that fires events.\n     * @param options Additional options.\n     * @param options.useCapture Indicates that events of this type will be dispatched to the registered\n     * listener before being dispatched to any EventTarget beneath it in the DOM tree.\n     * @param options.usePassive Indicates that the function specified by listener will never call preventDefault()\n     * and prevents blocking browser's main thread by this event handler.\n     */\n    constructor(node, options) {\n        super();\n        // Set emitter ID to match DOM Node \"expando\" property.\n        _setEmitterId(this, getProxyEmitterId(node, options));\n        // Remember the DOM Node this ProxyEmitter is bound to.\n        this._domNode = node;\n        // And given options.\n        this._options = options;\n    }\n    /**\n     * Registers a callback function to be executed when an event is fired.\n     *\n     * It attaches a native DOM listener to the DOM Node. When fired,\n     * a corresponding Emitter event will also fire with DOM Event object as an argument.\n     *\n     * **Note**: This is automatically called by the\n     * {@link module:utils/emittermixin~Emitter#listenTo `Emitter#listenTo()`}.\n     *\n     * @param event The name of the event.\n     */\n    attach(event) {\n        // If the DOM Listener for given event already exist it is pointless\n        // to attach another one.\n        if (this._domListeners && this._domListeners[event]) {\n            return;\n        }\n        const domListener = this._createDomListener(event);\n        // Attach the native DOM listener to DOM Node.\n        this._domNode.addEventListener(event, domListener, this._options);\n        if (!this._domListeners) {\n            this._domListeners = {};\n        }\n        // Store the native DOM listener in this ProxyEmitter. It will be helpful\n        // when stopping listening to the event.\n        this._domListeners[event] = domListener;\n    }\n    /**\n     * Stops executing the callback on the given event.\n     *\n     * **Note**: This is automatically called by the\n     * {@link module:utils/emittermixin~Emitter#stopListening `Emitter#stopListening()`}.\n     *\n     * @param event The name of the event.\n     */\n    detach(event) {\n        let events;\n        // Remove native DOM listeners which are orphans. If no callbacks\n        // are awaiting given event, detach native DOM listener from DOM Node.\n        // See: {@link attach}.\n        if (this._domListeners[event] && (!(events = this._events[event]) || !events.callbacks.length)) {\n            this._domListeners[event].removeListener();\n        }\n    }\n    /**\n     * Adds callback to emitter for given event.\n     *\n     * @internal\n     * @param event The name of the event.\n     * @param callback The function to be called on event.\n     * @param options Additional options.\n     */\n    _addEventListener(event, callback, options) {\n        this.attach(event);\n        EmitterMixin().prototype._addEventListener.call(this, event, callback, options);\n    }\n    /**\n     * Removes callback from emitter for given event.\n     *\n     * @internal\n     * @param event The name of the event.\n     * @param callback The function to stop being called.\n     */\n    _removeEventListener(event, callback) {\n        EmitterMixin().prototype._removeEventListener.call(this, event, callback);\n        this.detach(event);\n    }\n    /**\n     * Creates a native DOM listener callback. When the native DOM event\n     * is fired it will fire corresponding event on this ProxyEmitter.\n     * Note: A native DOM Event is passed as an argument.\n     *\n     * @param event The name of the event.\n     * @returns The DOM listener callback.\n     */\n    _createDomListener(event) {\n        const domListener = (domEvt) => {\n            this.fire(event, domEvt);\n        };\n        // Supply the DOM listener callback with a function that will help\n        // detach it from the DOM Node, when it is no longer necessary.\n        // See: {@link detach}.\n        domListener.removeListener = () => {\n            this._domNode.removeEventListener(event, domListener, this._options);\n            delete this._domListeners[event];\n        };\n        return domListener;\n    }\n}\n/**\n * Gets an unique DOM Node identifier. The identifier will be set if not defined.\n *\n * @returns UID for given DOM Node.\n */\nfunction getNodeUID(node) {\n    return node['data-ck-expando'] || (node['data-ck-expando'] = uid());\n}\n/**\n * Gets id of the ProxyEmitter for the given node.\n */\nfunction getProxyEmitterId(node, options) {\n    let id = getNodeUID(node);\n    for (const option of Object.keys(options).sort()) {\n        if (options[option]) {\n            id += '-' + option;\n        }\n    }\n    return id;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals Node */\n/**\n * @module utils/dom/getancestors\n */\n/**\n * Returns all ancestors of given DOM node, starting from the top-most (root). Includes the given node itself. If the\n * node is a part of `DocumentFragment` that `DocumentFragment` will be returned. In contrary, if the node is\n * appended to a `Document`, that `Document` will not be returned (algorithms operating on DOM tree care for `Document#documentElement`\n * at most, which will be returned).\n *\n * @param node DOM node.\n * @returns Array of given `node` parents.\n */\nexport default function getAncestors(node) {\n    const nodes = [];\n    let currentNode = node;\n    // We are interested in `Node`s `DocumentFragment`s only.\n    while (currentNode && currentNode.nodeType != Node.DOCUMENT_NODE) {\n        nodes.unshift(currentNode);\n        currentNode = currentNode.parentNode;\n    }\n    return nodes;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/getborderwidths\n */\n/**\n * Returns an object containing CSS border widths of a specified HTML element.\n *\n * @param element An element which has CSS borders.\n * @returns An object containing `top`, `left`, `right` and `bottom` properties\n * with numerical values of the `border-[top,left,right,bottom]-width` CSS styles.\n */\nexport default function getBorderWidths(element) {\n    // Call getComputedStyle on the window the element document belongs to.\n    const style = element.ownerDocument.defaultView.getComputedStyle(element);\n    return {\n        top: parseInt(style.borderTopWidth, 10),\n        right: parseInt(style.borderRightWidth, 10),\n        bottom: parseInt(style.borderBottomWidth, 10),\n        left: parseInt(style.borderLeftWidth, 10)\n    };\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/istext\n */\n/**\n * Checks if the object is a native DOM Text node.\n */\nexport default function isText(obj) {\n    return Object.prototype.toString.call(obj) == '[object Text]';\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/isrange\n */\n/**\n * Checks if the object is a native DOM Range.\n */\nexport default function isRange(obj) {\n    return Object.prototype.toString.apply(obj) == '[object Range]';\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/getpositionedancestor\n */\nimport global from './global.js';\n/**\n * For a given element, returns the nearest ancestor element which CSS position is not \"static\".\n *\n * @param element The native DOM element to be checked.\n */\nexport default function getPositionedAncestor(element) {\n    if (!element || !element.parentNode) {\n        return null;\n    }\n    if (element.offsetParent === global.document.body) {\n        return null;\n    }\n    return element.offsetParent;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/rect\n */\nimport isRange from './isrange.js';\nimport isWindow from './iswindow.js';\nimport getBorderWidths from './getborderwidths.js';\nimport isText from './istext.js';\nimport getPositionedAncestor from './getpositionedancestor.js';\nimport global from './global.js';\nconst rectProperties = ['top', 'right', 'bottom', 'left', 'width', 'height'];\n/**\n * A helper class representing a `ClientRect` object, e.g. value returned by\n * the native `object.getBoundingClientRect()` method. Provides a set of methods\n * to manipulate the rect and compare it against other rect instances.\n */\nexport default class Rect {\n    /**\n     * Creates an instance of rect.\n     *\n     * ```ts\n     * // Rect of an HTMLElement.\n     * const rectA = new Rect( document.body );\n     *\n     * // Rect of a DOM Range.\n     * const rectB = new Rect( document.getSelection().getRangeAt( 0 ) );\n     *\n     * // Rect of a window (web browser viewport).\n     * const rectC = new Rect( window );\n     *\n     * // Rect out of an object.\n     * const rectD = new Rect( { top: 0, right: 10, bottom: 10, left: 0, width: 10, height: 10 } );\n     *\n     * // Rect out of another Rect instance.\n     * const rectE = new Rect( rectD );\n     *\n     * // Rect out of a ClientRect.\n     * const rectF = new Rect( document.body.getClientRects().item( 0 ) );\n     * ```\n     *\n     * **Note**: By default a rect of an HTML element includes its CSS borders and scrollbars (if any)\n     * ant the rect of a `window` includes scrollbars too. Use {@link #excludeScrollbarsAndBorders}\n     * to get the inner part of the rect.\n     *\n     * @param source A source object to create the rect.\n     */\n    constructor(source) {\n        const isSourceRange = isRange(source);\n        Object.defineProperty(this, '_source', {\n            // If the source is a Rect instance, copy it's #_source.\n            value: source._source || source,\n            writable: true,\n            enumerable: false\n        });\n        if (isDomElement(source) || isSourceRange) {\n            // The `Rect` class depends on `getBoundingClientRect` and `getClientRects` DOM methods. If the source\n            // of a rect in an HTML element or a DOM range but it does not belong to any rendered DOM tree, these methods\n            // will fail to obtain the geometry and the rect instance makes little sense to the features using it.\n            // To get rid of this warning make sure the source passed to the constructor is a descendant of `window.document.body`.\n            // @if CK_DEBUG // const sourceNode = isSourceRange ? source.startContainer : source;\n            // @if CK_DEBUG // if ( !sourceNode.ownerDocument || !sourceNode.ownerDocument.body.contains( sourceNode ) ) {\n            // @if CK_DEBUG // \tconsole.warn(\n            // @if CK_DEBUG // \t\t'rect-source-not-in-dom: The source of this rect does not belong to any rendered DOM tree.',\n            // @if CK_DEBUG // \t\t{ source } );\n            // @if CK_DEBUG // }\n            if (isSourceRange) {\n                const rangeRects = Rect.getDomRangeRects(source);\n                copyRectProperties(this, Rect.getBoundingRect(rangeRects));\n            }\n            else {\n                copyRectProperties(this, source.getBoundingClientRect());\n            }\n        }\n        else if (isWindow(source)) {\n            const { innerWidth, innerHeight } = source;\n            copyRectProperties(this, {\n                top: 0,\n                right: innerWidth,\n                bottom: innerHeight,\n                left: 0,\n                width: innerWidth,\n                height: innerHeight\n            });\n        }\n        else {\n            copyRectProperties(this, source);\n        }\n    }\n    /**\n     * Returns a clone of the rect.\n     *\n     * @returns A cloned rect.\n     */\n    clone() {\n        return new Rect(this);\n    }\n    /**\n     * Moves the rect so that its upper–left corner lands in desired `[ x, y ]` location.\n     *\n     * @param x Desired horizontal location.\n     * @param y Desired vertical location.\n     * @returns A rect which has been moved.\n     */\n    moveTo(x, y) {\n        this.top = y;\n        this.right = x + this.width;\n        this.bottom = y + this.height;\n        this.left = x;\n        return this;\n    }\n    /**\n     * Moves the rect in–place by a dedicated offset.\n     *\n     * @param x A horizontal offset.\n     * @param y A vertical offset\n     * @returns A rect which has been moved.\n     */\n    moveBy(x, y) {\n        this.top += y;\n        this.right += x;\n        this.left += x;\n        this.bottom += y;\n        return this;\n    }\n    /**\n     * Returns a new rect a a result of intersection with another rect.\n     */\n    getIntersection(anotherRect) {\n        const rect = {\n            top: Math.max(this.top, anotherRect.top),\n            right: Math.min(this.right, anotherRect.right),\n            bottom: Math.min(this.bottom, anotherRect.bottom),\n            left: Math.max(this.left, anotherRect.left),\n            width: 0,\n            height: 0\n        };\n        rect.width = rect.right - rect.left;\n        rect.height = rect.bottom - rect.top;\n        if (rect.width < 0 || rect.height < 0) {\n            return null;\n        }\n        else {\n            const newRect = new Rect(rect);\n            newRect._source = this._source;\n            return newRect;\n        }\n    }\n    /**\n     * Returns the area of intersection with another rect.\n     *\n     * @returns Area of intersection.\n     */\n    getIntersectionArea(anotherRect) {\n        const rect = this.getIntersection(anotherRect);\n        if (rect) {\n            return rect.getArea();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Returns the area of the rect.\n     */\n    getArea() {\n        return this.width * this.height;\n    }\n    /**\n     * Returns a new rect, a part of the original rect, which is actually visible to the user and is relative to the,`body`,\n     * e.g. an original rect cropped by parent element rects which have `overflow` set in CSS\n     * other than `\"visible\"`.\n     *\n     * If there's no such visible rect, which is when the rect is limited by one or many of\n     * the ancestors, `null` is returned.\n     *\n     * **Note**: This method does not consider the boundaries of the viewport (window).\n     * To get a rect cropped by all ancestors and the viewport, use an intersection such as:\n     *\n     * ```ts\n     * const visibleInViewportRect = new Rect( window ).getIntersection( new Rect( source ).getVisible() );\n     * ```\n     *\n     * @returns A visible rect instance or `null`, if there's none.\n     */\n    getVisible() {\n        const source = this._source;\n        let visibleRect = this.clone();\n        // There's no ancestor to crop <body> with the overflow.\n        if (isBody(source)) {\n            return visibleRect;\n        }\n        let child = source;\n        let parent = source.parentNode || source.commonAncestorContainer;\n        let absolutelyPositionedChildElement;\n        // Check the ancestors all the way up to the <body>.\n        while (parent && !isBody(parent)) {\n            const isParentOverflowVisible = getElementOverflow(parent) === 'visible';\n            if (child instanceof HTMLElement && getElementPosition(child) === 'absolute') {\n                absolutelyPositionedChildElement = child;\n            }\n            const parentElementPosition = getElementPosition(parent);\n            // The child will be cropped only if it has `position: absolute` and the parent has `position: relative` + some overflow.\n            // Otherwise there's no chance of visual clipping and the parent can be skipped\n            // https://github.com/ckeditor/ckeditor5/issues/14107.\n            //\n            // condition: isParentOverflowVisible\n            // \t\t+---------------------------+\n            //\t\t| #parent\t\t\t\t\t|\n            //\t\t| (overflow: visible)\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t|\t\t\t\t| child\t\t\t\t\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t+---------------------------+\n            //\n            // condition: absolutelyPositionedChildElement && parentElementPosition === 'relative' && isParentOverflowVisible\n            // \t\t+---------------------------+\n            //\t\t| parent\t\t\t\t\t|\n            //\t\t| (position: relative;)\t\t|\n            //\t\t| (overflow: visible;)\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t|\t\t\t\t| child  \t\t\t\t\t|\n            //\t\t|\t\t\t\t| (position: absolute;)\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t+---------------------------+\n            //\n            // condition: absolutelyPositionedChildElement && parentElementPosition !== 'relative'\n            // \t\t+---------------------------+\n            //\t\t| parent\t\t\t\t\t|\n            //\t\t| (position: static;)\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t|\t\t\t\t| child  \t\t\t\t\t|\n            //\t\t|\t\t\t\t| (position: absolute;)\t\t|\n            //\t\t|\t\t\t\t+-----------+---------------+\n            //\t\t+---------------------------+\n            if (isParentOverflowVisible ||\n                absolutelyPositionedChildElement && ((parentElementPosition === 'relative' && isParentOverflowVisible) ||\n                    parentElementPosition !== 'relative')) {\n                child = parent;\n                parent = parent.parentNode;\n                continue;\n            }\n            const parentRect = new Rect(parent);\n            const intersectionRect = visibleRect.getIntersection(parentRect);\n            if (intersectionRect) {\n                if (intersectionRect.getArea() < visibleRect.getArea()) {\n                    // Reduce the visible rect to the intersection.\n                    visibleRect = intersectionRect;\n                }\n            }\n            else {\n                // There's no intersection, the rect is completely invisible.\n                return null;\n            }\n            child = parent;\n            parent = parent.parentNode;\n        }\n        return visibleRect;\n    }\n    /**\n     * Checks if all property values ({@link #top}, {@link #left}, {@link #right},\n     * {@link #bottom}, {@link #width} and {@link #height}) are the equal in both rect\n     * instances.\n     *\n     * @param anotherRect A rect instance to compare with.\n     * @returns `true` when Rects are equal. `false` otherwise.\n     */\n    isEqual(anotherRect) {\n        for (const prop of rectProperties) {\n            if (this[prop] !== anotherRect[prop]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Checks whether a rect fully contains another rect instance.\n     *\n     * @param anotherRect\n     * @returns `true` if contains, `false` otherwise.\n     */\n    contains(anotherRect) {\n        const intersectRect = this.getIntersection(anotherRect);\n        return !!(intersectRect && intersectRect.isEqual(anotherRect));\n    }\n    /**\n     * Recalculates screen coordinates to coordinates relative to the positioned ancestor offset.\n     */\n    toAbsoluteRect() {\n        const { scrollX, scrollY } = global.window;\n        const absoluteRect = this.clone().moveBy(scrollX, scrollY);\n        if (isDomElement(absoluteRect._source)) {\n            const positionedAncestor = getPositionedAncestor(absoluteRect._source);\n            if (positionedAncestor) {\n                shiftRectToCompensatePositionedAncestor(absoluteRect, positionedAncestor);\n            }\n        }\n        return absoluteRect;\n    }\n    /**\n     * Excludes scrollbars and CSS borders from the rect.\n     *\n     * * Borders are removed when {@link #_source} is an HTML element.\n     * * Scrollbars are excluded from HTML elements and the `window`.\n     *\n     * @returns A rect which has been updated.\n     */\n    excludeScrollbarsAndBorders() {\n        const source = this._source;\n        let scrollBarWidth, scrollBarHeight, direction;\n        if (isWindow(source)) {\n            scrollBarWidth = source.innerWidth - source.document.documentElement.clientWidth;\n            scrollBarHeight = source.innerHeight - source.document.documentElement.clientHeight;\n            direction = source.getComputedStyle(source.document.documentElement).direction;\n        }\n        else {\n            const borderWidths = getBorderWidths(source);\n            scrollBarWidth = source.offsetWidth - source.clientWidth - borderWidths.left - borderWidths.right;\n            scrollBarHeight = source.offsetHeight - source.clientHeight - borderWidths.top - borderWidths.bottom;\n            direction = source.ownerDocument.defaultView.getComputedStyle(source).direction;\n            this.left += borderWidths.left;\n            this.top += borderWidths.top;\n            this.right -= borderWidths.right;\n            this.bottom -= borderWidths.bottom;\n            this.width = this.right - this.left;\n            this.height = this.bottom - this.top;\n        }\n        this.width -= scrollBarWidth;\n        if (direction === 'ltr') {\n            this.right -= scrollBarWidth;\n        }\n        else {\n            this.left += scrollBarWidth;\n        }\n        this.height -= scrollBarHeight;\n        this.bottom -= scrollBarHeight;\n        return this;\n    }\n    /**\n     * Returns an array of rects of the given native DOM Range.\n     *\n     * @param range A native DOM range.\n     * @returns DOM Range rects.\n     */\n    static getDomRangeRects(range) {\n        const rects = [];\n        // Safari does not iterate over ClientRectList using for...of loop.\n        const clientRects = Array.from(range.getClientRects());\n        if (clientRects.length) {\n            for (const rect of clientRects) {\n                rects.push(new Rect(rect));\n            }\n        }\n        // If there's no client rects for the Range, use parent container's bounding rect\n        // instead and adjust rect's width to simulate the actual geometry of such range.\n        // https://github.com/ckeditor/ckeditor5-utils/issues/153\n        // https://github.com/ckeditor/ckeditor5-ui/issues/317\n        else {\n            let startContainer = range.startContainer;\n            if (isText(startContainer)) {\n                startContainer = startContainer.parentNode;\n            }\n            const rect = new Rect(startContainer.getBoundingClientRect());\n            rect.right = rect.left;\n            rect.width = 0;\n            rects.push(rect);\n        }\n        return rects;\n    }\n    /**\n     * Returns a bounding rectangle that contains all the given `rects`.\n     *\n     * @param rects A list of rectangles that should be contained in the result rectangle.\n     * @returns Bounding rectangle or `null` if no `rects` were given.\n     */\n    static getBoundingRect(rects) {\n        const boundingRectData = {\n            left: Number.POSITIVE_INFINITY,\n            top: Number.POSITIVE_INFINITY,\n            right: Number.NEGATIVE_INFINITY,\n            bottom: Number.NEGATIVE_INFINITY,\n            width: 0,\n            height: 0\n        };\n        let rectangleCount = 0;\n        for (const rect of rects) {\n            rectangleCount++;\n            boundingRectData.left = Math.min(boundingRectData.left, rect.left);\n            boundingRectData.top = Math.min(boundingRectData.top, rect.top);\n            boundingRectData.right = Math.max(boundingRectData.right, rect.right);\n            boundingRectData.bottom = Math.max(boundingRectData.bottom, rect.bottom);\n        }\n        if (rectangleCount == 0) {\n            return null;\n        }\n        boundingRectData.width = boundingRectData.right - boundingRectData.left;\n        boundingRectData.height = boundingRectData.bottom - boundingRectData.top;\n        return new Rect(boundingRectData);\n    }\n}\n/**\n * Acquires all the rect properties from the passed source.\n */\nfunction copyRectProperties(rect, source) {\n    for (const p of rectProperties) {\n        rect[p] = source[p];\n    }\n}\n/**\n * Checks if provided object is a <body> HTML element.\n */\nfunction isBody(value) {\n    if (!isDomElement(value)) {\n        return false;\n    }\n    return value === value.ownerDocument.body;\n}\n/**\n * Checks if provided object \"looks like\" a DOM Element and has API required by `Rect` class.\n */\nfunction isDomElement(value) {\n    // Note: earlier we used `isElement()` from lodash library, however that function is less performant because\n    // it makes complicated checks to make sure that given value is a DOM element.\n    return value !== null && typeof value === 'object' && value.nodeType === 1 && typeof value.getBoundingClientRect === 'function';\n}\n/**\n * Returns the value of the `position` style of an `HTMLElement`.\n */\nfunction getElementPosition(element) {\n    return element instanceof HTMLElement ? element.ownerDocument.defaultView.getComputedStyle(element).position : 'static';\n}\n/**\n * Returns the value of the `overflow` style of an `HTMLElement` or a `Range`.\n */\nfunction getElementOverflow(element) {\n    return element instanceof HTMLElement ? element.ownerDocument.defaultView.getComputedStyle(element).overflow : 'visible';\n}\n/**\n * For a given absolute Rect coordinates object and a positioned element ancestor, it updates its\n * coordinates that make up for the position and the scroll of the ancestor.\n *\n * This is necessary because while Rects (and DOMRects) are relative to the browser's viewport, their coordinates\n * are used in real–life to position elements with `position: absolute`, which are scoped by any positioned\n * (and scrollable) ancestors.\n */\nfunction shiftRectToCompensatePositionedAncestor(rect, positionedElementAncestor) {\n    const ancestorPosition = new Rect(positionedElementAncestor);\n    const ancestorBorderWidths = getBorderWidths(positionedElementAncestor);\n    let moveX = 0;\n    let moveY = 0;\n    // (https://github.com/ckeditor/ckeditor5-ui-default/issues/126)\n    // If there's some positioned ancestor of the panel, then its `Rect` must be taken into\n    // consideration. `Rect` is always relative to the viewport while `position: absolute` works\n    // with respect to that positioned ancestor.\n    moveX -= ancestorPosition.left;\n    moveY -= ancestorPosition.top;\n    // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, not only its position must be taken into\n    // consideration (see above) but also its internal scrolls. Scroll have an impact here because `Rect`\n    // is relative to the viewport (it doesn't care about scrolling), while `position: absolute`\n    // must compensate that scrolling.\n    moveX += positionedElementAncestor.scrollLeft;\n    moveY += positionedElementAncestor.scrollTop;\n    // (https://github.com/ckeditor/ckeditor5-utils/issues/139)\n    // If there's some positioned ancestor of the panel, then its `Rect` includes its CSS `borderWidth`\n    // while `position: absolute` positioning does not consider it.\n    // E.g. `{ position: absolute, top: 0, left: 0 }` means upper left corner of the element,\n    // not upper-left corner of its border.\n    moveX -= ancestorBorderWidths.left;\n    moveY -= ancestorBorderWidths.top;\n    rect.moveBy(moveX, moveY);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/resizeobserver\n */\nimport global from './global.js';\n/**\n * A helper class which instances allow performing custom actions when native DOM elements are resized.\n *\n * ```ts\n * const editableElement = editor.editing.view.getDomRoot();\n *\n * const observer = new ResizeObserver( editableElement, entry => {\n * \tconsole.log( 'The editable element has been resized in DOM.' );\n * \tconsole.log( entry.target ); // -> editableElement\n * \tconsole.log( entry.contentRect.width ); // -> e.g. '423px'\n * } );\n * ```\n *\n * It uses the [native DOM resize observer](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver)\n * under the hood.\n */\nclass ResizeObserver {\n    /**\n     * Creates an instance of the `ResizeObserver` class.\n     *\n     * @param element A DOM element that is to be observed for resizing. Note that\n     * the element must be visible (i.e. not detached from DOM) for the observer to work.\n     * @param callback A function called when the observed element was resized. It passes\n     * the [`ResizeObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry)\n     * object with information about the resize event.\n     */\n    constructor(element, callback) {\n        // **Note**: For the maximum performance, this class ensures only a single instance of the native\n        // observer is used no matter how many instances of this class were created.\n        if (!ResizeObserver._observerInstance) {\n            ResizeObserver._createObserver();\n        }\n        this._element = element;\n        this._callback = callback;\n        ResizeObserver._addElementCallback(element, callback);\n        ResizeObserver._observerInstance.observe(element);\n    }\n    /**\n     * The element observed by this observer.\n     */\n    get element() {\n        return this._element;\n    }\n    /**\n     * Destroys the observer which disables the `callback` passed to the {@link #constructor}.\n     */\n    destroy() {\n        ResizeObserver._deleteElementCallback(this._element, this._callback);\n    }\n    /**\n     * Registers a new resize callback for the DOM element.\n     */\n    static _addElementCallback(element, callback) {\n        if (!ResizeObserver._elementCallbacks) {\n            ResizeObserver._elementCallbacks = new Map();\n        }\n        let callbacks = ResizeObserver._elementCallbacks.get(element);\n        if (!callbacks) {\n            callbacks = new Set();\n            ResizeObserver._elementCallbacks.set(element, callbacks);\n        }\n        callbacks.add(callback);\n    }\n    /**\n     * Removes a resize callback from the DOM element. If no callbacks are left\n     * for the element, it removes the element from the native observer.\n     */\n    static _deleteElementCallback(element, callback) {\n        const callbacks = ResizeObserver._getElementCallbacks(element);\n        // Remove the element callback. Check if exist first in case someone\n        // called destroy() twice.\n        if (callbacks) {\n            callbacks.delete(callback);\n            // If no callbacks left for the element, also remove the element.\n            if (!callbacks.size) {\n                ResizeObserver._elementCallbacks.delete(element);\n                ResizeObserver._observerInstance.unobserve(element);\n            }\n        }\n        if (ResizeObserver._elementCallbacks && !ResizeObserver._elementCallbacks.size) {\n            ResizeObserver._observerInstance = null;\n            ResizeObserver._elementCallbacks = null;\n        }\n    }\n    /**\n     * Returns are registered resize callbacks for the DOM element.\n     */\n    static _getElementCallbacks(element) {\n        if (!ResizeObserver._elementCallbacks) {\n            return null;\n        }\n        return ResizeObserver._elementCallbacks.get(element);\n    }\n    /**\n     * Creates the single native observer shared across all `ResizeObserver` instances.\n     */\n    static _createObserver() {\n        ResizeObserver._observerInstance = new global.window.ResizeObserver(entries => {\n            for (const entry of entries) {\n                const callbacks = ResizeObserver._getElementCallbacks(entry.target);\n                if (callbacks) {\n                    for (const callback of callbacks) {\n                        callback(entry);\n                    }\n                }\n            }\n        });\n    }\n}\n/**\n * The single native observer instance shared across all {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n */\nResizeObserver._observerInstance = null;\n/**\n * A mapping of native DOM elements and their callbacks shared across all\n * {@link module:utils/dom/resizeobserver~ResizeObserver} instances.\n */\nResizeObserver._elementCallbacks = null;\nexport default ResizeObserver;\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/tounit\n */\n/**\n * Returns a helper function, which adds a desired trailing\n * `unit` to the passed value.\n *\n * @param unit An unit like \"px\" or \"em\".\n */\nexport default function toUnit(unit) {\n    return value => value + unit;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/indexof\n */\n/**\n * Returns index of the node in the parent element.\n *\n * @param node Node which index is tested.\n * @returns Index of the node in the parent element. Returns 0 if node has no parent.\n */\nexport default function indexOf(node) {\n    let index = 0;\n    while (node.previousSibling) {\n        node = node.previousSibling;\n        index++;\n    }\n    return index;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/insertat\n */\n/**\n * Inserts node to the parent at given index.\n *\n * @param parentElement Parent element.\n * @param index Insertions index.\n * @param nodeToInsert Node to insert.\n */\nexport default function insertAt(parentElement, index, nodeToInsert) {\n    parentElement.insertBefore(nodeToInsert, parentElement.childNodes[index] || null);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* globals Node */\n/**\n * @module utils/dom/iscomment\n */\n/**\n * Checks whether the object is a native DOM Comment node.\n */\nexport default function isComment(obj) {\n    return obj && obj.nodeType === Node.COMMENT_NODE;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/isvisible\n */\n/**\n * Checks whether the element is visible to the user in DOM:\n *\n * * connected to the root of the document,\n * * has no `display: none`,\n * * has no ancestors with `display: none`.\n *\n * **Note**: This helper does not check whether the element is hidden by cropping, overflow, etc..\n * To check that, use {@link module:utils/dom/rect~Rect} instead.\n */\nexport default function isVisible(element) {\n    return !!(element && element.getClientRects && element.getClientRects().length);\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/position\n */\nimport global from './global.js';\nimport Rect from './rect.js';\nimport getPositionedAncestor from './getpositionedancestor.js';\nimport { isFunction } from 'lodash-es';\n// @if CK_DEBUG_POSITION // const {\n// @if CK_DEBUG_POSITION // \tdefault: RectDrawer,\n// @if CK_DEBUG_POSITION // \tdiagonalStylesBlack,\n// @if CK_DEBUG_POSITION // \tdiagonalStylesGreen,\n// @if CK_DEBUG_POSITION // \tdiagonalStylesRed\n// @if CK_DEBUG_POSITION // } = require( '@ckeditor/ckeditor5-utils/tests/_utils/rectdrawer' );\n// @if CK_DEBUG_POSITION // const TARGET_RECT_STYLE = {\n// @if CK_DEBUG_POSITION // \toutlineWidth: '2px', outlineStyle: 'dashed', outlineColor: 'blue', outlineOffset: '2px'\n// @if CK_DEBUG_POSITION // };\n// @if CK_DEBUG_POSITION // const VISIBLE_TARGET_RECT_STYLE = {\n// @if CK_DEBUG_POSITION //\t\t...diagonalStylesBlack,\n// @if CK_DEBUG_POSITION //\t\topacity: '1',\n// @if CK_DEBUG_POSITION //\t\tbackgroundColor: '#00000033',\n// @if CK_DEBUG_POSITION //\t\toutlineWidth: '2px'\n// @if CK_DEBUG_POSITION // };\n// @if CK_DEBUG_POSITION // const VIEWPORT_RECT_STYLE = {\n// @if CK_DEBUG_POSITION // \toutlineWidth: '2px',\n// @if CK_DEBUG_POSITION // \toutlineOffset: '-2px',\n// @if CK_DEBUG_POSITION // \toutlineStyle: 'solid',\n// @if CK_DEBUG_POSITION // \toutlineColor: 'red'\n// @if CK_DEBUG_POSITION // };\n// @if CK_DEBUG_POSITION // const VISIBLE_LIMITER_RECT_STYLE = {\n// @if CK_DEBUG_POSITION // \t...diagonalStylesGreen,\n// @if CK_DEBUG_POSITION // \toutlineWidth: '2px',\n// @if CK_DEBUG_POSITION // \toutlineOffset: '-2px'\n// @if CK_DEBUG_POSITION // };\n// @if CK_DEBUG_POSITION // const ELEMENT_RECT_STYLE = {\n// @if CK_DEBUG_POSITION // \toutlineWidth: '2px', outlineColor: 'orange', outlineOffset: '-2px'\n// @if CK_DEBUG_POSITION // };\n// @if CK_DEBUG_POSITION // const CHOSEN_POSITION_RECT_STYLE = {\n// @if CK_DEBUG_POSITION // \topacity: .5, outlineColor: 'magenta', backgroundColor: 'magenta'\n// @if CK_DEBUG_POSITION // };\n/**\n * Calculates the `position: absolute` coordinates of a given element so it can be positioned with respect to the\n * target in the visually most efficient way, taking various restrictions like viewport or limiter geometry\n * into consideration.\n *\n * **Note**: If there are no position coordinates found that meet the requirements (arguments of this helper),\n * `null` is returned.\n *\n * ```ts\n * // The element which is to be positioned.\n * const element = document.body.querySelector( '#toolbar' );\n *\n * // A target to which the element is positioned relatively.\n * const target = document.body.querySelector( '#container' );\n *\n * // Finding the optimal coordinates for the positioning.\n * const { left, top, name } = getOptimalPosition( {\n * \telement: element,\n * \ttarget: target,\n *\n * \t// The algorithm will chose among these positions to meet the requirements such\n * \t// as \"limiter\" element or \"fitInViewport\", set below. The positions are considered\n * \t// in the order of the array.\n * \tpositions: [\n * \t\t//\n * \t \t//\t[ Target ]\n * \t\t//\t+-----------------+\n * \t\t//\t|     Element     |\n * \t\t//\t+-----------------+\n * \t\t//\n * \t\ttargetRect => ( {\n * \t\t\ttop: targetRect.bottom,\n * \t\t\tleft: targetRect.left,\n * \t\t\tname: 'mySouthEastPosition'\n * \t\t} ),\n *\n * \t\t//\n * \t\t//\t+-----------------+\n * \t\t//\t|     Element     |\n * \t\t//\t+-----------------+\n * \t\t//\t[ Target ]\n * \t\t//\n * \t\t( targetRect, elementRect ) => ( {\n * \t\t\ttop: targetRect.top - elementRect.height,\n * \t\t\tleft: targetRect.left,\n * \t\t\tname: 'myNorthEastPosition'\n * \t\t} )\n * \t],\n *\n * \t// Find a position such guarantees the element remains within visible boundaries of <body>.\n * \tlimiter: document.body,\n *\n * \t// Find a position such guarantees the element remains within visible boundaries of the browser viewport.\n * \tfitInViewport: true\n * } );\n *\n * // The best position which fits into document.body and the viewport. May be useful\n * // to set proper class on the `element`.\n * console.log( name ); // -> \"myNorthEastPosition\"\n *\n * // Using the absolute coordinates which has been found to position the element\n * // as in the diagram depicting the \"myNorthEastPosition\" position.\n * element.style.top = top;\n * element.style.left = left;\n * ```\n *\n * @param options The input data and configuration of the helper.\n */\nexport function getOptimalPosition({ element, target, positions, limiter, fitInViewport, viewportOffsetConfig }) {\n    // If the {@link module:utils/dom/position~Options#target} is a function, use what it returns.\n    // https://github.com/ckeditor/ckeditor5-utils/issues/157\n    if (isFunction(target)) {\n        target = target();\n    }\n    // If the {@link module:utils/dom/position~Options#limiter} is a function, use what it returns.\n    // https://github.com/ckeditor/ckeditor5-ui/issues/260\n    if (isFunction(limiter)) {\n        limiter = limiter();\n    }\n    const positionedElementAncestor = getPositionedAncestor(element);\n    const constrainedViewportRect = getConstrainedViewportRect(viewportOffsetConfig);\n    const elementRect = new Rect(element);\n    const visibleTargetRect = getVisibleViewportIntersectionRect(target, constrainedViewportRect);\n    let bestPosition;\n    // @if CK_DEBUG_POSITION // const targetRect = new Rect( target );\n    // @if CK_DEBUG_POSITION // RectDrawer.clear();\n    // @if CK_DEBUG_POSITION // RectDrawer.draw( targetRect, TARGET_RECT_STYLE, 'Target' );\n    // @if CK_DEBUG_POSITION // if ( constrainedViewportRect ) {\n    // @if CK_DEBUG_POSITION //\t\tRectDrawer.draw( constrainedViewportRect, VIEWPORT_RECT_STYLE, 'Viewport' );\n    // @if CK_DEBUG_POSITION // }\n    // If the target got cropped by ancestors or went off the screen, positioning does not make any sense.\n    if (!visibleTargetRect || !constrainedViewportRect.getIntersection(visibleTargetRect)) {\n        return null;\n    }\n    // @if CK_DEBUG_POSITION //\tRectDrawer.draw( visibleTargetRect, VISIBLE_TARGET_RECT_STYLE, 'VisTgt' );\n    const positionOptions = {\n        targetRect: visibleTargetRect,\n        elementRect,\n        positionedElementAncestor,\n        viewportRect: constrainedViewportRect\n    };\n    // If there are no limits, just grab the very first position and be done with that drama.\n    if (!limiter && !fitInViewport) {\n        bestPosition = new PositionObject(positions[0], positionOptions);\n    }\n    else {\n        if (limiter) {\n            const visibleLimiterRect = getVisibleViewportIntersectionRect(limiter, constrainedViewportRect);\n            if (visibleLimiterRect) {\n                positionOptions.limiterRect = visibleLimiterRect;\n                // @if CK_DEBUG_POSITION // RectDrawer.draw( visibleLimiterRect, VISIBLE_LIMITER_RECT_STYLE, 'VisLim' );\n            }\n        }\n        // If there's no best position found, i.e. when all intersections have no area because\n        // rects have no width or height, then just return `null`\n        bestPosition = getBestPosition(positions, positionOptions);\n    }\n    return bestPosition;\n}\n/**\n * Returns intersection of visible source `Rect` with Viewport `Rect`. In case when source `Rect` is not visible\n * or there is no intersection between source `Rect` and Viewport `Rect`, `null` will be returned.\n */\nfunction getVisibleViewportIntersectionRect(source, viewportRect) {\n    const visibleSourceRect = new Rect(source).getVisible();\n    if (!visibleSourceRect) {\n        return null;\n    }\n    return visibleSourceRect.getIntersection(viewportRect);\n}\n/**\n * Returns a viewport `Rect` shrunk by the viewport offset config from all sides.\n */\nfunction getConstrainedViewportRect(viewportOffsetConfig) {\n    viewportOffsetConfig = Object.assign({ top: 0, bottom: 0, left: 0, right: 0 }, viewportOffsetConfig);\n    const viewportRect = new Rect(global.window);\n    viewportRect.top += viewportOffsetConfig.top;\n    viewportRect.height -= viewportOffsetConfig.top;\n    viewportRect.bottom -= viewportOffsetConfig.bottom;\n    viewportRect.height -= viewportOffsetConfig.bottom;\n    return viewportRect;\n}\n/**\n * For a given array of positioning functions, returns such that provides the best\n * fit of the `elementRect` into the `limiterRect` and `viewportRect`.\n */\nfunction getBestPosition(positions, options) {\n    const { elementRect } = options;\n    // This is when element is fully visible.\n    const elementRectArea = elementRect.getArea();\n    const positionInstances = positions\n        .map(positioningFunction => new PositionObject(positioningFunction, options))\n        // Some positioning functions may return `null` if they don't want to participate.\n        .filter(position => !!position.name);\n    let maxFitFactor = 0;\n    let bestPosition = null;\n    for (const position of positionInstances) {\n        const { limiterIntersectionArea, viewportIntersectionArea } = position;\n        // If a such position is found that element is fully contained by the limiter then, obviously,\n        // there will be no better one, so finishing.\n        if (limiterIntersectionArea === elementRectArea) {\n            // @if CK_DEBUG_POSITION //\tRectDrawer.draw( position._rect, CHOSEN_POSITION_RECT_STYLE, [\n            // @if CK_DEBUG_POSITION //\t\tposition.name,\n            // @if CK_DEBUG_POSITION //\t\t'100% fit',\n            // @if CK_DEBUG_POSITION //\t].join( '\\n' ) );\n            return position;\n        }\n        // To maximize both viewport and limiter intersection areas we use distance on _viewportIntersectionArea\n        // and _limiterIntersectionArea plane (without sqrt because we are looking for max value).\n        const fitFactor = viewportIntersectionArea ** 2 + limiterIntersectionArea ** 2;\n        // @if CK_DEBUG_POSITION //\tRectDrawer.draw( position._rect, { opacity: .4 }, [\n        // @if CK_DEBUG_POSITION //\t\tposition.name,\n        // @if CK_DEBUG_POSITION //\t\t'Vi=' +  Math.round( viewportIntersectionArea ),\n        // @if CK_DEBUG_POSITION //\t\t'Li=' + Math.round( limiterIntersectionArea )\n        // @if CK_DEBUG_POSITION //\t].join( '\\n' ) );\n        if (fitFactor > maxFitFactor) {\n            maxFitFactor = fitFactor;\n            bestPosition = position;\n        }\n    }\n    // @if CK_DEBUG_POSITION // if ( bestPosition ) {\n    // @if CK_DEBUG_POSITION // \tRectDrawer.draw( bestPosition._rect, CHOSEN_POSITION_RECT_STYLE );\n    // @if CK_DEBUG_POSITION // }\n    return bestPosition;\n}\n/**\n * A position class which instances are created and used by the {@link module:utils/dom/position~getOptimalPosition} helper.\n *\n * {@link module:utils/dom/position~Position#top} and {@link module:utils/dom/position~Position#left} properties of the position instance\n * translate directly to the `top` and `left` properties in CSS \"`position: absolute` coordinate system\". If set on the positioned element\n * in DOM, they will make it display it in the right place in the viewport.\n */\nclass PositionObject {\n    /**\n     * Creates an instance of the {@link module:utils/dom/position~PositionObject} class.\n     *\n     * @param positioningFunction function The function that defines the expected\n     * coordinates the positioned element should move to.\n     * @param options options object.\n     * @param options.elementRect The positioned element rect.\n     * @param options.targetRect The target element rect.\n     * @param options.viewportRect The viewport rect.\n     * @param options.limiterRect The limiter rect.\n     * @param options.positionedElementAncestor Nearest element ancestor element which CSS position is not \"static\".\n     */\n    constructor(positioningFunction, options) {\n        const positioningFunctionOutput = positioningFunction(options.targetRect, options.elementRect, options.viewportRect, options.limiterRect);\n        // Nameless position for a function that didn't participate.\n        if (!positioningFunctionOutput) {\n            return;\n        }\n        const { left, top, name, config } = positioningFunctionOutput;\n        this.name = name;\n        this.config = config;\n        this._positioningFunctionCoordinates = { left, top };\n        this._options = options;\n    }\n    /**\n     * The left value in pixels in the CSS `position: absolute` coordinate system.\n     * Set it on the positioned element in DOM to move it to the position.\n     */\n    get left() {\n        return this._absoluteRect.left;\n    }\n    /**\n     * The top value in pixels in the CSS `position: absolute` coordinate system.\n     * Set it on the positioned element in DOM to move it to the position.\n     */\n    get top() {\n        return this._absoluteRect.top;\n    }\n    /**\n     * An intersection area between positioned element and limiter within viewport constraints.\n     */\n    get limiterIntersectionArea() {\n        const limiterRect = this._options.limiterRect;\n        if (limiterRect) {\n            return limiterRect.getIntersectionArea(this._rect);\n        }\n        return 0;\n    }\n    /**\n     * An intersection area between positioned element and viewport.\n     */\n    get viewportIntersectionArea() {\n        const viewportRect = this._options.viewportRect;\n        return viewportRect.getIntersectionArea(this._rect);\n    }\n    /**\n     * An already positioned element rect. A clone of the element rect passed to the constructor\n     * but placed in the viewport according to the positioning function.\n     */\n    get _rect() {\n        if (this._cachedRect) {\n            return this._cachedRect;\n        }\n        this._cachedRect = this._options.elementRect.clone().moveTo(this._positioningFunctionCoordinates.left, this._positioningFunctionCoordinates.top);\n        return this._cachedRect;\n    }\n    /**\n     * An already absolutely positioned element rect. See ({@link #_rect}).\n     */\n    get _absoluteRect() {\n        if (this._cachedAbsoluteRect) {\n            return this._cachedAbsoluteRect;\n        }\n        this._cachedAbsoluteRect = this._rect.toAbsoluteRect();\n        return this._cachedAbsoluteRect;\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/remove\n */\n/**\n * Removes given node from parent.\n *\n * @param node Node to remove.\n */\nexport default function remove(node) {\n    const parent = node.parentNode;\n    if (parent) {\n        parent.removeChild(node);\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/dom/scroll\n */\nimport isRange from './isrange.js';\nimport Rect from './rect.js';\nimport isText from './istext.js';\n/**\n * Makes any page `HTMLElement` or `Range` (`target`) visible inside the browser viewport.\n * This helper will scroll all `target` ancestors and the web browser viewport to reveal the target to\n * the user. If the `target` is already visible, nothing will happen.\n *\n * @param options Additional configuration of the scrolling behavior.\n * @param options.target A target, which supposed to become visible to the user.\n * @param options.viewportOffset An offset from the edge of the viewport (in pixels)\n * the `target` will be moved by if the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the viewport and thus making it easier to\n * read or edit by the user.\n * @param options.ancestorOffset An offset from the boundary of scrollable ancestors (if any)\n * the `target` will be moved by if the viewport is scrolled. It enhances the user experience\n * by keeping the `target` some distance from the edge of the ancestors and thus making it easier to\n * read or edit by the user.\n * @param options.alignToTop When set `true`, the helper will make sure the `target` is scrolled up\n * to the top boundary of the viewport and/or scrollable ancestors if scrolled up. When not set\n * (default), the `target` will be revealed by scrolling as little as possible. This option will\n * not affect `targets` that must be scrolled down because they will appear at the top of the boundary\n * anyway.\n *\n * ```\n *                                             scrollViewportToShowTarget() with            scrollViewportToShowTarget() with\n *          Initial state                        alignToTop unset (default)                        alignToTop = true\n *\n * ┌────────────────────────────────┬─┐       ┌────────────────────────────────┬─┐        ┌────────────────────────────────┬─┐\n * │                                │▲│       │                                │▲│        │   [ Target to be revealed ]    │▲│\n * │                                │ │       │                                │ │        │                                │ │\n * │                                │█│       │                                │ │        │                                │ │\n * │                                │█│       │                                │ │        │                                │ │\n * │                                │ │       │                                │█│        │                                │ │\n * │                                │ │       │                                │█│        │                                │█│\n * │                                │ │       │                                │ │        │                                │█│\n * │                                │▼│       │   [ Target to be revealed ]    │▼│        │                                │▼│\n * └────────────────────────────────┴─┘       └────────────────────────────────┴─┘        └────────────────────────────────┴─┘\n *\n *\n *     [ Target to be revealed ]\n *```\n *\n * @param options.forceScroll When set `true`, the `target` will be aligned to the top of the viewport\n * and scrollable ancestors whether it is already visible or not. This option will only work when `alignToTop`\n * is `true`\n */\nexport function scrollViewportToShowTarget({ target, viewportOffset = 0, ancestorOffset = 0, alignToTop, forceScroll }) {\n    const targetWindow = getWindow(target);\n    let currentWindow = targetWindow;\n    let currentFrame = null;\n    viewportOffset = normalizeViewportOffset(viewportOffset);\n    // Iterate over all windows, starting from target's parent window up to window#top.\n    while (currentWindow) {\n        let firstAncestorToScroll;\n        // Let's scroll target's ancestors first to reveal it. Then, once the ancestor scrolls\n        // settled down, the algorithm can eventually scroll the viewport of the current window.\n        //\n        // Note: If the current window is target's **original** window (e.g. the first one),\n        // start scrolling the closest parent of the target. If not, scroll the closest parent\n        // of an iframe that resides in the current window.\n        if (currentWindow == targetWindow) {\n            firstAncestorToScroll = getParentElement(target);\n        }\n        else {\n            firstAncestorToScroll = getParentElement(currentFrame);\n        }\n        // Scroll the target's ancestors first. Once done, scrolling the viewport is easy.\n        scrollAncestorsToShowRect({\n            parent: firstAncestorToScroll,\n            getRect: () => {\n                // Note: If the target does not belong to the current window **directly**,\n                // i.e. it resides in an iframe belonging to the window, obtain the target's rect\n                // in the coordinates of the current window. By default, a Rect returns geometry\n                // relative to the current window's viewport. To make it work in a parent window,\n                // it must be shifted.\n                return getRectRelativeToWindow(target, currentWindow);\n            },\n            alignToTop,\n            ancestorOffset,\n            forceScroll\n        });\n        // Obtain the rect of the target after it has been scrolled within its ancestors.\n        // It's time to scroll the viewport.\n        const targetRect = getRectRelativeToWindow(target, currentWindow);\n        scrollWindowToShowRect({\n            window: currentWindow,\n            rect: targetRect,\n            viewportOffset,\n            alignToTop,\n            forceScroll\n        });\n        if (currentWindow.parent != currentWindow) {\n            // Keep the reference to the <iframe> element the \"previous current window\" was\n            // rendered within. It will be useful to re–calculate the rect of the target\n            // in the parent window's relative geometry. The target's rect must be shifted\n            // by it's iframe's position.\n            currentFrame = currentWindow.frameElement;\n            currentWindow = currentWindow.parent;\n            // If the current window has some parent but frameElement is inaccessible, then they have\n            // different domains/ports and, due to security reasons, accessing and scrolling\n            // the parent window won't be possible.\n            // See https://github.com/ckeditor/ckeditor5/issues/930.\n            if (!currentFrame) {\n                return;\n            }\n        }\n        else {\n            currentWindow = null;\n        }\n    }\n}\n/**\n * Makes any page `HTMLElement` or `Range` (target) visible within its scrollable ancestors,\n * e.g. if they have `overflow: scroll` CSS style.\n *\n * @param target A target, which supposed to become visible to the user.\n * @param ancestorOffset An offset between the target and the boundary of scrollable ancestors\n * to be maintained while scrolling.\n * @param limiterElement The outermost ancestor that should be scrolled. If specified, it can prevent\n * scrolling the whole page.\n */\nexport function scrollAncestorsToShowTarget(target, ancestorOffset, limiterElement) {\n    const targetParent = getParentElement(target);\n    scrollAncestorsToShowRect({\n        parent: targetParent,\n        getRect: () => new Rect(target),\n        ancestorOffset,\n        limiterElement\n    });\n}\n/**\n * Makes a given rect visible within its parent window.\n *\n * Note: Avoid the situation where the caret is still in the viewport, but totally\n * at the edge of it. In such situation, if it moved beyond the viewport in the next\n * action e.g. after paste, the scrolling would move it to the viewportOffset level\n * and it all would look like the caret visually moved up/down:\n *\n * 1.\n * ```\n * | foo[]\n * |                                    <--- N px of space below the caret\n * +---------------------------------...\n * ```\n *\n * 2. *paste*\n * 3.\n * ```\n * |\n * |\n * +-foo-----------------------------...\n *   bar[]                              <--- caret below viewport, scrolling...\n * ```\n *\n * 4. *scrolling*\n * 5.\n * ```\n * |\n * | foo\n * | bar[]                              <--- caret precisely at the edge\n * +---------------------------------...\n * ```\n *\n * To prevent this, this method checks the rects moved by the viewportOffset to cover\n * the upper/lower edge of the viewport. It makes sure if the action repeats, there's\n * no twitching – it's a purely visual improvement:\n *\n * 5. (after fix)\n * ```\n * |\n * | foo\n * | bar[]\n * |                                    <--- N px of space below the caret\n * +---------------------------------...\n * ```\n *\n * @param options Additional configuration of the scrolling behavior.\n * @param options.window A window which is scrolled to reveal the rect.\n * @param options.rect A rect which is to be revealed.\n * @param options.viewportOffset An offset from the edge of the viewport (in pixels) the `rect` will be\n * moved by if the viewport is scrolled.\n * @param options.alignToTop When set `true`, the helper will make sure the `rect` is scrolled up\n * to the top boundary of the viewport if scrolled up. When not set (default), the `rect` will be\n * revealed by scrolling as little as possible. This option will not affect rects that must be scrolled\n * down because they will appear at the top of the boundary anyway.\n * @param options.forceScroll When set `true`, the `rect` will be aligned to the top of the viewport\n * whether it is already visible or not. This option will only work when `alignToTop` is `true`\n */\nfunction scrollWindowToShowRect({ window, rect, alignToTop, forceScroll, viewportOffset }) {\n    const targetShiftedDownRect = rect.clone().moveBy(0, viewportOffset.bottom);\n    const targetShiftedUpRect = rect.clone().moveBy(0, -viewportOffset.top);\n    const viewportRect = new Rect(window).excludeScrollbarsAndBorders();\n    const rects = [targetShiftedUpRect, targetShiftedDownRect];\n    const forceScrollToTop = alignToTop && forceScroll;\n    const allRectsFitInViewport = rects.every(rect => viewportRect.contains(rect));\n    let { scrollX, scrollY } = window;\n    const initialScrollX = scrollX;\n    const initialScrollY = scrollY;\n    if (forceScrollToTop) {\n        scrollY -= (viewportRect.top - rect.top) + viewportOffset.top;\n    }\n    else if (!allRectsFitInViewport) {\n        if (isAbove(targetShiftedUpRect, viewportRect)) {\n            scrollY -= viewportRect.top - rect.top + viewportOffset.top;\n        }\n        else if (isBelow(targetShiftedDownRect, viewportRect)) {\n            if (alignToTop) {\n                scrollY += rect.top - viewportRect.top - viewportOffset.top;\n            }\n            else {\n                scrollY += rect.bottom - viewportRect.bottom + viewportOffset.bottom;\n            }\n        }\n    }\n    if (!allRectsFitInViewport) {\n        // TODO: Web browsers scroll natively to place the target in the middle\n        // of the viewport. It's not a very popular case, though.\n        if (isLeftOf(rect, viewportRect)) {\n            scrollX -= viewportRect.left - rect.left + viewportOffset.left;\n        }\n        else if (isRightOf(rect, viewportRect)) {\n            scrollX += rect.right - viewportRect.right + viewportOffset.right;\n        }\n    }\n    if (scrollX != initialScrollX || scrollY !== initialScrollY) {\n        window.scrollTo(scrollX, scrollY);\n    }\n}\n/**\n * Recursively scrolls element ancestors to visually reveal a rect.\n *\n * @param options Additional configuration of the scrolling behavior.\n * @param options.parent The first parent ancestor to start scrolling.\n * @param options.getRect A function which returns the Rect, which is to be revealed.\n * @param options.ancestorOffset An offset from the boundary of scrollable ancestors (if any)\n * the `Rect` instance will be moved by if the viewport is scrolled.\n * @param options.alignToTop When set `true`, the helper will make sure the `Rect` instance is scrolled up\n * to the top boundary of the scrollable ancestors if scrolled up. When not set (default), the `rect`\n * will be revealed by scrolling as little as possible. This option will not affect rects that must be\n * scrolled down because they will appear at the top of the boundary\n * anyway.\n * @param options.forceScroll When set `true`, the `rect` will be aligned to the top of scrollable ancestors\n * whether it is already visible or not. This option will only work when `alignToTop` is `true`\n * @param options.limiterElement The outermost ancestor that should be scrolled. Defaults to the `<body>` element.\n */\nfunction scrollAncestorsToShowRect({ parent, getRect, alignToTop, forceScroll, ancestorOffset = 0, limiterElement }) {\n    const parentWindow = getWindow(parent);\n    const forceScrollToTop = alignToTop && forceScroll;\n    let parentRect, targetRect, targetFitsInTarget;\n    const limiter = limiterElement || parentWindow.document.body;\n    while (parent != limiter) {\n        targetRect = getRect();\n        parentRect = new Rect(parent).excludeScrollbarsAndBorders();\n        targetFitsInTarget = parentRect.contains(targetRect);\n        if (forceScrollToTop) {\n            parent.scrollTop -= (parentRect.top - targetRect.top) + ancestorOffset;\n        }\n        else if (!targetFitsInTarget) {\n            if (isAbove(targetRect, parentRect)) {\n                parent.scrollTop -= parentRect.top - targetRect.top + ancestorOffset;\n            }\n            else if (isBelow(targetRect, parentRect)) {\n                if (alignToTop) {\n                    parent.scrollTop += targetRect.top - parentRect.top - ancestorOffset;\n                }\n                else {\n                    parent.scrollTop += targetRect.bottom - parentRect.bottom + ancestorOffset;\n                }\n            }\n        }\n        if (!targetFitsInTarget) {\n            if (isLeftOf(targetRect, parentRect)) {\n                parent.scrollLeft -= parentRect.left - targetRect.left + ancestorOffset;\n            }\n            else if (isRightOf(targetRect, parentRect)) {\n                parent.scrollLeft += targetRect.right - parentRect.right + ancestorOffset;\n            }\n        }\n        parent = parent.parentNode;\n    }\n}\n/**\n * Determines if a given `Rect` extends beyond the bottom edge of the second `Rect`.\n */\nfunction isBelow(firstRect, secondRect) {\n    return firstRect.bottom > secondRect.bottom;\n}\n/**\n * Determines if a given `Rect` extends beyond the top edge of the second `Rect`.\n */\nfunction isAbove(firstRect, secondRect) {\n    return firstRect.top < secondRect.top;\n}\n/**\n * Determines if a given `Rect` extends beyond the left edge of the second `Rect`.\n */\nfunction isLeftOf(firstRect, secondRect) {\n    return firstRect.left < secondRect.left;\n}\n/**\n * Determines if a given `Rect` extends beyond the right edge of the second `Rect`.\n */\nfunction isRightOf(firstRect, secondRect) {\n    return firstRect.right > secondRect.right;\n}\n/**\n * Returns the closest window of an element or range.\n */\nfunction getWindow(elementOrRange) {\n    if (isRange(elementOrRange)) {\n        return elementOrRange.startContainer.ownerDocument.defaultView;\n    }\n    else {\n        return elementOrRange.ownerDocument.defaultView;\n    }\n}\n/**\n * Returns the closest parent of an element or DOM range.\n */\nfunction getParentElement(elementOrRange) {\n    if (isRange(elementOrRange)) {\n        let parent = elementOrRange.commonAncestorContainer;\n        // If a Range is attached to the Text, use the closest element ancestor.\n        if (isText(parent)) {\n            parent = parent.parentNode;\n        }\n        return parent;\n    }\n    else {\n        return elementOrRange.parentNode;\n    }\n}\n/**\n * Returns the rect of an element or range residing in an iframe.\n * The result rect is relative to the geometry of the passed window instance.\n *\n * @param target Element or range which rect should be returned.\n * @param relativeWindow A window the rect should be relative to.\n */\nfunction getRectRelativeToWindow(target, relativeWindow) {\n    const targetWindow = getWindow(target);\n    const rect = new Rect(target);\n    if (targetWindow === relativeWindow) {\n        return rect;\n    }\n    else {\n        let currentWindow = targetWindow;\n        while (currentWindow != relativeWindow) {\n            const frame = currentWindow.frameElement;\n            const frameRect = new Rect(frame).excludeScrollbarsAndBorders();\n            rect.moveBy(frameRect.left, frameRect.top);\n            currentWindow = currentWindow.parent;\n        }\n    }\n    return rect;\n}\n/**\n * A helper that explodes the `viewportOffset` configuration if defined as a plain number into an object\n * with `top`, `bottom`, `left`, and `right` properties.\n *\n * If an object value is passed, this helper will pass it through.\n *\n * @param viewportOffset Viewport offset to be normalized.\n */\nfunction normalizeViewportOffset(viewportOffset) {\n    if (typeof viewportOffset === 'number') {\n        return {\n            top: viewportOffset,\n            bottom: viewportOffset,\n            left: viewportOffset,\n            right: viewportOffset\n        };\n    }\n    return viewportOffset;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport CKEditorError from './ckeditorerror.js';\nimport env from './env.js';\nconst modifiersToGlyphsMac = {\n    ctrl: '⌃',\n    cmd: '⌘',\n    alt: '⌥',\n    shift: '⇧'\n};\nconst modifiersToGlyphsNonMac = {\n    ctrl: 'Ctrl+',\n    alt: 'Alt+',\n    shift: 'Shift+'\n};\nconst keyCodesToGlyphs = {\n    37: '←',\n    38: '↑',\n    39: '→',\n    40: '↓',\n    9: '⇥'\n};\n/**\n * An object with `keyName => keyCode` pairs for a set of known keys.\n *\n * Contains:\n *\n * * `a-z`,\n * * `0-9`,\n * * `f1-f12`,\n * * `` ` ``, `-`, `=`, `[`, `]`, `;`, `'`, `,`, `.`, `/`, `\\`,\n * * `arrow(left|up|right|bottom)`,\n * * `backspace`, `delete`, `enter`, `esc`, `tab`,\n * * `ctrl`, `cmd`, `shift`, `alt`.\n */\nexport const keyCodes = generateKnownKeyCodes();\nconst keyCodeNames = Object.fromEntries(Object.entries(keyCodes).map(([name, code]) => {\n    let prettyKeyName;\n    if (code in keyCodesToGlyphs) {\n        prettyKeyName = keyCodesToGlyphs[code];\n    }\n    else {\n        prettyKeyName = name.charAt(0).toUpperCase() + name.slice(1);\n    }\n    return [code, prettyKeyName];\n}));\n/**\n * Converts a key name or {@link module:utils/keyboard~KeystrokeInfo keystroke info} into a key code.\n *\n * Note: Key names are matched with {@link module:utils/keyboard#keyCodes} in a case-insensitive way.\n *\n * @param key A key name (see {@link module:utils/keyboard#keyCodes}) or a keystroke data object.\n * @returns Key or keystroke code.\n */\nexport function getCode(key) {\n    let keyCode;\n    if (typeof key == 'string') {\n        keyCode = keyCodes[key.toLowerCase()];\n        if (!keyCode) {\n            /**\n             * Unknown key name. Only key names included in the {@link module:utils/keyboard#keyCodes} can be used.\n             *\n             * @error keyboard-unknown-key\n             * @param {String} key\n             */\n            throw new CKEditorError('keyboard-unknown-key', null, { key });\n        }\n    }\n    else {\n        keyCode = key.keyCode +\n            (key.altKey ? keyCodes.alt : 0) +\n            (key.ctrlKey ? keyCodes.ctrl : 0) +\n            (key.shiftKey ? keyCodes.shift : 0) +\n            (key.metaKey ? keyCodes.cmd : 0);\n    }\n    return keyCode;\n}\n/**\n * Parses the keystroke and returns a keystroke code that will match the code returned by\n * {@link module:utils/keyboard~getCode} for the corresponding {@link module:utils/keyboard~KeystrokeInfo keystroke info}.\n *\n * The keystroke can be passed in two formats:\n *\n * * as a single string – e.g. `ctrl + A`,\n * * as an array of {@link module:utils/keyboard~keyCodes known key names} and key codes – e.g.:\n *   * `[ 'ctrl', 32 ]` (ctrl + space),\n *   * `[ 'ctrl', 'a' ]` (ctrl + A).\n *\n * Note: Key names are matched with {@link module:utils/keyboard#keyCodes} in a case-insensitive way.\n *\n * Note: Only keystrokes with a single non-modifier key are supported (e.g. `ctrl+A` is OK, but `ctrl+A+B` is not).\n *\n * Note: On macOS, keystroke handling is translating the `Ctrl` key to the `Cmd` key and handling only that keystroke.\n * For example, a registered keystroke `Ctrl+A` will be translated to `Cmd+A` on macOS. To disable the translation of some keystroke,\n * use the forced modifier: `Ctrl!+A` (note the exclamation mark).\n *\n * @param keystroke The keystroke definition.\n * @returns Keystroke code.\n */\nexport function parseKeystroke(keystroke) {\n    if (typeof keystroke == 'string') {\n        keystroke = splitKeystrokeText(keystroke);\n    }\n    return keystroke\n        .map(key => (typeof key == 'string') ? getEnvKeyCode(key) : key)\n        .reduce((key, sum) => sum + key, 0);\n}\n/**\n * Translates any keystroke string text like `\"Ctrl+A\"` to an\n * environment–specific keystroke, i.e. `\"⌘A\"` on macOS.\n *\n * @param keystroke The keystroke text.\n * @returns The keystroke text specific for the environment.\n */\nexport function getEnvKeystrokeText(keystroke) {\n    let keystrokeCode = parseKeystroke(keystroke);\n    const modifiersToGlyphs = Object.entries((env.isMac || env.isiOS) ? modifiersToGlyphsMac : modifiersToGlyphsNonMac);\n    const modifiers = modifiersToGlyphs.reduce((modifiers, [name, glyph]) => {\n        // Modifier keys are stored as a bit mask so extract those from the keystroke code.\n        if ((keystrokeCode & keyCodes[name]) != 0) {\n            keystrokeCode &= ~keyCodes[name];\n            modifiers += glyph;\n        }\n        return modifiers;\n    }, '');\n    return modifiers + (keystrokeCode ? keyCodeNames[keystrokeCode] : '');\n}\n/**\n * Returns `true` if the provided key code represents one of the arrow keys.\n *\n * @param keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n */\nexport function isArrowKeyCode(keyCode) {\n    return keyCode == keyCodes.arrowright ||\n        keyCode == keyCodes.arrowleft ||\n        keyCode == keyCodes.arrowup ||\n        keyCode == keyCodes.arrowdown;\n}\n/**\n * Returns the direction in which the {@link module:engine/model/documentselection~DocumentSelection selection}\n * will move when the provided arrow key code is pressed considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) content languages, pressing the left arrow means moving the selection right (forward)\n * in the model structure. Similarly, pressing the right arrow moves the selection left (backward).\n *\n * @param keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n * @returns Localized arrow direction or `undefined` for non-arrow key codes.\n */\nexport function getLocalizedArrowKeyCodeDirection(keyCode, contentLanguageDirection) {\n    const isLtrContent = contentLanguageDirection === 'ltr';\n    switch (keyCode) {\n        case keyCodes.arrowleft:\n            return isLtrContent ? 'left' : 'right';\n        case keyCodes.arrowright:\n            return isLtrContent ? 'right' : 'left';\n        case keyCodes.arrowup:\n            return 'up';\n        case keyCodes.arrowdown:\n            return 'down';\n    }\n}\n/**\n * Converts a key name to the key code with mapping based on the env.\n *\n * See: {@link module:utils/keyboard~getCode}.\n *\n * @param key The key name (see {@link module:utils/keyboard#keyCodes}).\n * @returns Key code.\n */\nfunction getEnvKeyCode(key) {\n    // Don't remap modifier key for forced modifiers.\n    if (key.endsWith('!')) {\n        return getCode(key.slice(0, -1));\n    }\n    const code = getCode(key);\n    return (env.isMac || env.isiOS) && code == keyCodes.ctrl ? keyCodes.cmd : code;\n}\n/**\n * Determines if the provided key code moves the {@link module:engine/model/documentselection~DocumentSelection selection}\n * forward or backward considering the language direction of the editor content.\n *\n * For instance, in right–to–left (RTL) languages, pressing the left arrow means moving forward\n * in the model structure. Similarly, pressing the right arrow moves the selection backward.\n *\n * @param keyCode A key code as in {@link module:utils/keyboard~KeystrokeInfo#keyCode}.\n * @param contentLanguageDirection The content language direction, corresponding to\n * {@link module:utils/locale~Locale#contentLanguageDirection}.\n */\nexport function isForwardArrowKeyCode(keyCode, contentLanguageDirection) {\n    const localizedKeyCodeDirection = getLocalizedArrowKeyCodeDirection(keyCode, contentLanguageDirection);\n    return localizedKeyCodeDirection === 'down' || localizedKeyCodeDirection === 'right';\n}\nfunction generateKnownKeyCodes() {\n    const keyCodes = {\n        arrowleft: 37,\n        arrowup: 38,\n        arrowright: 39,\n        arrowdown: 40,\n        backspace: 8,\n        delete: 46,\n        enter: 13,\n        space: 32,\n        esc: 27,\n        tab: 9,\n        // The idea about these numbers is that they do not collide with any real key codes, so we can use them\n        // like bit masks.\n        ctrl: 0x110000,\n        shift: 0x220000,\n        alt: 0x440000,\n        cmd: 0x880000\n    };\n    // a-z\n    for (let code = 65; code <= 90; code++) {\n        const letter = String.fromCharCode(code);\n        keyCodes[letter.toLowerCase()] = code;\n    }\n    // 0-9\n    for (let code = 48; code <= 57; code++) {\n        keyCodes[code - 48] = code;\n    }\n    // F1-F12\n    for (let code = 112; code <= 123; code++) {\n        keyCodes['f' + (code - 111)] = code;\n    }\n    // other characters\n    Object.assign(keyCodes, {\n        '\\'': 222,\n        ',': 108,\n        '-': 109,\n        '.': 110,\n        '/': 111,\n        ';': 186,\n        '=': 187,\n        '[': 219,\n        '\\\\': 220,\n        ']': 221,\n        '`': 223\n    });\n    return keyCodes;\n}\nfunction splitKeystrokeText(keystroke) {\n    return keystroke.split('+').map(key => key.trim());\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\nimport CKEditorError from './ckeditorerror.js';\nimport global from './dom/global.js';\nimport { merge } from 'lodash-es';\n/* istanbul ignore else -- @preserve */\nif (!global.window.CKEDITOR_TRANSLATIONS) {\n    global.window.CKEDITOR_TRANSLATIONS = {};\n}\n/**\n * Adds translations to existing ones or overrides the existing translations. These translations will later\n * be available for the {@link module:utils/locale~Locale#t `t()`} function.\n *\n * The `translations` is an object which consists of `messageId: translation` pairs. Note that the message ID can be\n * either constructed from the message string or from the message ID if it was passed\n * (this happens rarely and mostly for short messages or messages with placeholders).\n * Since the editor displays only the message string, the message ID can be found either in the source code or in the\n * built translations for another language.\n *\n * ```ts\n * add( 'pl', {\n * \t'Cancel': 'Anuluj',\n * \t'IMAGE': 'obraz', // Note that the `IMAGE` comes from the message ID, while the string can be `image`.\n * } );\n * ```\n *\n * If the message is supposed to support various plural forms, make sure to provide an array with the singular form and all plural forms:\n *\n * ```ts\n * add( 'pl', {\n * \t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n * } );\n * ```\n *\n * You should also specify the third argument (the `getPluralForm()` function) that will be used to determine the plural form if no\n * language file was loaded for that language. All language files coming from CKEditor 5 sources will have this option set, so\n * these plural form rules will be reused by other translations added to the registered languages. The `getPluralForm()` function\n * can return either a Boolean or a number.\n *\n * ```ts\n * add( 'en', {\n * \t// ... Translations.\n * }, n => n !== 1 );\n * add( 'pl', {\n * \t// ... Translations.\n * }, n => n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && ( n % 100 < 10 || n % 100 >= 20 ) ? 1 : 2 );\n * ```\n *\n * All translations extend the global `window.CKEDITOR_TRANSLATIONS` object. An example of this object can be found below:\n *\n * ```ts\n * {\n * \tpl: {\n * \t\tdictionary: {\n * \t\t\t'Cancel': 'Anuluj',\n * \t\t\t'Add space': [ 'Dodaj spację', 'Dodaj %0 spacje', 'Dodaj %0 spacji' ]\n * \t\t},\n * \t\t// A function that returns the plural form index.\n * \t\tgetPluralForm: n => n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && ( n % 100 < 10 || n % 100 >= 20 ) ? 1 : 2 );\n * \t}\n * \t// Other languages.\n * \t}\n * ```\n *\n * If you cannot import this function from this module (e.g. because you use a CKEditor 5 build), you can\n * still add translations by extending the global `window.CKEDITOR_TRANSLATIONS` object by using a function like\n * the one below:\n *\n * ```ts\n * function addTranslations( language, translations, getPluralForm ) {\n * \tif ( !global.window.CKEDITOR_TRANSLATIONS ) {\n * \t\tglobal.window.CKEDITOR_TRANSLATIONS = {};\n * \t}\n\n * \tif ( !global.window.CKEDITOR_TRANSLATIONS[ language ] ) {\n * \t\tglobal.window.CKEDITOR_TRANSLATIONS[ language ] = {};\n * \t}\n *\n * \tconst languageTranslations = global.window.CKEDITOR_TRANSLATIONS[ language ];\n *\n * \tlanguageTranslations.dictionary = languageTranslations.dictionary || {};\n * \tlanguageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n *\n * \t// Extend the dictionary for the given language.\n * \tObject.assign( languageTranslations.dictionary, translations );\n * }\n * ```\n *\n * @param language Target language.\n * @param translations An object with translations which will be added to the dictionary.\n * For each message ID the value should be either a translation or an array of translations if the message\n * should support plural forms.\n * @param getPluralForm A function that returns the plural form index (a number).\n */\nexport function add(language, translations, getPluralForm) {\n    if (!global.window.CKEDITOR_TRANSLATIONS[language]) {\n        global.window.CKEDITOR_TRANSLATIONS[language] = {};\n    }\n    const languageTranslations = global.window.CKEDITOR_TRANSLATIONS[language];\n    languageTranslations.dictionary = languageTranslations.dictionary || {};\n    languageTranslations.getPluralForm = getPluralForm || languageTranslations.getPluralForm;\n    Object.assign(languageTranslations.dictionary, translations);\n}\n/**\n * **Note:** This method is internal, use {@link module:utils/locale~Locale#t the `t()` function} instead to translate\n * the editor UI parts.\n *\n * This function is responsible for translating messages to the specified language. It uses translations added perviously\n * by {@link module:utils/translation-service~add} (a translations dictionary and the `getPluralForm()` function\n * to provide accurate translations of plural forms).\n *\n * When no translation is defined in the dictionary or the dictionary does not exist, this function returns\n * the original message string or the message plural depending on the number of elements.\n *\n * ```ts\n * translate( 'pl', { string: 'Cancel' } ); // 'Cancel'\n * ```\n *\n * The third optional argument is the number of elements, based on which the single form or one of the plural forms\n * should be picked when the message is supposed to support various plural forms.\n *\n * ```ts\n * translate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 1 ); // 'Add a space'\n * translate( 'en', { string: 'Add a space', plural: 'Add %0 spaces' }, 3 ); // 'Add %0 spaces'\n * ```\n *\n * The message should provide an ID using the `id` property when the message strings are not unique and their\n * translations should be different.\n *\n * ```ts\n * translate( 'en', { string: 'image', id: 'ADD_IMAGE' } );\n * translate( 'en', { string: 'image', id: 'AN_IMAGE' } );\n * ```\n *\n * @internal\n * @param language Target language.\n * @param message A message that will be translated.\n * @param quantity The number of elements for which a plural form should be picked from the target language dictionary.\n * @param translations Translations passed in editor config, if not provided use the global `window.CKEDITOR_TRANSLATIONS`.\n * @returns Translated sentence.\n */\nexport function _translate(language, message, quantity = 1, translations) {\n    if (typeof quantity !== 'number') {\n        /**\n         * An incorrect value was passed to the translation function. This was probably caused\n         * by an incorrect message interpolation of a plural form. Note that for messages supporting plural forms\n         * the second argument of the `t()` function should always be a number or an array with a number as the first element.\n         *\n         * @error translation-service-quantity-not-a-number\n         */\n        throw new CKEditorError('translation-service-quantity-not-a-number', null, { quantity });\n    }\n    const normalizedTranslations = translations || global.window.CKEDITOR_TRANSLATIONS;\n    const numberOfLanguages = getNumberOfLanguages(normalizedTranslations);\n    if (numberOfLanguages === 1) {\n        // Override the language to the only supported one.\n        // This can't be done in the `Locale` class, because the translations comes after the `Locale` class initialization.\n        language = Object.keys(normalizedTranslations)[0];\n    }\n    const messageId = message.id || message.string;\n    if (numberOfLanguages === 0 || !hasTranslation(language, messageId, normalizedTranslations)) {\n        if (quantity !== 1) {\n            // Return the default plural form that was passed in the `message.plural` parameter.\n            return message.plural;\n        }\n        return message.string;\n    }\n    const dictionary = normalizedTranslations[language].dictionary;\n    const getPluralForm = normalizedTranslations[language].getPluralForm || (n => n === 1 ? 0 : 1);\n    const translation = dictionary[messageId];\n    if (typeof translation === 'string') {\n        return translation;\n    }\n    const pluralFormIndex = Number(getPluralForm(quantity));\n    // Note: The `translate` function is not responsible for replacing `%0, %1, ...` with values.\n    return translation[pluralFormIndex];\n}\n/**\n * Clears dictionaries for test purposes.\n *\n * @internal\n */\nexport function _clear() {\n    if (global.window.CKEDITOR_TRANSLATIONS) {\n        global.window.CKEDITOR_TRANSLATIONS = {};\n    }\n}\n/**\n * If array then merge objects which are inside otherwise return given object.\n *\n * @internal\n * @param translations Translations passed in editor config.\n */\nexport function _unifyTranslations(translations) {\n    return Array.isArray(translations) ?\n        translations.reduce((acc, translation) => merge(acc, translation)) :\n        translations;\n}\n/**\n * Checks whether the dictionary exists and translation in that dictionary exists.\n */\nfunction hasTranslation(language, messageId, translations) {\n    return !!translations[language] && !!translations[language].dictionary[messageId];\n}\nfunction getNumberOfLanguages(translations) {\n    return Object.keys(translations).length;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/first\n */\n/**\n * Returns first item of the given `iterator`.\n */\nexport default function first(iterator) {\n    const iteratorItem = iterator.next();\n    if (iteratorItem.done) {\n        return null;\n    }\n    return iteratorItem.value;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/* global setTimeout, clearTimeout */\n/**\n * @module utils/focustracker\n */\nimport DomEmitterMixin from './dom/emittermixin.js';\nimport ObservableMixin from './observablemixin.js';\nimport CKEditorError from './ckeditorerror.js';\n/**\n * Allows observing a group of `Element`s whether at least one of them is focused.\n *\n * Used by the {@link module:core/editor/editor~Editor} in order to track whether the focus is still within the application,\n * or were used outside of its UI.\n *\n * **Note** `focus` and `blur` listeners use event capturing, so it is only needed to register wrapper `Element`\n * which contain other `focusable` elements. But note that this wrapper element has to be focusable too\n * (have e.g. `tabindex=\"-1\"`).\n *\n * Check out the {@glink framework/deep-dive/ui/focus-tracking \"Deep dive into focus tracking\"} guide to learn more.\n */\nexport default class FocusTracker extends DomEmitterMixin(ObservableMixin()) {\n    constructor() {\n        super();\n        /**\n         * List of registered elements.\n         *\n         * @internal\n         */\n        this._elements = new Set();\n        /**\n         * Event loop timeout.\n         */\n        this._nextEventLoopTimeout = null;\n        this.set('isFocused', false);\n        this.set('focusedElement', null);\n    }\n    /**\n     * Starts tracking the specified element.\n     */\n    add(element) {\n        if (this._elements.has(element)) {\n            /**\n             * This element is already tracked by {@link module:utils/focustracker~FocusTracker}.\n             *\n             * @error focustracker-add-element-already-exist\n             */\n            throw new CKEditorError('focustracker-add-element-already-exist', this);\n        }\n        this.listenTo(element, 'focus', () => this._focus(element), { useCapture: true });\n        this.listenTo(element, 'blur', () => this._blur(), { useCapture: true });\n        this._elements.add(element);\n    }\n    /**\n     * Stops tracking the specified element and stops listening on this element.\n     */\n    remove(element) {\n        if (element === this.focusedElement) {\n            this._blur();\n        }\n        if (this._elements.has(element)) {\n            this.stopListening(element);\n            this._elements.delete(element);\n        }\n    }\n    /**\n     * Destroys the focus tracker by:\n     * - Disabling all event listeners attached to tracked elements.\n     * - Removing all tracked elements that were previously added.\n     */\n    destroy() {\n        this.stopListening();\n    }\n    /**\n     * Stores currently focused element and set {@link #isFocused} as `true`.\n     */\n    _focus(element) {\n        clearTimeout(this._nextEventLoopTimeout);\n        this.focusedElement = element;\n        this.isFocused = true;\n    }\n    /**\n     * Clears currently focused element and set {@link #isFocused} as `false`.\n     * This method uses `setTimeout` to change order of fires `blur` and `focus` events.\n     */\n    _blur() {\n        clearTimeout(this._nextEventLoopTimeout);\n        this._nextEventLoopTimeout = setTimeout(() => {\n            this.focusedElement = null;\n            this.isFocused = false;\n        }, 0);\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/keystrokehandler\n */\nimport DomEmitterMixin from './dom/emittermixin.js';\nimport { getCode, parseKeystroke } from './keyboard.js';\n/**\n * Keystroke handler allows registering callbacks for given keystrokes.\n *\n * The most frequent use of this class is through the {@link module:core/editor/editor~Editor#keystrokes `editor.keystrokes`}\n * property. It allows listening to keystrokes executed in the editing view:\n *\n * ```ts\n * editor.keystrokes.set( 'Ctrl+A', ( keyEvtData, cancel ) => {\n * \tconsole.log( 'Ctrl+A has been pressed' );\n * \tcancel();\n * } );\n * ```\n *\n * However, this utility class can be used in various part of the UI. For instance, a certain {@link module:ui/view~View}\n * can use it like this:\n *\n * ```ts\n * class MyView extends View {\n * \tconstructor() {\n * \t\tthis.keystrokes = new KeystrokeHandler();\n *\n * \t\tthis.keystrokes.set( 'tab', handleTabKey );\n * \t}\n *\n * \trender() {\n * \t\tsuper.render();\n *\n * \t\tthis.keystrokes.listenTo( this.element );\n * \t}\n * }\n * ```\n *\n * That keystroke handler will listen to `keydown` events fired in this view's main element.\n *\n */\nexport default class KeystrokeHandler {\n    /**\n     * Creates an instance of the keystroke handler.\n     */\n    constructor() {\n        this._listener = new (DomEmitterMixin())();\n    }\n    /**\n     * Starts listening for `keydown` events from a given emitter.\n     */\n    listenTo(emitter) {\n        // The #_listener works here as a kind of dispatcher. It groups the events coming from the same\n        // keystroke so the listeners can be attached to them with different priorities.\n        //\n        // E.g. all the keystrokes with the `keyCode` of 42 coming from the `emitter` are propagated\n        // as a `_keydown:42` event by the `_listener`. If there's a callback created by the `set`\n        // method for this 42 keystroke, it listens to the `_listener#_keydown:42` event only and interacts\n        // only with other listeners of this particular event, thus making it possible to prioritize\n        // the listeners and safely cancel execution, when needed. Instead of duplicating the Emitter logic,\n        // the KeystrokeHandler re–uses it to do its job.\n        this._listener.listenTo(emitter, 'keydown', (evt, keyEvtData) => {\n            this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n        });\n    }\n    /**\n     * Registers a handler for the specified keystroke.\n     *\n     * @param keystroke Keystroke defined in a format accepted by\n     * the {@link module:utils/keyboard~parseKeystroke} function.\n     * @param callback A function called with the\n     * {@link module:engine/view/observer/keyobserver~KeyEventData key event data} object and\n     * a helper function to call both `preventDefault()` and `stopPropagation()` on the underlying event.\n     * @param options Additional options.\n     * @param options.priority The priority of the keystroke\n     * callback. The higher the priority value the sooner the callback will be executed. Keystrokes having the same priority\n     * are called in the order they were added.\n     */\n    set(keystroke, callback, options = {}) {\n        const keyCode = parseKeystroke(keystroke);\n        const priority = options.priority;\n        // Execute the passed callback on KeystrokeHandler#_keydown.\n        // TODO: https://github.com/ckeditor/ckeditor5-utils/issues/144\n        this._listener.listenTo(this._listener, '_keydown:' + keyCode, (evt, keyEvtData) => {\n            callback(keyEvtData, () => {\n                // Stop the event in the DOM: no listener in the web page\n                // will be triggered by this event.\n                keyEvtData.preventDefault();\n                keyEvtData.stopPropagation();\n                // Stop the event in the KeystrokeHandler: no more callbacks\n                // will be executed for this keystroke.\n                evt.stop();\n            });\n            // Mark this keystroke as handled by the callback. See: #press.\n            evt.return = true;\n        }, { priority });\n    }\n    /**\n     * Triggers a keystroke handler for a specified key combination, if such a keystroke was {@link #set defined}.\n     *\n     * @param keyEvtData Key event data.\n     * @returns Whether the keystroke was handled.\n     */\n    press(keyEvtData) {\n        return !!this._listener.fire('_keydown:' + getCode(keyEvtData), keyEvtData);\n    }\n    /**\n     * Stops listening to `keydown` events from the given emitter.\n     */\n    stopListening(emitter) {\n        this._listener.stopListening(emitter);\n    }\n    /**\n     * Destroys the keystroke handler.\n     */\n    destroy() {\n        this.stopListening();\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/objecttomap\n */\n/**\n * Transforms object to map.\n *\n * ```ts\n * const map = objectToMap( { 'foo': 1, 'bar': 2 } );\n * map.get( 'foo' ); // 1\n * ```\n *\n * **Note**: For mixed data (`Object` or `Iterable`) there's a dedicated {@link module:utils/tomap~toMap} function.\n *\n * @param obj Object to transform.\n * @returns Map created from object.\n */\nexport default function objectToMap(obj) {\n    const map = new Map();\n    for (const key in obj) {\n        map.set(key, obj[key]);\n    }\n    return map;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/tomap\n */\nimport objectToMap from './objecttomap.js';\nimport isIterable from './isiterable.js';\n/**\n * Transforms object or iterable to map. Iterable needs to be in the format acceptable by the `Map` constructor.\n *\n * ```ts\n * map = toMap( { 'foo': 1, 'bar': 2 } );\n * map = toMap( [ [ 'foo', 1 ], [ 'bar', 2 ] ] );\n * map = toMap( anotherMap );\n * ```\n *\n * @param data Object or iterable to transform.\n * @returns Map created from data.\n */\nexport default function toMap(data) {\n    if (isIterable(data)) {\n        return new Map(data);\n    }\n    else {\n        return objectToMap(data);\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/splicearray\n */\nconst BIG_CHUNK_SIZE = 10000;\n/**\n * Splices one array into another. To be used instead of `Array.prototype.splice` as the latter may\n * throw \"Maximum call stack size exceeded\" when passed huge number of items to insert.\n *\n * Note: in contrary to Array.splice, this function does not modify the original `target`.\n *\n * ```ts\n * spliceArray( [ 1, 2 ], [ 3, 4 ], 0, 0 );\t// [ 3, 4, 1, 2 ]\n * spliceArray( [ 1, 2 ], [ 3, 4 ], 1, 1 );\t// [ 1, 3, 4 ]\n * spliceArray( [ 1, 2 ], [ 3, 4 ], 1, 0 );\t// [ 1, 3, 4, 2 ]\n * spliceArray( [ 1, 2 ], [ 3, 4 ], 2, 0 );\t// [ 1, 2, 3, 4 ]\n * spliceArray( [ 1, 2 ], [],       0, 1 );\t// [ 2 ]\n * ```\n *\n * @param target Array to be spliced.\n * @param source Array of elements to be inserted to target.\n * @param start Index at which nodes should be inserted/removed.\n * @param count Number of items.\n *\n * @returns New spliced array.\n */\nexport default function spliceArray(target, source, start, count) {\n    // In case of performance problems, see: https://github.com/ckeditor/ckeditor5/pull/12429/files#r965850568\n    if (Math.max(source.length, target.length) > BIG_CHUNK_SIZE) {\n        return target.slice(0, start).concat(source).concat(target.slice(start + count, target.length));\n    }\n    else {\n        const newTarget = Array.from(target);\n        newTarget.splice(start, count, ...source);\n        return newTarget;\n    }\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/delay\n */\n/* globals setTimeout, clearTimeout */\n/**\n * Returns a function wrapper that will trigger a function after a specified wait time.\n * The timeout can be canceled by calling the cancel function on the returned wrapped function.\n *\n * @param func The function to wrap.\n * @param wait The timeout in ms.\n */\nexport default function delay(func, wait) {\n    let timer;\n    function delayed(...args) {\n        delayed.cancel();\n        timer = setTimeout(() => func(...args), wait);\n    }\n    delayed.cancel = () => {\n        clearTimeout(timer);\n    };\n    return delayed;\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * @module utils/verifylicense\n */\nimport { releaseDate } from './version.js';\n/**\n * Checks whether the given string contains information that allows you to verify the license status.\n *\n * @param token The string to check.\n * @returns String that represents the state of given `token` parameter.\n */\nexport default function verifyLicense(token) {\n    // This function implements naive and partial license key check mechanism,\n    // used only to decide whether to show or hide the \"Powered by CKEditor\" logo.\n    //\n    // You can read the reasoning behind showing the logo to unlicensed (GPL) users\n    // in this thread: https://github.com/ckeditor/ckeditor5/issues/14082.\n    //\n    // We firmly believe in the values behind creating open-source software, even when that\n    // means keeping the license verification logic open for everyone to see.\n    //\n    // Please keep this code intact. Thank you for your understanding.\n    function oldTokenCheck(token) {\n        if (token.length >= 40 && token.length <= 255) {\n            return 'VALID';\n        }\n        else {\n            return 'INVALID';\n        }\n    }\n    // TODO: issue ci#3175\n    if (!token) {\n        return 'INVALID';\n    }\n    let decryptedData = '';\n    try {\n        decryptedData = atob(token);\n    }\n    catch (e) {\n        return 'INVALID';\n    }\n    const splittedDecryptedData = decryptedData.split('-');\n    const firstElement = splittedDecryptedData[0];\n    const secondElement = splittedDecryptedData[1];\n    if (!secondElement) {\n        return oldTokenCheck(token);\n    }\n    try {\n        atob(secondElement);\n    }\n    catch (e) {\n        try {\n            atob(firstElement);\n            if (!atob(firstElement).length) {\n                return oldTokenCheck(token);\n            }\n        }\n        catch (e) {\n            return oldTokenCheck(token);\n        }\n    }\n    if (firstElement.length < 40 || firstElement.length > 255) {\n        return 'INVALID';\n    }\n    let decryptedSecondElement = '';\n    try {\n        atob(firstElement);\n        decryptedSecondElement = atob(secondElement);\n    }\n    catch (e) {\n        return 'INVALID';\n    }\n    if (decryptedSecondElement.length !== 8) {\n        return 'INVALID';\n    }\n    const year = Number(decryptedSecondElement.substring(0, 4));\n    const monthIndex = Number(decryptedSecondElement.substring(4, 6)) - 1;\n    const day = Number(decryptedSecondElement.substring(6, 8));\n    const date = new Date(year, monthIndex, day);\n    if (date < releaseDate || isNaN(Number(date))) {\n        return 'INVALID';\n    }\n    return 'VALID';\n}\n", "/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n/**\n * Set of utils to handle unicode characters.\n *\n * @module utils/unicode\n */\n/**\n * Checks whether given `character` is a combining mark.\n *\n * @param character Character to check.\n */\nexport function isCombiningMark(character) {\n    // eslint-disable-next-line no-misleading-character-class\n    return !!character && character.length == 1 && /[\\u0300-\\u036f\\u1ab0-\\u1aff\\u1dc0-\\u1dff\\u20d0-\\u20ff\\ufe20-\\ufe2f]/.test(character);\n}\n/**\n * Checks whether given `character` is a high half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param character Character to check.\n */\nexport function isHighSurrogateHalf(character) {\n    return !!character && character.length == 1 && /[\\ud800-\\udbff]/.test(character);\n}\n/**\n * Checks whether given `character` is a low half of surrogate pair.\n *\n * Using UTF-16 terminology, a surrogate pair denotes UTF-16 character using two UTF-8 characters. The surrogate pair\n * consist of high surrogate pair character followed by low surrogate pair character.\n *\n * @param character Character to check.\n */\nexport function isLowSurrogateHalf(character) {\n    return !!character && character.length == 1 && /[\\udc00-\\udfff]/.test(character);\n}\n/**\n * Checks whether given offset in a string is inside a surrogate pair (between two surrogate halves).\n *\n * @param string String to check.\n * @param offset Offset to check.\n */\nexport function isInsideSurrogatePair(string, offset) {\n    return isHighSurrogateHalf(string.charAt(offset - 1)) && isLowSurrogateHalf(string.charAt(offset));\n}\n/**\n * Checks whether given offset in a string is between base character and combining mark or between two combining marks.\n *\n * @param string String to check.\n * @param offset Offset to check.\n */\nexport function isInsideCombinedSymbol(string, offset) {\n    return isCombiningMark(string.charAt(offset));\n}\nconst EMOJI_PATTERN = buildEmojiRegexp();\n/**\n * Checks whether given offset in a string is inside multi-character emoji sequence.\n *\n * @param string String to check.\n * @param offset Offset to check.\n */\nexport function isInsideEmojiSequence(string, offset) {\n    const matches = String(string).matchAll(EMOJI_PATTERN);\n    return Array.from(matches).some(match => match.index < offset && offset < match.index + match[0].length);\n}\nfunction buildEmojiRegexp() {\n    const parts = [\n        // Emoji Tag Sequence (ETS)\n        /\\p{Emoji}[\\u{E0020}-\\u{E007E}]+\\u{E007F}/u,\n        // Emoji Keycap Sequence\n        /\\p{Emoji}\\u{FE0F}?\\u{20E3}/u,\n        // Emoji Presentation Sequence\n        /\\p{Emoji}\\u{FE0F}/u,\n        // Single-Character Emoji / Emoji Modifier Sequence\n        /(?=\\p{General_Category=Other_Symbol})\\p{Emoji}\\p{Emoji_Modifier}*/u\n    ];\n    const flagSequence = /\\p{Regional_Indicator}{2}/u.source;\n    const emoji = '(?:' + parts.map(part => part.source).join('|') + ')';\n    const sequence = `${flagSequence}|${emoji}(?:\\u{200D}${emoji})*`;\n    return new RegExp(sequence, 'ug');\n}\n"],
  "mappings": "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",
  "names": ["spy", "event", "userAgent", "a", "b", "a", "b", "k", "value", "count", "defaultEmitterClass", "window", "rect", "modifiers", "keyCodes", "count", "wait", "token", "e"]
}
